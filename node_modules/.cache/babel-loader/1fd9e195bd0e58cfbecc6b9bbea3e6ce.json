{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useMemo,useState}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage}from'react-intl';import{useFormikContext}from'formik';import{useDebounce}from'use-debounce';import{TextField}from'@welovedevs/ui';import{EditDialog}from'../../../../commons/edit_dialog/edit_dialog';import{EditDialogField}from'../../../../commons/edit_dialog_field/edit_dialog_field';import{LoadingSpinner}from'../../../../commons/loading_spinner/loading_spinner';import{hashCode}from'../../../../../utils/string_utils';import{styles}from'./soundtrack_card_edit_dialog_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var URL_REGEX=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/g;var SPOTIFY_DOMAIN='https://open.spotify.com';export var SoundtrackCardEditDialog=function SoundtrackCardEditDialog(_ref){var open=_ref.open,onClose=_ref.onClose,data=_ref.data,onEdit=_ref.onEdit,isEditing=_ref.isEditing;return/*#__PURE__*/_jsx(EditDialog,{data:data,onEdit:onEdit,onClose:onClose,isEditing:isEditing,open:open,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Sountrack.editDialog.title\",defaultMessage:\"Embed your musical tastes in your profile.\"}),children:function children(helpers){return/*#__PURE__*/_jsx(Content,{helpers:helpers});}});};var Content=function Content(_ref2){var _ref2$helpers=_ref2.helpers,fullScreen=_ref2$helpers.fullScreen,isMobile=_ref2$helpers.isMobile;var classes=useStyles({fullScreen:fullScreen,isMobile:isMobile});var _useFormikContext=useFormikContext(),values=_useFormikContext.values,errors=_useFormikContext.errors,setFieldValue=_useFormikContext.setFieldValue;var embedUrl=values.embedUrl;var _useDebounce=useDebounce(embedUrl,1000),_useDebounce2=_slicedToArray(_useDebounce,1),iframeUrl=_useDebounce2[0];var frameHashCode=useMemo(function(){return hashCode(iframeUrl);},[iframeUrl]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasLoaded=_useState2[0],setHasLoaded=_useState2[1];var handleLoad=useCallback(function(){return setHasLoaded(true);},[]);var handleFieldChange=useCallback(function(event){var value=event.target.value;if(!URL_REGEX.test(value)||!value.startsWith(SPOTIFY_DOMAIN)){return;}var finalValue=value;if(!value.includes('/embed')){finalValue=\"\".concat(value.substring(0,SPOTIFY_DOMAIN.length),\"/embed/\").concat(value.substring(SPOTIFY_DOMAIN.length+1,value.length));}setFieldValue('embedUrl',finalValue);},[setFieldValue,embedUrl]);var clearField=useCallback(function(){setFieldValue('embedUrl','');},[setFieldValue]);var isValidUrl=useMemo(function(){return URL_REGEX.test(iframeUrl)&&(iframeUrl===null||iframeUrl===void 0?void 0:iframeUrl.includes('/embed'));},[iframeUrl]);useEffect(function(){if(isValidUrl){setHasLoaded(null);}},[isValidUrl]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[/*#__PURE__*/_jsx(EditDialogField,{classes:{container:classes.field},error:errors.codingReason,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Soundtrack.editDialog.embedUrl.title\",defaultMessage:\"Enter a Spotify embed URL.\"}),subtitle:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Soundtrack.editDialog.embedUrl.subtitle\",defaultMessage:\"Ex: https://open.spotify.com/embed/album/79dL7FLiJFOO0EoehUHQBv\"}),children:/*#__PURE__*/_jsx(TextField,{onChange:handleFieldChange,name:\"embedUrl\",value:embedUrl,variant:\"flat\",onClick:clearField,onFocus:clearField,fullWidth:true})}),/*#__PURE__*/_jsx(\"div\",{className:classes.divider}),/*#__PURE__*/_jsxs(\"div\",{className:classes.iframeContainer,children:[hasLoaded===null&&/*#__PURE__*/_jsx(LoadingSpinner,{}),iframeUrl&&/*#__PURE__*/_jsx(\"iframe\",{className:classes.iframe,title:\"Soundtrack\",src:iframeUrl,height:\"100%\",width:600,frameBorder:\"0\",allow:\"encrypted-media\",onLoad:handleLoad},frameHashCode)]})]});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/soundtrack/edit_dialog/soundtrack_card_edit_dialog.jsx"],"names":["React","useCallback","useEffect","useMemo","useState","createUseStyles","FormattedMessage","useFormikContext","useDebounce","TextField","EditDialog","EditDialogField","LoadingSpinner","hashCode","styles","useStyles","URL_REGEX","SPOTIFY_DOMAIN","SoundtrackCardEditDialog","open","onClose","data","onEdit","isEditing","helpers","Content","fullScreen","isMobile","classes","values","errors","setFieldValue","embedUrl","iframeUrl","frameHashCode","hasLoaded","setHasLoaded","handleLoad","handleFieldChange","event","value","target","test","startsWith","finalValue","includes","substring","length","clearField","isValidUrl","container","field","codingReason","divider","iframeContainer","iframe"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { useFormikContext } from 'formik';\nimport { useDebounce } from 'use-debounce';\n\nimport { TextField } from '@welovedevs/ui';\n\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { EditDialogField } from '../../../../commons/edit_dialog_field/edit_dialog_field';\nimport { LoadingSpinner } from '../../../../commons/loading_spinner/loading_spinner';\n\nimport { hashCode } from '../../../../../utils/string_utils';\n\nimport { styles } from './soundtrack_card_edit_dialog_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst URL_REGEX = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/g;\nconst SPOTIFY_DOMAIN = 'https://open.spotify.com';\n\nexport const SoundtrackCardEditDialog = ({ open, onClose, data, onEdit, isEditing }) => (\n    <EditDialog\n        data={data}\n        onEdit={onEdit}\n        onClose={onClose}\n        isEditing={isEditing}\n        open={open}\n        title={\n            <FormattedMessage\n                id=\"Sountrack.editDialog.title\"\n                defaultMessage=\"Embed your musical tastes in your profile.\"\n            />\n        }\n    >\n        {(helpers) => <Content helpers={helpers} />}\n    </EditDialog>\n);\n\nconst Content = ({ helpers: { fullScreen, isMobile } }) => {\n    const classes = useStyles({ fullScreen, isMobile });\n    const { values, errors, setFieldValue } = useFormikContext();\n    const { embedUrl } = values;\n    const [iframeUrl] = useDebounce(embedUrl, 1000);\n    const frameHashCode = useMemo(() => hashCode(iframeUrl), [iframeUrl]);\n\n    const [hasLoaded, setHasLoaded] = useState(false);\n    const handleLoad = useCallback(() => setHasLoaded(true), []);\n\n    const handleFieldChange = useCallback(\n        (event) => {\n            const {\n                target: { value }\n            } = event;\n            if (!URL_REGEX.test(value) || !value.startsWith(SPOTIFY_DOMAIN)) {\n                return;\n            }\n            let finalValue = value;\n            if (!value.includes('/embed')) {\n                finalValue = `${value.substring(0, SPOTIFY_DOMAIN.length)}/embed/${value.substring(\n                    SPOTIFY_DOMAIN.length + 1,\n                    value.length\n                )}`;\n            }\n            setFieldValue('embedUrl', finalValue);\n        },\n        [setFieldValue, embedUrl]\n    );\n\n    const clearField = useCallback(() => {\n        setFieldValue('embedUrl', '');\n    }, [setFieldValue]);\n\n    const isValidUrl = useMemo(() => URL_REGEX.test(iframeUrl) && iframeUrl?.includes('/embed'), [iframeUrl]);\n\n    useEffect(() => {\n        if (isValidUrl) {\n            setHasLoaded(null);\n        }\n    }, [isValidUrl]);\n\n    return (\n        <div className={classes.container}>\n            <EditDialogField\n                classes={{ container: classes.field }}\n                error={errors.codingReason}\n                title={\n                    <FormattedMessage\n                        id=\"Soundtrack.editDialog.embedUrl.title\"\n                        defaultMessage=\"Enter a Spotify embed URL.\"\n                    />\n                }\n                subtitle={\n                    <FormattedMessage\n                        id=\"Soundtrack.editDialog.embedUrl.subtitle\"\n                        defaultMessage=\"Ex: https://open.spotify.com/embed/album/79dL7FLiJFOO0EoehUHQBv\"\n                    />\n                }\n            >\n                <TextField\n                    onChange={handleFieldChange}\n                    name=\"embedUrl\"\n                    value={embedUrl}\n                    variant=\"flat\"\n                    onClick={clearField}\n                    onFocus={clearField}\n                    fullWidth\n                />\n            </EditDialogField>\n            <div className={classes.divider} />\n            <div className={classes.iframeContainer}>\n                {hasLoaded === null && <LoadingSpinner />}\n                {iframeUrl && (\n                    <iframe\n                        className={classes.iframe}\n                        key={frameHashCode}\n                        title=\"Soundtrack\"\n                        src={iframeUrl}\n                        height=\"100%\"\n                        width={600}\n                        frameBorder=\"0\"\n                        allow=\"encrypted-media\"\n                        onLoad={handleLoad}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useCallback,useMemo}from'react';import{FormattedMessage}from'react-intl';import{createUseStyles,useTheme}from'react-jss';import chroma from'chroma-js';import{Typography}from'@welovedevs/ui';import{ProfileCardPaddedFront}from'../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';import{CenterContentContainer}from'../../../../commons/center_content_container/center_content_container';import{ProfileCardFrontTypography}from'../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';import{ProfileCardActions}from'../../../../commons/profile_card/profile_card_actions/profile_card_actions';import{ProfileCardButton}from'../../../../commons/profile_card/profile_card_button/profile_card_button';import{useTechnologies}from'../../../../hooks/technologies/use_technologies';import{useCardSide}from'../../../../hooks/profile_card_hooks/use_card_side';import{SIDES}from'../../../../commons/profile_card/profile_card_side/side';import{styles}from'./skills_front_styles';import{useCardVariant}from'../../../../hooks/profile_card_hooks/use_card_variant';import{getColorsFromCardVariant,getHexFromPaletteColor}from'../../../../../utils/styles/styles_utils';import{existsAndNotEmpty}from'../../../utils/exists_and_not_empty';import{NoDataButton}from'../../../../commons/no_data_button/no_data_button';import{DEFAULT_TECHNO_HANDLE}from'../../../../../utils/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var SkillsFrontComponent=function SkillsFrontComponent(_ref){var data=_ref.data,handleAddButtonClick=_ref.handleAddButtonClick;var classes=useStyles();var _useCardSide=useCardSide(),_useCardSide2=_slicedToArray(_useCardSide,2),side=_useCardSide2[0],setSide=_useCardSide2[1];var handleButtonClick=useCallback(function(){return setSide(side===SIDES.FRONT?SIDES.BACK:SIDES.FRONT);},[side,setSide]);var _useTechnologies=useTechnologies(),technologies=_useTechnologies.technologies;var techno=useMemo(function(){var _data$skills;var firstTechno=data===null||data===void 0?void 0:(_data$skills=data.skills)===null||_data$skills===void 0?void 0:_data$skills[0];if(!technologies||!firstTechno){return{name:firstTechno===null||firstTechno===void 0?void 0:firstTechno.name};}return technologies[firstTechno===null||firstTechno===void 0?void 0:firstTechno.name]||{name:firstTechno===null||firstTechno===void 0?void 0:firstTechno.name};},[technologies,data]);var hasSkill=useMemo(function(){return existsAndNotEmpty(data===null||data===void 0?void 0:data.skills);},[data]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProfileCardPaddedFront,{children:/*#__PURE__*/_jsx(CenterContentContainer,{classes:{container:classes.container},children:/*#__PURE__*/_jsx(Content,{hasSkill:hasSkill,techno:techno,handleAddButtonClick:handleAddButtonClick,classes:classes})})}),hasSkill&&/*#__PURE__*/_jsx(ProfileCardActions,{children:/*#__PURE__*/_jsx(ProfileCardButton,{onClick:handleButtonClick,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Skills.front.action\",defaultMessage:\"More skills\"})})})]});};var Content=function Content(_ref2){var hasSkill=_ref2.hasSkill,techno=_ref2.techno,handleAddButtonClick=_ref2.handleAddButtonClick,classes=_ref2.classes;if(hasSkill){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Picture,{techno:techno,classes:classes}),/*#__PURE__*/_jsx(ProfileCardFrontTypography,{classes:{container:classes.typography},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Skills.front.title\",defaultMessage:\"I mainly write {techno} stuff\",values:{techno:techno===null||techno===void 0?void 0:techno.name}})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.noSkill,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h3\",classes:{container:classes.noSkillTypography},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Skills.front.noSkill\",defaultMessage:\"Vous n'avez pas encore ajout\\xE9 de comp\\xE9tences !\"})}),/*#__PURE__*/_jsx(NoDataButton,{handleAddButtonClick:handleAddButtonClick,classes:{container:classes.addButton},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Skills.noSkill.buttonLabel\",defaultMessage:\"Ajouter une comp\\xE9tence\"})})]});};var Picture=function Picture(_ref3){var techno=_ref3.techno,classes=_ref3.classes;var theme=useTheme();var _useCardVariant=useCardVariant(),_useCardVariant2=_slicedToArray(_useCardVariant,1),variant=_useCardVariant2[0];var _getColorsFromCardVar=getColorsFromCardVariant(theme,variant),backgroundColor=_getColorsFromCardVar.backgroundColor;var src=useMemo(function(){var hex=getHexFromPaletteColor(theme,backgroundColor);var luminance=chroma(hex).luminance();if(luminance<0.98){return\"https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/\".concat((techno===null||techno===void 0?void 0:techno.handle)||DEFAULT_TECHNO_HANDLE);}return\"https://process.filestackapi.com/output=format:png/\".concat((techno===null||techno===void 0?void 0:techno.handle)||DEFAULT_TECHNO_HANDLE);},[techno,theme,backgroundColor]);if(!src||!techno){return null;}return/*#__PURE__*/_jsx(\"img\",{src:src,alt:techno===null||techno===void 0?void 0:techno.name,className:classes.logo});};export var SkillsFront=/*#__PURE__*/memo(SkillsFrontComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/skills/skills_front/skills_front.jsx"],"names":["React","memo","useCallback","useMemo","FormattedMessage","createUseStyles","useTheme","chroma","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardFrontTypography","ProfileCardActions","ProfileCardButton","useTechnologies","useCardSide","SIDES","styles","useCardVariant","getColorsFromCardVariant","getHexFromPaletteColor","existsAndNotEmpty","NoDataButton","DEFAULT_TECHNO_HANDLE","useStyles","SkillsFrontComponent","data","handleAddButtonClick","classes","side","setSide","handleButtonClick","FRONT","BACK","technologies","techno","firstTechno","skills","name","hasSkill","container","Content","typography","noSkill","noSkillTypography","addButton","Picture","theme","variant","backgroundColor","src","hex","luminance","handle","logo","SkillsFront"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport chroma from 'chroma-js';\n\nimport { Typography } from '@welovedevs/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\n\nimport { useTechnologies } from '../../../../hooks/technologies/use_technologies';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nimport { styles } from './skills_front_styles';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../utils/styles/styles_utils';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { DEFAULT_TECHNO_HANDLE } from '../../../../../utils/icons';\n\nconst useStyles = createUseStyles(styles);\n\nconst SkillsFrontComponent = ({ data, handleAddButtonClick }) => {\n    const classes = useStyles();\n    const [side, setSide] = useCardSide();\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    const { technologies } = useTechnologies();\n\n    const techno = useMemo(() => {\n        const firstTechno = data?.skills?.[0];\n\n        if (!technologies || !firstTechno) {\n            return { name: firstTechno?.name };\n        }\n        return technologies[firstTechno?.name] || { name: firstTechno?.name };\n    }, [technologies, data]);\n\n    const hasSkill = useMemo(() => existsAndNotEmpty(data?.skills), [data]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront>\n                <CenterContentContainer classes={{ container: classes.container }}>\n                    <Content {...{ hasSkill, techno, handleAddButtonClick, classes }} />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {hasSkill && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"Skills.front.action\" defaultMessage=\"More skills\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ hasSkill, techno, handleAddButtonClick, classes }) => {\n    if (hasSkill) {\n        return (\n            <>\n                <Picture techno={techno} classes={classes} />\n                <ProfileCardFrontTypography classes={{ container: classes.typography }}>\n                    <FormattedMessage\n                        id=\"Skills.front.title\"\n                        defaultMessage=\"I mainly write {techno} stuff\"\n                        values={{ techno: techno?.name }}\n                    />\n                </ProfileCardFrontTypography>\n            </>\n        );\n    }\n    return (\n        <div className={classes.noSkill}>\n            <Typography variant=\"h3\" component=\"h3\" classes={{ container: classes.noSkillTypography }}>\n                <FormattedMessage\n                    id=\"Skills.front.noSkill\"\n                    defaultMessage=\"Vous n'avez pas encore ajouté de compétences !\"\n                />\n            </Typography>\n            <NoDataButton\n                handleAddButtonClick={handleAddButtonClick}\n                classes={{\n                    container: classes.addButton\n                }}\n            >\n                <FormattedMessage id=\"Skills.noSkill.buttonLabel\" defaultMessage=\"Ajouter une compétence\" />\n            </NoDataButton>\n        </div>\n    );\n};\n\nconst Picture = ({ techno, classes }) => {\n    const theme = useTheme();\n    const [variant] = useCardVariant();\n    const { backgroundColor } = getColorsFromCardVariant(theme, variant);\n    const src = useMemo(() => {\n        const hex = getHexFromPaletteColor(theme, backgroundColor);\n        const luminance = chroma(hex).luminance();\n        if (luminance < 0.98) {\n            return `https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/${\n                techno?.handle || DEFAULT_TECHNO_HANDLE\n            }`;\n        }\n        return `https://process.filestackapi.com/output=format:png/${techno?.handle || DEFAULT_TECHNO_HANDLE}`;\n    }, [techno, theme, backgroundColor]);\n    if (!src || !techno) {\n        return null;\n    }\n    return <img src={src} alt={techno?.name} className={classes.logo} />;\n};\n\nexport const SkillsFront = memo(SkillsFrontComponent);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{createScreenWidthMediaQuery,getContrastDefaultColorFromPaletteColor,getHexFromPaletteColor}from'../../../../../utils/styles/styles_utils';export var styles=function styles(theme){var _ref;var palette=theme.palette,spacing=theme.miscellaneous.spacing;return _ref={itemContainer:{display:'flex',alignItems:'center',width:'100%',borderRadius:5,margin:[spacing*2,0],padding:[0,spacing]},actions:{display:'flex'},divider:{margin:[0,spacing*2],height:50,width:1,backgroundColor:palette.dark[50]},listItem:{flex:1,padding:0,display:'flex',alignItems:'center'},sortableHelper:{zIndex:1301},removeIcon:{fill:palette.danger[500]},fieldGroup:{width:'100%',display:'flex',flexDirection:'column'},field:{display:'flex',flexDirection:'column',margin:theme.miscellaneous.spacing},sliderValueContainer:{flexDirection:'row',alignItems:'center'},sliderValue:{marginRight:spacing*2,width:spacing*10,marginBottom:0},slider:{margin:theme.miscellaneous.spacing*2},sliderPopperCard:{backgroundColor:getHexFromPaletteColor(theme,'primary'),color:getHexFromPaletteColor(theme,getContrastDefaultColorFromPaletteColor(theme,'primary'))},sliderPopperCardArrowContainer:{'& > svg':{'& path':{fill:[getHexFromPaletteColor(theme,'primary'),'!important']}}},listItemError:{},handleIcon:{fill:'#5f5f5f !important',marginRight:theme.miscellaneous.spacing*2,'&:hover':{cursor:'move'}},tag:{cursor:'move'},icon:{maxHeight:18,maxWidth:18,marginLeft:theme.miscellaneous.spacing},dragHandle:{width:32,height:32},addButton:{display:'flex',alignItems:'center',cursor:'pointer'},addTag:{padding:theme.miscellaneous.spacing},addIcon:{extend:'icon'},bolden:{fontWeight:500},selectIcon:{'& svg':{fill:'none !important'}}},_defineProperty(_ref,createScreenWidthMediaQuery('max-width',900),{listItem:{flexWrap:'wrap'}}),_defineProperty(_ref,createScreenWidthMediaQuery('max-width',theme.screenSizes.small),{itemContainer:{flexDirection:'column',alignItems:'unset'},field:{flex:1},fieldGroup:{flexDirection:'row'},sliderValueContainer:{alignItems:'unset',flexDirection:'column'}}),_ref;};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/languages/languages_edit_dialog/languages_edit_dialog_styles.js"],"names":["createScreenWidthMediaQuery","getContrastDefaultColorFromPaletteColor","getHexFromPaletteColor","styles","theme","palette","spacing","miscellaneous","itemContainer","display","alignItems","width","borderRadius","margin","padding","actions","divider","height","backgroundColor","dark","listItem","flex","sortableHelper","zIndex","removeIcon","fill","danger","fieldGroup","flexDirection","field","sliderValueContainer","sliderValue","marginRight","marginBottom","slider","sliderPopperCard","color","sliderPopperCardArrowContainer","listItemError","handleIcon","cursor","tag","icon","maxHeight","maxWidth","marginLeft","dragHandle","addButton","addTag","addIcon","extend","bolden","fontWeight","selectIcon","flexWrap","screenSizes","small"],"mappings":"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","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    getContrastDefaultColorFromPaletteColor,\n    getHexFromPaletteColor\n} from '../../../../../utils/styles/styles_utils';\n\nexport const styles = (theme) => {\n    const {\n        palette,\n        miscellaneous: { spacing }\n    } = theme;\n    return {\n        itemContainer: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            borderRadius: 5,\n            margin: [spacing * 2, 0],\n            padding: [0, spacing]\n        },\n        actions: {\n            display: 'flex'\n        },\n        divider: {\n            margin: [0, spacing * 2],\n            height: 50,\n            width: 1,\n            backgroundColor: palette.dark[50]\n        },\n        listItem: {\n            flex: 1,\n            padding: 0,\n            display: 'flex',\n            alignItems: 'center'\n        },\n        sortableHelper: {\n            zIndex: 1301\n        },\n        removeIcon: {\n            fill: palette.danger[500]\n        },\n        fieldGroup: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        field: {\n            display: 'flex',\n            flexDirection: 'column',\n            margin: theme.miscellaneous.spacing\n        },\n        sliderValueContainer: {\n            flexDirection: 'row',\n            alignItems: 'center'\n        },\n        sliderValue: {\n            marginRight: spacing * 2,\n            width: spacing * 10,\n            marginBottom: 0\n        },\n        slider: {\n            margin: theme.miscellaneous.spacing * 2\n        },\n        sliderPopperCard: {\n            backgroundColor: getHexFromPaletteColor(theme, 'primary'),\n            color: getHexFromPaletteColor(theme, getContrastDefaultColorFromPaletteColor(theme, 'primary'))\n        },\n        sliderPopperCardArrowContainer: {\n            '& > svg': {\n                '& path': {\n                    fill: [getHexFromPaletteColor(theme, 'primary'), '!important']\n                }\n            }\n        },\n        listItemError: {},\n        handleIcon: {\n            fill: '#5f5f5f !important',\n            marginRight: theme.miscellaneous.spacing * 2,\n            '&:hover': {\n                cursor: 'move'\n            }\n        },\n        tag: {\n            cursor: 'move'\n        },\n        icon: {\n            maxHeight: 18,\n            maxWidth: 18,\n            marginLeft: theme.miscellaneous.spacing\n        },\n        dragHandle: {\n            width: 32,\n            height: 32\n        },\n        addButton: {\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer'\n        },\n        addTag: {\n            padding: theme.miscellaneous.spacing\n        },\n        addIcon: {\n            extend: 'icon'\n        },\n        bolden: {\n            fontWeight: 500\n        },\n        selectIcon: {\n            '& svg': {\n                fill: 'none !important'\n            }\n        },\n        [createScreenWidthMediaQuery('max-width', 900)]: {\n            listItem: {\n                flexWrap: 'wrap'\n            }\n        },\n        [createScreenWidthMediaQuery('max-width', theme.screenSizes.small)]: {\n            itemContainer: {\n                flexDirection: 'column',\n                alignItems: 'unset'\n            },\n            field: {\n                flex: 1\n            },\n            fieldGroup: {\n                flexDirection: 'row'\n            },\n            sliderValueContainer: {\n                alignItems: 'unset',\n                flexDirection: 'column'\n            }\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useMemo}from'react';import{ProfileCard}from'../../../commons/profile_card/profile_card';import{DreamJobFront}from'./dream_job_front/dream_job_front';import{DreamJobBack}from'./dream_job_back/dream_job_back';import{DreamJobCardEditDialog}from'./dream_job_edit_dialog/dream_job_card_edit_dialog';import{DreamJobValidationSchema,validateDreamjobComplete}from'./data/validator';import{mapDreamJobFromJsonResume,mapDreamJobToJsonResume}from'./data/mapping';import{DeveloperProfileContext}from'../../../../utils/context/contexts';import{useMode}from'../../../hooks/use_mode';import{jsx as _jsx}from\"react/jsx-runtime\";var DreamJobCardComponent=function DreamJobCardComponent(_ref){var variant=_ref.variant,side=_ref.side;var _useMode=useMode(),_useMode2=_slicedToArray(_useMode,1),mode=_useMode2[0];var _useContext=useContext(DeveloperProfileContext),data=_useContext.data,isEditing=_useContext.isEditing,onEdit=_useContext.onEdit;var mappedData=useMemo(function(){return mapDreamJobFromJsonResume(data);},[data]);var onDialogEdited=useCallback(function(editedData){onEdit(mapDreamJobToJsonResume(editedData));},[onEdit]);var isComplete=useMemo(function(){return validateDreamjobComplete(mappedData);},[mappedData]);if(!isComplete&&mode!=='edit'){return null;}return/*#__PURE__*/_jsx(ProfileCard,{kind:\"dreamjob\",isEditingProfile:isEditing,isComplete:isComplete,data:mappedData,sides:{front:DreamJobFront,back:DreamJobBack},editDialog:{component:DreamJobCardEditDialog,validationSchema:DreamJobValidationSchema,onEdit:onDialogEdited},variant:variant,side:side});};export var DreamJobCard=DreamJobCardComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/dream_job/dream_job_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","DreamJobFront","DreamJobBack","DreamJobCardEditDialog","DreamJobValidationSchema","validateDreamjobComplete","mapDreamJobFromJsonResume","mapDreamJobToJsonResume","DeveloperProfileContext","useMode","DreamJobCardComponent","variant","side","mode","data","isEditing","onEdit","mappedData","onDialogEdited","editedData","isComplete","front","back","component","validationSchema","DreamJobCard"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,OAAzC,KAAwD,OAAxD,CAEA,OAASC,WAAT,KAA4B,4CAA5B,CACA,OAASC,aAAT,KAA8B,mCAA9B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,sBAAT,KAAuC,oDAAvC,CACA,OAASC,wBAAT,CAAmCC,wBAAnC,KAAmE,kBAAnE,CAEA,OAASC,yBAAT,CAAoCC,uBAApC,KAAmE,gBAAnE,CACA,OAASC,uBAAT,KAAwC,oCAAxC,CACA,OAASC,OAAT,KAAwB,yBAAxB,C,2CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAAuB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,cAClCH,OAAO,EAD2B,sCAC1CI,IAD0C,8BAEbf,UAAU,CAACU,uBAAD,CAFG,CAEzCM,IAFyC,aAEzCA,IAFyC,CAEnCC,SAFmC,aAEnCA,SAFmC,CAExBC,MAFwB,aAExBA,MAFwB,CAGjD,GAAMC,CAAAA,UAAU,CAAGlB,OAAO,CAAC,iBAAMO,CAAAA,yBAAyB,CAACQ,IAAD,CAA/B,EAAD,CAAwC,CAACA,IAAD,CAAxC,CAA1B,CAEA,GAAMI,CAAAA,cAAc,CAAGrB,WAAW,CAC9B,SAACsB,UAAD,CAAgB,CACZH,MAAM,CAACT,uBAAuB,CAACY,UAAD,CAAxB,CAAN,CACH,CAH6B,CAI9B,CAACH,MAAD,CAJ8B,CAAlC,CAOA,GAAMI,CAAAA,UAAU,CAAGrB,OAAO,CAAC,iBAAMM,CAAAA,wBAAwB,CAACY,UAAD,CAA9B,EAAD,CAA6C,CAACA,UAAD,CAA7C,CAA1B,CAEA,GAAI,CAACG,UAAD,EAAeP,IAAI,GAAK,MAA5B,CAAoC,CAChC,MAAO,KAAP,CACH,CAED,mBACI,KAAC,WAAD,EACI,IAAI,CAAC,UADT,CAEI,gBAAgB,CAAEE,SAFtB,CAGI,UAAU,CAAEK,UAHhB,CAII,IAAI,CAAEH,UAJV,CAKI,KAAK,CAAE,CACHI,KAAK,CAAEpB,aADJ,CAEHqB,IAAI,CAAEpB,YAFH,CALX,CASI,UAAU,CAAE,CACRqB,SAAS,CAAEpB,sBADH,CAERqB,gBAAgB,CAAEpB,wBAFV,CAGRY,MAAM,CAAEE,cAHA,CAThB,CAcI,OAAO,CAAEP,OAdb,CAeI,IAAI,CAAEC,IAfV,EADJ,CAmBH,CArCD,CAuCA,MAAO,IAAMa,CAAAA,YAAY,CAAGf,qBAArB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { DreamJobFront } from './dream_job_front/dream_job_front';\nimport { DreamJobBack } from './dream_job_back/dream_job_back';\nimport { DreamJobCardEditDialog } from './dream_job_edit_dialog/dream_job_card_edit_dialog';\nimport { DreamJobValidationSchema, validateDreamjobComplete } from './data/validator';\n\nimport { mapDreamJobFromJsonResume, mapDreamJobToJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst DreamJobCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing, onEdit } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapDreamJobFromJsonResume(data), [data]);\n\n    const onDialogEdited = useCallback(\n        (editedData) => {\n            onEdit(mapDreamJobToJsonResume(editedData));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateDreamjobComplete(mappedData), [mappedData]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n\n    return (\n        <ProfileCard\n            kind=\"dreamjob\"\n            isEditingProfile={isEditing}\n            isComplete={isComplete}\n            data={mappedData}\n            sides={{\n                front: DreamJobFront,\n                back: DreamJobBack\n            }}\n            editDialog={{\n                component: DreamJobCardEditDialog,\n                validationSchema: DreamJobValidationSchema,\n                onEdit: onDialogEdited\n            }}\n            variant={variant}\n            side={side}\n        />\n    );\n};\n\nexport const DreamJobCard = DreamJobCardComponent;\n"]},"metadata":{},"sourceType":"module"}
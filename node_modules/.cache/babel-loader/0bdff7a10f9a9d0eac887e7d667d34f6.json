{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useEffect,useState}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage}from'react-intl';import{PopperCard,Typography}from'@welovedevs/ui';import{ReactComponent as WarnIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/icons/warn.svg\";import{styles}from'./profile_card_incomplete_popper_styles';import{useMode}from'../../../hooks/use_mode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var ProfileCardIncompletePopperComponent=function ProfileCardIncompletePopperComponent(_ref){var open=_ref.open,onClose=_ref.onClose,anchorElement=_ref.anchorElement;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasBeenMounted=_useState2[0],setHasBeenMouneted=_useState2[1];var _useMode=useMode(),_useMode2=_slicedToArray(_useMode,1),mode=_useMode2[0];useEffect(function(){return setHasBeenMouneted(true);},[]);if(mode!=='edit'||!open||!hasBeenMounted){return null;}return/*#__PURE__*/_jsxs(PopperCard,{classes:{container:classes.container,arrowContainer:classes.arrowContainer},open:open,onClose:onClose,anchorElement:anchorElement,popperProps:{placement:'top-start',disablePortal:true,modifiers:{preventOverflow:{enabled:false},hide:{enabled:false},flip:{behavior:['top-start']}}},children:[/*#__PURE__*/_jsx(WarnIcon,{className:classes.icon}),/*#__PURE__*/_jsx(Typography,{color:\"light\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"ProfileCardIncompletePopper.label.value\",defaultMessage:\"This card is missing data\"})})]});};export var ProfileCardIncompletePopper=/*#__PURE__*/memo(ProfileCardIncompletePopperComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/profile_card/profile_card_incomplete_popper/profile_card_incomplete_popper.jsx"],"names":["React","memo","useEffect","useState","createUseStyles","FormattedMessage","PopperCard","Typography","styles","useMode","useStyles","ProfileCardIncompletePopperComponent","open","onClose","anchorElement","classes","hasBeenMounted","setHasBeenMouneted","mode","container","arrowContainer","placement","disablePortal","modifiers","preventOverflow","enabled","hide","flip","behavior","icon","ProfileCardIncompletePopper"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CAEA,OAASC,eAAT,KAAgC,WAAhC,CACA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,gBAAvC,C,8GAIA,OAASC,MAAT,KAAuB,yCAAvB,CACA,OAASC,OAAT,KAAwB,yBAAxB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGN,eAAe,CAACI,MAAD,CAAjC,CAEA,GAAMG,CAAAA,oCAAoC,CAAG,QAAvCA,CAAAA,oCAAuC,MAAsC,IAAnCC,CAAAA,IAAmC,MAAnCA,IAAmC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,aAAoB,MAApBA,aAAoB,CAC/E,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CAD+E,cAElCP,QAAQ,CAAC,KAAD,CAF0B,wCAExEa,cAFwE,eAExDC,kBAFwD,4BAGhER,OAAO,EAHyD,sCAGxES,IAHwE,cAK/EhB,SAAS,CAAC,iBAAMe,CAAAA,kBAAkB,CAAC,IAAD,CAAxB,EAAD,CAAiC,EAAjC,CAAT,CAEA,GAAIC,IAAI,GAAK,MAAT,EAAmB,CAACN,IAApB,EAA4B,CAACI,cAAjC,CAAiD,CAC7C,MAAO,KAAP,CACH,CACD,mBACI,MAAC,UAAD,EACI,OAAO,CAAE,CACLG,SAAS,CAAEJ,OAAO,CAACI,SADd,CAELC,cAAc,CAAEL,OAAO,CAACK,cAFnB,CADb,CAKI,IAAI,CAAER,IALV,CAMI,OAAO,CAAEC,OANb,CAOI,aAAa,CAAEC,aAPnB,CAQI,WAAW,CAAE,CACTO,SAAS,CAAE,WADF,CAETC,aAAa,CAAE,IAFN,CAGTC,SAAS,CAAE,CACPC,eAAe,CAAE,CACbC,OAAO,CAAE,KADI,CADV,CAIPC,IAAI,CAAE,CACFD,OAAO,CAAE,KADP,CAJC,CAOPE,IAAI,CAAE,CACFC,QAAQ,CAAE,CAAC,WAAD,CADR,CAPC,CAHF,CARjB,wBAwBI,KAAC,QAAD,EAAU,SAAS,CAAEb,OAAO,CAACc,IAA7B,EAxBJ,cAyBI,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,uBACI,KAAC,gBAAD,EACI,EAAE,CAAC,yCADP,CAEI,cAAc,CAAC,2BAFnB,EADJ,EAzBJ,GADJ,CAkCH,CA5CD,CA8CA,MAAO,IAAMC,CAAAA,2BAA2B,cAAG7B,IAAI,CAACU,oCAAD,CAAxC","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\n\nimport { PopperCard, Typography } from '@welovedevs/ui';\n\nimport { ReactComponent as WarnIcon } from '../../../../assets/icons/warn.svg';\n\nimport { styles } from './profile_card_incomplete_popper_styles';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProfileCardIncompletePopperComponent = ({ open, onClose, anchorElement }) => {\n    const classes = useStyles();\n    const [hasBeenMounted, setHasBeenMouneted] = useState(false);\n    const [mode] = useMode();\n\n    useEffect(() => setHasBeenMouneted(true), []);\n\n    if (mode !== 'edit' || !open || !hasBeenMounted) {\n        return null;\n    }\n    return (\n        <PopperCard\n            classes={{\n                container: classes.container,\n                arrowContainer: classes.arrowContainer\n            }}\n            open={open}\n            onClose={onClose}\n            anchorElement={anchorElement}\n            popperProps={{\n                placement: 'top-start',\n                disablePortal: true,\n                modifiers: {\n                    preventOverflow: {\n                        enabled: false\n                    },\n                    hide: {\n                        enabled: false\n                    },\n                    flip: {\n                        behavior: ['top-start']\n                    }\n                }\n            }}\n        >\n            <WarnIcon className={classes.icon} />\n            <Typography color=\"light\">\n                <FormattedMessage\n                    id=\"ProfileCardIncompletePopper.label.value\"\n                    defaultMessage=\"This card is missing data\"\n                />\n            </Typography>\n        </PopperCard>\n    );\n};\n\nexport const ProfileCardIncompletePopper = memo(ProfileCardIncompletePopperComponent);\n"]},"metadata":{},"sourceType":"module"}
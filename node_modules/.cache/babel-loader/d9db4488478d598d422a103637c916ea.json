{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useMemo,useRef}from'react';import{createUseStyles,useTheme}from'react-jss';import{useDebounce}from'use-debounce';import{PopperCard,Checkbox}from'@welovedevs/ui';import{PaletteVisual}from'../palette_visual/palette_visual';import{Context}from'../card_orderer/cards_orderer';import{ReactComponent as BasicsSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/basics.svg\";import{ReactComponent as HobbiesSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/hobbies.svg\";import{ReactComponent as InterestedBySvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/interested_by.svg\";import{ReactComponent as LanguagesSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/languages.svg\";import{ReactComponent as LocationSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/location.svg\";import{ReactComponent as ProjectsSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/projects.svg\";import{ReactComponent as SchoolSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/school.svg\";import{ReactComponent as SkillsSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/skills.svg\";import{ReactComponent as SoundtrackSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/soundtrack.svg\";import{ReactComponent as ExperiencesSvg}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/cards/experiences.svg\";import{useOpenerState}from'../../../../hooks/use_opener_state';import{getHexFromPaletteColor}from'../../../../../utils/styles/styles_utils';import{CARD_STUB_TRANSLATIONS}from'./card_stub_translations';import{styles}from'./card_stub_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var CARD_TYPE_MAPPING={basics:BasicsSvg,projects:ProjectsSvg,language:LanguagesSvg,dreamjob:LocationSvg,gifs:HobbiesSvg,experiences:ExperiencesSvg,studies:SchoolSvg,skills:SkillsSvg,soundtrack:SoundtrackSvg,interestedBy:InterestedBySvg};var CardStubComponent=function CardStubComponent(_ref){var _ref$data=_ref.data,type=_ref$data.type,variant=_ref$data.variant,cardIndex=_ref.cardIndex,onItemChanged=_ref.onItemChanged;var classes=useStyles({variant:variant});var _useOpenerState=useOpenerState(),_useOpenerState2=_slicedToArray(_useOpenerState,2),openPopperCard=_useOpenerState2[0],handlers=_useOpenerState2[1];var _useDebounce=useDebounce(openPopperCard,openPopperCard?300:0),_useDebounce2=_slicedToArray(_useDebounce,1),debouncedOpenPopperCard=_useDebounce2[0];var containerReference=useRef();var _useContext=useContext(Context),isSorting=_useContext.isSorting;var Component=useMemo(function(){var _CARD_TYPE_MAPPING$ty;return(_CARD_TYPE_MAPPING$ty=CARD_TYPE_MAPPING[type])!==null&&_CARD_TYPE_MAPPING$ty!==void 0?_CARD_TYPE_MAPPING$ty:function(){return null;};},[]);var onVariantChanged=useCallback(function(value){return function(){onItemChanged(cardIndex,{type:type,variant:value});};},[onItemChanged]);return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:classes.container,ref:containerReference},handlers),{},{children:[/*#__PURE__*/_jsx(Component,{className:classes.card}),/*#__PURE__*/_jsx(PopperCard,{open:!isSorting&&debouncedOpenPopperCard,anchorElement:containerReference.current,classes:{popper:classes.popper},popperProps:{placement:'right'},children:/*#__PURE__*/_jsx(CardVariants,{variant:variant,onVariantChanged:onVariantChanged,classes:classes})})]}));};var CardVariants=function CardVariants(_ref2){var _theme$components,_theme$components$car,_theme$components$car2;var variant=_ref2.variant,onVariantChanged=_ref2.onVariantChanged,classes=_ref2.classes;var theme=useTheme();var handleMouseDown=useCallback(function(event){event.preventDefault();event.stopPropagation();},[]);return/*#__PURE__*/_jsx(\"div\",{className:classes.popperCardContent,children:/*#__PURE__*/_jsx(\"li\",{className:classes.cardVariantsList,children:(_theme$components=theme.components)===null||_theme$components===void 0?void 0:(_theme$components$car=_theme$components.cards)===null||_theme$components$car===void 0?void 0:(_theme$components$car2=_theme$components$car.variants)===null||_theme$components$car2===void 0?void 0:_theme$components$car2.map(function(colorScheme,variantIndex){return/*#__PURE__*/_jsxs(\"ul\",{className:classes.cardVariantsListItem,children:[/*#__PURE__*/_jsx(Checkbox,{className:classes.cardVariantsCheckbox,color:\"primary\",variant:\"outlined\",checked:variant===variantIndex,onChange:onVariantChanged(variantIndex),onMouseDown:handleMouseDown}),/*#__PURE__*/_jsx(PaletteVisual,{classes:{color:classes.cardVariantsColor,tooltipPopper:classes.cardVariantsTooltipPopper},translations:CARD_STUB_TRANSLATIONS,palette:Object.entries(colorScheme||{}).reduce(function(acc,_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],colorName=_ref4[1];return _objectSpread(_objectSpread({},acc),{},_defineProperty({},key,{500:getHexFromPaletteColor(theme,colorName)}));},{})})]},\"card_variant_\".concat(variantIndex));})})});};export var CardStub=CardStubComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/banner/user_actions_row/customize_dialog/card_stub/card_stub.jsx"],"names":["React","useCallback","useContext","useMemo","useRef","createUseStyles","useTheme","useDebounce","PopperCard","Checkbox","PaletteVisual","Context","useOpenerState","getHexFromPaletteColor","CARD_STUB_TRANSLATIONS","styles","useStyles","CARD_TYPE_MAPPING","basics","BasicsSvg","projects","ProjectsSvg","language","LanguagesSvg","dreamjob","LocationSvg","gifs","HobbiesSvg","experiences","ExperiencesSvg","studies","SchoolSvg","skills","SkillsSvg","soundtrack","SoundtrackSvg","interestedBy","InterestedBySvg","CardStubComponent","data","type","variant","cardIndex","onItemChanged","classes","openPopperCard","handlers","debouncedOpenPopperCard","containerReference","isSorting","Component","onVariantChanged","value","container","card","current","popper","placement","CardVariants","theme","handleMouseDown","event","preventDefault","stopPropagation","popperCardContent","cardVariantsList","components","cards","variants","map","colorScheme","variantIndex","cardVariantsListItem","cardVariantsCheckbox","color","cardVariantsColor","tooltipPopper","cardVariantsTooltipPopper","Object","entries","reduce","acc","key","colorName","CardStub"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo, useRef } from 'react';\n\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { useDebounce } from 'use-debounce';\n\nimport { PopperCard, Checkbox } from '@welovedevs/ui';\n\nimport { PaletteVisual } from '../palette_visual/palette_visual';\nimport { Context } from '../card_orderer/cards_orderer';\nimport { ReactComponent as BasicsSvg } from '../../../../../assets/cards/basics.svg';\nimport { ReactComponent as HobbiesSvg } from '../../../../../assets/cards/hobbies.svg';\nimport { ReactComponent as InterestedBySvg } from '../../../../../assets/cards/interested_by.svg';\nimport { ReactComponent as LanguagesSvg } from '../../../../../assets/cards/languages.svg';\nimport { ReactComponent as LocationSvg } from '../../../../../assets/cards/location.svg';\nimport { ReactComponent as ProjectsSvg } from '../../../../../assets/cards/projects.svg';\nimport { ReactComponent as SchoolSvg } from '../../../../../assets/cards/school.svg';\nimport { ReactComponent as SkillsSvg } from '../../../../../assets/cards/skills.svg';\nimport { ReactComponent as SoundtrackSvg } from '../../../../../assets/cards/soundtrack.svg';\nimport { ReactComponent as ExperiencesSvg } from '../../../../../assets/cards/experiences.svg';\n\nimport { useOpenerState } from '../../../../hooks/use_opener_state';\nimport { getHexFromPaletteColor } from '../../../../../utils/styles/styles_utils';\nimport { CARD_STUB_TRANSLATIONS } from './card_stub_translations';\n\nimport { styles } from './card_stub_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst CARD_TYPE_MAPPING = {\n    basics: BasicsSvg,\n    projects: ProjectsSvg,\n    language: LanguagesSvg,\n    dreamjob: LocationSvg,\n    gifs: HobbiesSvg,\n    experiences: ExperiencesSvg,\n    studies: SchoolSvg,\n    skills: SkillsSvg,\n    soundtrack: SoundtrackSvg,\n    interestedBy: InterestedBySvg\n};\n\nconst CardStubComponent = ({ data: { type, variant }, cardIndex, onItemChanged }) => {\n    const classes = useStyles({ variant });\n    const [openPopperCard, handlers] = useOpenerState();\n    const [debouncedOpenPopperCard] = useDebounce(openPopperCard, openPopperCard ? 300 : 0);\n    const containerReference = useRef();\n    const { isSorting } = useContext(Context);\n\n    const Component = useMemo(() => CARD_TYPE_MAPPING[type] ?? (() => null), []);\n\n    const onVariantChanged = useCallback(\n        (value) => () => {\n            onItemChanged(cardIndex, { type, variant: value });\n        },\n        [onItemChanged]\n    );\n\n    return (\n        <div className={classes.container} ref={containerReference} {...handlers}>\n            <Component className={classes.card} />\n            <PopperCard\n                open={!isSorting && debouncedOpenPopperCard}\n                anchorElement={containerReference.current}\n                classes={{ popper: classes.popper }}\n                popperProps={{ placement: 'right' }}\n            >\n                <CardVariants variant={variant} onVariantChanged={onVariantChanged} classes={classes} />\n            </PopperCard>\n        </div>\n    );\n};\n\nconst CardVariants = ({ variant, onVariantChanged, classes }) => {\n    const theme = useTheme();\n    const handleMouseDown = useCallback((event) => {\n        event.preventDefault();\n        event.stopPropagation();\n    }, []);\n    return (\n        <div className={classes.popperCardContent}>\n            <li className={classes.cardVariantsList}>\n                {theme.components?.cards?.variants?.map((colorScheme, variantIndex) => (\n                    <ul className={classes.cardVariantsListItem} key={`card_variant_${variantIndex}`}>\n                        <Checkbox\n                            className={classes.cardVariantsCheckbox}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            checked={variant === variantIndex}\n                            onChange={onVariantChanged(variantIndex)}\n                            onMouseDown={handleMouseDown}\n                        />\n                        <PaletteVisual\n                            classes={{\n                                color: classes.cardVariantsColor,\n                                tooltipPopper: classes.cardVariantsTooltipPopper\n                            }}\n                            translations={CARD_STUB_TRANSLATIONS}\n                            palette={Object.entries(colorScheme || {}).reduce(\n                                (acc, [key, colorName]) => ({\n                                    ...acc,\n                                    [key]: { 500: getHexFromPaletteColor(theme, colorName) }\n                                }),\n                                {}\n                            )}\n                        />\n                    </ul>\n                ))}\n            </li>\n        </div>\n    );\n};\n\nexport const CardStub = CardStubComponent;\n"]},"metadata":{},"sourceType":"module"}
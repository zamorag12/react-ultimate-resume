{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useCallback,useContext,useEffect,useMemo,useReducer,useRef,useState}from'react';import{createUseStyles,useTheme}from'react-jss';import{AnimatePresence,motion}from'framer-motion';import{Card}from'@welovedevs/ui';import{useMediaQuery}from'@material-ui/core';import{ProfileCardSide}from'./profile_card_side/profile_card_side';import{ProfileCardEditButton}from'./profile_card_edit_button/profile_card_edit_button';import{ProfileCardEditDialog}from'./profile_card_edit_dialog/profile_card_edit_dialog';import{ProfileCardIncompletePopper}from'./profile_card_incomplete_popper/profile_card_incomplete_popper';import{SET_CHANGING_SIDES,SET_IS_EDITING,SET_SIDE,SET_VARIANT}from'../../../store/profile_card/profile_card_actions_types';import{getProfileCardInitialState,profileCardReducer}from'../../../store/profile_card/profile_card_reducer';import{DeveloperProfileContext}from'../../../utils/context/contexts';import{PROFILE_CARD_EDIT_BUTTON_TRANSITIONS_PROPS}from'./profile_card_props';import{SIDES}from'./profile_card_side/side';import{styles}from'./profile_card_styles';import{OPACITY_TRANSITIONS}from'../../../utils/framer_motion/common_transitions/opacity_transitions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);export var ProfileCardContext=/*#__PURE__*/createContext({});var ProfileCardComponent=function ProfileCardComponent(_ref){var id=_ref.id,children=_ref.children,data=_ref.data,sides=_ref.sides,kind=_ref.kind,variant=_ref.variant,isEditingProfile=_ref.isEditingProfile,editDialog=_ref.editDialog,customEditAction=_ref.customEditAction,_ref$isComplete=_ref.isComplete,isComplete=_ref$isComplete===void 0?true:_ref$isComplete,sideProps=_ref.side;var changeSideTimeout=useRef();var _useContext=useContext(DeveloperProfileContext),mode=_useContext.mode;var classes=useStyles({variant:variant});var theme=useTheme();var isSmall=useMediaQuery(\"(max-width: \".concat(theme.screenSizes.small,\"px)\"),{defaultMatches:true});var _useState=useState(),_useState2=_slicedToArray(_useState,2),containerElement=_useState2[0],setContainerElement=_useState2[1];var containerReference=useRef();var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openEditDialog=_useState4[0],setOpenEditDialog=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),forceOpenEditDialog=_useState6[0],setForceOpenEditDialog=_useState6[1];var setEditDialogOpened=useCallback(function(){return setOpenEditDialog(true);},[]);var setEditDialogClosed=useCallback(function(){setOpenEditDialog(false);setForceOpenEditDialog(false);},[]);var _useReducer=useReducer(profileCardReducer,{},function(){return getProfileCardInitialState({variant:variant,side:sideProps||SIDES.FRONT,isEditing:isEditingProfile});}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var side=state.side,hasDialogOpened=state.hasDialogOpened;useEffect(function(){dispatch({type:SET_VARIANT,variant:variant});},[variant]);useEffect(function(){dispatch({type:SET_IS_EDITING,value:isEditingProfile});},[isEditingProfile]);useEffect(function(){if(sideProps===side){return;}dispatch({type:SET_SIDE,side:sideProps||SIDES.FRONT});},[sideProps]);var setChangingSides=useCallback(function(value){dispatch({type:SET_CHANGING_SIDES,value:value});},[isSmall]);useEffect(function(){setContainerElement(containerReference.current);},[]);var setSide=useCallback(function(newSide){if(sideProps){return;}if(state.changingSides){return;}setChangingSides(true);if(changeSideTimeout.current){clearTimeout(changeSideTimeout.current);}changeSideTimeout.current=setTimeout(function(){return dispatch({type:SET_SIDE,side:newSide});},200);},[sideProps]);var handleMouseEnter=useCallback(function(){return setSide(SIDES.BACK);},[setSide]);var handleMouseLeave=useCallback(function(){if(hasDialogOpened){return;}setSide(SIDES.FRONT);},[hasDialogOpened,setSide]);var handleAddButtonClick=useCallback(function(){setOpenEditDialog(true);setForceOpenEditDialog(true);},[]);var contextData=useMemo(function(){return{state:state,dispatch:dispatch};},[JSON.stringify(state)]);var SideComponent=sides[side]||function(){return null;};return/*#__PURE__*/_jsxs(_Fragment,{children:[mode==='edit'&&(isEditingProfile||forceOpenEditDialog)&&/*#__PURE__*/_jsx(ProfileCardContext.Provider,{value:contextData,children:/*#__PURE__*/_jsx(ProfileCardEditDialog,{editDialog:editDialog,open:openEditDialog,onClose:setEditDialogClosed,data:data,isEditing:isEditingProfile||forceOpenEditDialog})}),/*#__PURE__*/_jsx(ProfileCardIncompletePopper,{open:isComplete!==true,anchorElement:containerElement}),/*#__PURE__*/_jsxs(Card,_objectSpread(_objectSpread({containerRef:containerReference,classes:{container:classes.container},id:id,elevation:1},!isSmall&&!sideProps&&{onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave}),{},{children:[mode==='edit'&&isEditingProfile&&/*#__PURE__*/_jsx(motion.div,{variants:PROFILE_CARD_EDIT_BUTTON_TRANSITIONS_PROPS,initial:\"initial\",animate:\"enter\",exit:\"exit\",className:classes.editButtonContainer,children:/*#__PURE__*/_jsx(EditAction,{customEditAction:customEditAction,setEditDialogOpened:setEditDialogOpened})}),/*#__PURE__*/_jsxs(ProfileCardContext.Provider,{value:contextData,children:[children,/*#__PURE__*/_jsx(AnimatePresence,{children:side&&/*#__PURE__*/_jsx(ProfileCardSide,{animationProps:OPACITY_TRANSITIONS,children:/*#__PURE__*/_jsx(SideComponent,{data:data,handleAddButtonClick:handleAddButtonClick})},\"card_side_\".concat(side,\"_\").concat(kind))})]})]}))]});};var EditAction=function EditAction(_ref2){var customEditAction=_ref2.customEditAction,setEditDialogOpened=_ref2.setEditDialogOpened;var onCustomClick=useCallback(function(){return setEditDialogOpened();},[]);if(customEditAction){var Component=customEditAction;return/*#__PURE__*/_jsx(Component,{onClick:onCustomClick});}return/*#__PURE__*/_jsx(ProfileCardEditButton,{setEditDialogOpened:setEditDialogOpened});};export var ProfileCard=ProfileCardComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/profile_card/profile_card.jsx"],"names":["React","createContext","useCallback","useContext","useEffect","useMemo","useReducer","useRef","useState","createUseStyles","useTheme","AnimatePresence","motion","Card","useMediaQuery","ProfileCardSide","ProfileCardEditButton","ProfileCardEditDialog","ProfileCardIncompletePopper","SET_CHANGING_SIDES","SET_IS_EDITING","SET_SIDE","SET_VARIANT","getProfileCardInitialState","profileCardReducer","DeveloperProfileContext","PROFILE_CARD_EDIT_BUTTON_TRANSITIONS_PROPS","SIDES","styles","OPACITY_TRANSITIONS","useStyles","ProfileCardContext","ProfileCardComponent","id","children","data","sides","kind","variant","isEditingProfile","editDialog","customEditAction","isComplete","sideProps","side","changeSideTimeout","mode","classes","theme","isSmall","screenSizes","small","defaultMatches","containerElement","setContainerElement","containerReference","openEditDialog","setOpenEditDialog","forceOpenEditDialog","setForceOpenEditDialog","setEditDialogOpened","setEditDialogClosed","FRONT","isEditing","state","dispatch","hasDialogOpened","type","value","setChangingSides","current","setSide","newSide","changingSides","clearTimeout","setTimeout","handleMouseEnter","BACK","handleMouseLeave","handleAddButtonClick","contextData","JSON","stringify","SideComponent","container","onMouseEnter","onMouseLeave","editButtonContainer","EditAction","onCustomClick","Component","ProfileCard"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useMemo, useReducer, useRef, useState } from 'react';\n\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { Card } from '@welovedevs/ui';\n\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { ProfileCardSide } from './profile_card_side/profile_card_side';\nimport { ProfileCardEditButton } from './profile_card_edit_button/profile_card_edit_button';\nimport { ProfileCardEditDialog } from './profile_card_edit_dialog/profile_card_edit_dialog';\nimport { ProfileCardIncompletePopper } from './profile_card_incomplete_popper/profile_card_incomplete_popper';\n\nimport {\n    SET_CHANGING_SIDES,\n    SET_IS_EDITING,\n    SET_SIDE,\n    SET_VARIANT\n} from '../../../store/profile_card/profile_card_actions_types';\nimport { getProfileCardInitialState, profileCardReducer } from '../../../store/profile_card/profile_card_reducer';\nimport { DeveloperProfileContext } from '../../../utils/context/contexts';\nimport { PROFILE_CARD_EDIT_BUTTON_TRANSITIONS_PROPS } from './profile_card_props';\nimport { SIDES } from './profile_card_side/side';\n\nimport { styles } from './profile_card_styles';\nimport { OPACITY_TRANSITIONS } from '../../../utils/framer_motion/common_transitions/opacity_transitions';\n\nconst useStyles = createUseStyles(styles);\n\nexport const ProfileCardContext = createContext({});\n\nconst ProfileCardComponent = ({\n    id,\n    children,\n    data,\n    sides,\n    kind,\n    variant,\n    isEditingProfile,\n    editDialog,\n    customEditAction,\n    isComplete = true,\n    side: sideProps\n}) => {\n    const changeSideTimeout = useRef();\n    const { mode } = useContext(DeveloperProfileContext);\n\n    const classes = useStyles({ variant });\n    const theme = useTheme();\n    const isSmall = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`, {\n        defaultMatches: true\n    });\n\n    const [containerElement, setContainerElement] = useState();\n    const containerReference = useRef();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n    const [forceOpenEditDialog, setForceOpenEditDialog] = useState(false);\n\n    const setEditDialogOpened = useCallback(() => setOpenEditDialog(true), []);\n    const setEditDialogClosed = useCallback(() => {\n        setOpenEditDialog(false);\n        setForceOpenEditDialog(false);\n    }, []);\n\n    const [state, dispatch] = useReducer(profileCardReducer, {}, () =>\n        getProfileCardInitialState({\n            variant,\n            side: sideProps || SIDES.FRONT,\n            isEditing: isEditingProfile\n        })\n    );\n    const { side, hasDialogOpened } = state;\n\n    useEffect(() => {\n        dispatch({\n            type: SET_VARIANT,\n            variant\n        });\n    }, [variant]);\n\n    useEffect(() => {\n        dispatch({\n            type: SET_IS_EDITING,\n            value: isEditingProfile\n        });\n    }, [isEditingProfile]);\n\n    useEffect(() => {\n        if (sideProps === side) {\n            return;\n        }\n        dispatch({\n            type: SET_SIDE,\n            side: sideProps || SIDES.FRONT\n        });\n    }, [sideProps]);\n\n    const setChangingSides = useCallback(\n        (value) => {\n            dispatch({\n                type: SET_CHANGING_SIDES,\n                value\n            });\n        },\n        [isSmall]\n    );\n\n    useEffect(() => {\n        setContainerElement(containerReference.current);\n    }, []);\n\n    const setSide = useCallback(\n        (newSide) => {\n            if (sideProps) {\n                return;\n            }\n            if (state.changingSides) {\n                return;\n            }\n            setChangingSides(true);\n            if (changeSideTimeout.current) {\n                clearTimeout(changeSideTimeout.current);\n            }\n            changeSideTimeout.current = setTimeout(\n                () =>\n                    dispatch({\n                        type: SET_SIDE,\n                        side: newSide\n                    }),\n                200\n            );\n        },\n        [sideProps]\n    );\n\n    const handleMouseEnter = useCallback(() => setSide(SIDES.BACK), [setSide]);\n\n    const handleMouseLeave = useCallback(() => {\n        if (hasDialogOpened) {\n            return;\n        }\n        setSide(SIDES.FRONT);\n    }, [hasDialogOpened, setSide]);\n\n    const handleAddButtonClick = useCallback(() => {\n        setOpenEditDialog(true);\n        setForceOpenEditDialog(true);\n    }, []);\n\n    const contextData = useMemo(() => ({ state, dispatch }), [JSON.stringify(state)]);\n    const SideComponent = sides[side] || (() => null);\n\n    return (\n        <>\n            {mode === 'edit' && (isEditingProfile || forceOpenEditDialog) && (\n                <ProfileCardContext.Provider value={contextData}>\n                    <ProfileCardEditDialog\n                        editDialog={editDialog}\n                        open={openEditDialog}\n                        onClose={setEditDialogClosed}\n                        data={data}\n                        isEditing={isEditingProfile || forceOpenEditDialog}\n                    />\n                </ProfileCardContext.Provider>\n            )}\n            <ProfileCardIncompletePopper open={isComplete !== true} anchorElement={containerElement} />\n            <Card\n                containerRef={containerReference}\n                classes={{ container: classes.container }}\n                id={id}\n                elevation={1}\n                {...(!isSmall &&\n                    !sideProps && {\n                        onMouseEnter: handleMouseEnter,\n                        onMouseLeave: handleMouseLeave\n                    })}\n            >\n                {mode === 'edit' && isEditingProfile && (\n                    <motion.div\n                        variants={PROFILE_CARD_EDIT_BUTTON_TRANSITIONS_PROPS}\n                        initial=\"initial\"\n                        animate=\"enter\"\n                        exit=\"exit\"\n                        className={classes.editButtonContainer}\n                    >\n                        <EditAction customEditAction={customEditAction} setEditDialogOpened={setEditDialogOpened} />\n                    </motion.div>\n                )}\n                <ProfileCardContext.Provider value={contextData}>\n                    {children}\n                    <AnimatePresence>\n                        {side && (\n                            <ProfileCardSide\n                                key={`card_side_${side}_${kind}`}\n                                animationProps={OPACITY_TRANSITIONS}\n                            >\n                                <SideComponent data={data} handleAddButtonClick={handleAddButtonClick} />\n                            </ProfileCardSide>\n                        )}\n                    </AnimatePresence>\n                </ProfileCardContext.Provider>\n            </Card>\n        </>\n    );\n};\n\nconst EditAction = ({ customEditAction, setEditDialogOpened }) => {\n    const onCustomClick = useCallback(() => setEditDialogOpened(), []);\n    if (customEditAction) {\n        const Component = customEditAction;\n        return <Component onClick={onCustomClick} />;\n    }\n    return <ProfileCardEditButton setEditDialogOpened={setEditDialogOpened} />;\n};\n\nexport const ProfileCard = ProfileCardComponent;\n"]},"metadata":{},"sourceType":"module"}
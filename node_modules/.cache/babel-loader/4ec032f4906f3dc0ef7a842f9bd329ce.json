{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useMemo}from'react';import{ProfileCard}from'../../../commons/profile_card/profile_card';import{BasicsBack}from'./basics_back/basics_back';import{mapBasicsDataToJsonResume,mapJsonResumeToBasicData}from'./data/mapping';import{BasicsCardEditDialog}from'./basics_edit_dialog/basic_edit_dialog';import{BasicsValidationSchema,validateBasicsComplete}from'./data/validator';import{DeveloperProfileContext}from'../../../../utils/context/contexts';import{BasicsFront}from'./basics_front/basics_front';import{useMode}from'../../../hooks/use_mode';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BasicsCardComponent=function BasicsCardComponent(_ref){var variant=_ref.variant,side=_ref.side;var _useMode=useMode(),_useMode2=_slicedToArray(_useMode,1),mode=_useMode2[0];var _useContext=useContext(DeveloperProfileContext),data=_useContext.data,isEditing=_useContext.isEditing,onEdit=_useContext.onEdit;var mappedData=useMemo(function(){return mapJsonResumeToBasicData(data);},[data]);var onDialogEdited=useCallback(function(editedData){onEdit(mapBasicsDataToJsonResume(editedData));},[onEdit]);var isComplete=useMemo(function(){return validateBasicsComplete(mappedData);},[mappedData]);if(!isComplete&&mode!=='edit'){return null;}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ProfileCard,{kind:\"basics\",data:mappedData,isEditingProfile:isEditing,editDialog:{component:BasicsCardEditDialog,validationSchema:BasicsValidationSchema,onEdit:onDialogEdited},sides:{front:function front(props){return/*#__PURE__*/_jsx(BasicsFront,_objectSpread({},props));},back:function back(props){return/*#__PURE__*/_jsx(BasicsBack,_objectSpread({},props));}},variant:variant,isComplete:isComplete,side:side})});};export var BasicsCard=BasicsCardComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/basics/basics_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","BasicsBack","mapBasicsDataToJsonResume","mapJsonResumeToBasicData","BasicsCardEditDialog","BasicsValidationSchema","validateBasicsComplete","DeveloperProfileContext","BasicsFront","useMode","BasicsCardComponent","variant","side","mode","data","isEditing","onEdit","mappedData","onDialogEdited","editedData","isComplete","component","validationSchema","front","props","back","BasicsCard"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,OAAzC,KAAwD,OAAxD,CAEA,OAASC,WAAT,KAA4B,4CAA5B,CAEA,OAASC,UAAT,KAA2B,2BAA3B,CACA,OAASC,yBAAT,CAAoCC,wBAApC,KAAoE,gBAApE,CAEA,OAASC,oBAAT,KAAqC,wCAArC,CACA,OAASC,sBAAT,CAAiCC,sBAAjC,KAA+D,kBAA/D,CACA,OAASC,uBAAT,KAAwC,oCAAxC,CACA,OAASC,WAAT,KAA4B,6BAA5B,CACA,OAASC,OAAT,KAAwB,yBAAxB,C,gGAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAuB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,cAChCH,OAAO,EADyB,sCACxCI,IADwC,8BAEXf,UAAU,CAACS,uBAAD,CAFC,CAEvCO,IAFuC,aAEvCA,IAFuC,CAEjCC,SAFiC,aAEjCA,SAFiC,CAEtBC,MAFsB,aAEtBA,MAFsB,CAG/C,GAAMC,CAAAA,UAAU,CAAGlB,OAAO,CAAC,iBAAMI,CAAAA,wBAAwB,CAACW,IAAD,CAA9B,EAAD,CAAuC,CAACA,IAAD,CAAvC,CAA1B,CAEA,GAAMI,CAAAA,cAAc,CAAGrB,WAAW,CAC9B,SAACsB,UAAD,CAAgB,CACZH,MAAM,CAACd,yBAAyB,CAACiB,UAAD,CAA1B,CAAN,CACH,CAH6B,CAI9B,CAACH,MAAD,CAJ8B,CAAlC,CAOA,GAAMI,CAAAA,UAAU,CAAGrB,OAAO,CAAC,iBAAMO,CAAAA,sBAAsB,CAACW,UAAD,CAA5B,EAAD,CAA2C,CAACA,UAAD,CAA3C,CAA1B,CAEA,GAAI,CAACG,UAAD,EAAeP,IAAI,GAAK,MAA5B,CAAoC,CAChC,MAAO,KAAP,CACH,CAED,mBACI,sCACI,KAAC,WAAD,EACI,IAAI,CAAC,QADT,CAEI,IAAI,CAAEI,UAFV,CAGI,gBAAgB,CAAEF,SAHtB,CAII,UAAU,CAAE,CACRM,SAAS,CAAEjB,oBADH,CAERkB,gBAAgB,CAAEjB,sBAFV,CAGRW,MAAM,CAAEE,cAHA,CAJhB,CASI,KAAK,CAAE,CACHK,KAAK,CAAE,eAACC,KAAD,qBAAW,KAAC,WAAD,kBAAiBA,KAAjB,EAAX,EADJ,CAEHC,IAAI,CAAE,cAACD,KAAD,qBAAW,KAAC,UAAD,kBAAgBA,KAAhB,EAAX,EAFH,CATX,CAaI,OAAO,CAAEb,OAbb,CAcI,UAAU,CAAES,UAdhB,CAeI,IAAI,CAAER,IAfV,EADJ,EADJ,CAqBH,CAvCD,CAyCA,MAAO,IAAMc,CAAAA,UAAU,CAAGhB,mBAAnB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\n\nimport { BasicsBack } from './basics_back/basics_back';\nimport { mapBasicsDataToJsonResume, mapJsonResumeToBasicData } from './data/mapping';\n\nimport { BasicsCardEditDialog } from './basics_edit_dialog/basic_edit_dialog';\nimport { BasicsValidationSchema, validateBasicsComplete } from './data/validator';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { BasicsFront } from './basics_front/basics_front';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst BasicsCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing, onEdit } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapJsonResumeToBasicData(data), [data]);\n\n    const onDialogEdited = useCallback(\n        (editedData) => {\n            onEdit(mapBasicsDataToJsonResume(editedData));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateBasicsComplete(mappedData), [mappedData]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n\n    return (\n        <>\n            <ProfileCard\n                kind=\"basics\"\n                data={mappedData}\n                isEditingProfile={isEditing}\n                editDialog={{\n                    component: BasicsCardEditDialog,\n                    validationSchema: BasicsValidationSchema,\n                    onEdit: onDialogEdited\n                }}\n                sides={{\n                    front: (props) => <BasicsFront {...props} />,\n                    back: (props) => <BasicsBack {...props} />\n                }}\n                variant={variant}\n                isComplete={isComplete}\n                side={side}\n            />\n        </>\n    );\n};\n\nexport const BasicsCard = BasicsCardComponent;\n"]},"metadata":{},"sourceType":"module"}
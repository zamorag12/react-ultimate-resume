{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useCallback,useMemo,useState}from'react';import cn from'classnames';import{createUseStyles}from'react-jss';import{useIntl}from'react-intl';import{Twemoji}from'react-emoji-render';import MomentUtils from'@date-io/moment';import isEqual from'lodash/isEqual';import pick from'lodash/pick';import{DatePicker,MuiPickersUtilsProvider}from'@material-ui/pickers';import{TextField,Typography}from'@welovedevs/ui';import styles from'./year_month_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var YearMonthComponent=function YearMonthComponent(_ref){var className=_ref.className,value=_ref.value,onChange=_ref.onChange,title=_ref.title,error=_ref.error,variant=_ref.variant,_ref$textfieldProps=_ref.textfieldProps,textfieldProps=_ref$textfieldProps===void 0?{}:_ref$textfieldProps;var classes=useStyles();var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var onPickerChange=useCallback(function(newValue){if(newValue===null){onChange(null);return;}setIsOpen(false);onChange(newValue);},[onChange]);var date=useMemo(function(){return value?new Date(value.year(),value.month()):new Date();},[value]);return/*#__PURE__*/_jsx(\"div\",{className:cn(className,classes.fieldsContainer),children:/*#__PURE__*/_jsxs(\"div\",{className:classes.selectContainer,children:[/*#__PURE__*/_jsx(_Fragment,{children:title&&/*#__PURE__*/_jsx(Typography,{color:\"dark\",variant:\"label\",component:function component(_ref2){var children=_ref2.children,props=_objectWithoutProperties(_ref2,[\"children\"]);return/*#__PURE__*/_jsx(Twemoji,_objectSpread({svg:true,text:children},props));},children:formatMessage(title)})}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},textfieldProps),{},{variant:variant,value:(value===null||value===void 0?void 0:value.format('MMMM YYYY'))||'',onClick:function onClick(){return setIsOpen(true);}})),/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:MomentUtils,children:/*#__PURE__*/_jsx(DatePicker,{clearable:true,open:isOpen,views:['year','month'],minDate:new Date('1980-01-01'),maxDate:new Date(),className:classes.input,InputProps:{className:classes.pickerInput,disableUnderline:true},value:date,onChange:onPickerChange,onClose:function onClose(){return setIsOpen(false);}})}),error&&typeof error==='string'&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",variant:\"helper\",component:\"p\",children:error})]})});};export var YearMonth=/*#__PURE__*/memo(YearMonthComponent,function(nextProps,oldProps){return isEqual(pick(nextProps,['value','error','onChange']),pick(oldProps,['value','error','onChange']));});","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/year_month/year_month.jsx"],"names":["React","memo","useCallback","useMemo","useState","cn","createUseStyles","useIntl","Twemoji","MomentUtils","isEqual","pick","DatePicker","MuiPickersUtilsProvider","TextField","Typography","styles","useStyles","YearMonthComponent","className","value","onChange","title","error","variant","textfieldProps","classes","formatMessage","isOpen","setIsOpen","onPickerChange","newValue","date","Date","year","month","fieldsContainer","selectContainer","children","props","format","input","pickerInput","disableUnderline","YearMonth","nextProps","oldProps"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { useIntl } from 'react-intl';\nimport { Twemoji } from 'react-emoji-render';\nimport MomentUtils from '@date-io/moment';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\n\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { TextField, Typography } from '@welovedevs/ui';\n\nimport styles from './year_month_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst YearMonthComponent = ({ className, value, onChange, title, error, variant, textfieldProps = {} }) => {\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n    const [isOpen, setIsOpen] = useState(false);\n    const onPickerChange = useCallback(\n        (newValue) => {\n            if (newValue === null) {\n                onChange(null);\n                return;\n            }\n            setIsOpen(false);\n            onChange(newValue);\n        },\n        [onChange]\n    );\n    const date = useMemo(() => (value ? new Date(value.year(), value.month()) : new Date()), [value]);\n    return (\n        <div className={cn(className, classes.fieldsContainer)}>\n            <div className={classes.selectContainer}>\n                <>\n                    {title && (\n                        <Typography\n                            color=\"dark\"\n                            variant=\"label\"\n                            component={({ children, ...props }) => <Twemoji svg text={children} {...props} />}\n                        >\n                            {formatMessage(title)}\n                        </Typography>\n                    )}\n                </>\n                <TextField\n                    {...textfieldProps}\n                    variant={variant}\n                    value={value?.format('MMMM YYYY') || ''}\n                    onClick={() => setIsOpen(true)}\n                />\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <DatePicker\n                        clearable\n                        open={isOpen}\n                        views={['year', 'month']}\n                        minDate={new Date('1980-01-01')}\n                        maxDate={new Date()}\n                        className={classes.input}\n                        InputProps={{ className: classes.pickerInput, disableUnderline: true }}\n                        value={date}\n                        onChange={onPickerChange}\n                        onClose={() => setIsOpen(false)}\n                    />\n                </MuiPickersUtilsProvider>\n                {error && typeof error === 'string' && (\n                    <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                        {error}\n                    </Typography>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport const YearMonth = memo(YearMonthComponent, (nextProps, oldProps) =>\n    isEqual(pick(nextProps, ['value', 'error', 'onChange']), pick(oldProps, ['value', 'error', 'onChange']))\n);\n"]},"metadata":{},"sourceType":"module"}
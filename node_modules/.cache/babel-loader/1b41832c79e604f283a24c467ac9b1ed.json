{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createScreenWidthMediaQuery}from'../../../../../../utils/styles/styles_utils';export var styles=function styles(theme){var spacing=theme.miscellaneous.spacing;var QUERY_SMALL=createScreenWidthMediaQuery('max-width',theme.screenSizes.small);return{container:function container(_ref){var isEditing=_ref.isEditing;return _objectSpread({marginBottom:spacing*4},!isEditing&&{textAlign:'center'});},typography:{fontSize:32},datePicker:_defineProperty({cursor:'pointer',marginLeft:spacing},QUERY_SMALL,{marginLeft:'unset'})};};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_date/project_dialog_content_date_styles.js"],"names":["createScreenWidthMediaQuery","styles","theme","spacing","miscellaneous","QUERY_SMALL","screenSizes","small","container","isEditing","marginBottom","textAlign","typography","fontSize","datePicker","cursor","marginLeft"],"mappings":"mVAAA,OAASA,2BAAT,KAA4C,6CAA5C,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,IAERC,CAAAA,OAFQ,CAGzBD,KAHyB,CAEzBE,aAFyB,CAERD,OAFQ,CAK7B,GAAME,CAAAA,WAAW,CAAGL,2BAA2B,CAAC,WAAD,CAAcE,KAAK,CAACI,WAAN,CAAkBC,KAAhC,CAA/C,CAEA,MAAO,CACHC,SAAS,CAAE,4BAAGC,CAAAA,SAAH,MAAGA,SAAH,uBACPC,YAAY,CAAEP,OAAO,CAAG,CADjB,EAEH,CAACM,SAAD,EAAc,CACdE,SAAS,CAAE,QADG,CAFX,GADR,CAOHC,UAAU,CAAE,CACRC,QAAQ,CAAE,EADF,CAPT,CAUHC,UAAU,kBACNC,MAAM,CAAE,SADF,CAENC,UAAU,CAAEb,OAFN,EAGLE,WAHK,CAGS,CACXW,UAAU,CAAE,OADD,CAHT,CAVP,CAAP,CAkBH,CAzBM","sourcesContent":["import { createScreenWidthMediaQuery } from '../../../../../../utils/styles/styles_utils';\n\nexport const styles = (theme) => {\n    const {\n        miscellaneous: { spacing }\n    } = theme;\n\n    const QUERY_SMALL = createScreenWidthMediaQuery('max-width', theme.screenSizes.small);\n\n    return {\n        container: ({ isEditing }) => ({\n            marginBottom: spacing * 4,\n            ...(!isEditing && {\n                textAlign: 'center'\n            })\n        }),\n        typography: {\n            fontSize: 32\n        },\n        datePicker: {\n            cursor: 'pointer',\n            marginLeft: spacing,\n            [QUERY_SMALL]: {\n                marginLeft: 'unset'\n            }\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
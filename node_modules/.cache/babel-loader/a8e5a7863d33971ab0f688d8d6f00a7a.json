{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton } from 'intl-messageformat-parser';\n\nvar FormatError =\n/** @class */\nfunction (_super) {\n  __extends(FormatError, _super);\n\n  function FormatError(msg, variableId) {\n    var _this = _super.call(this, msg) || this;\n\n    _this.variableId = variableId;\n    return _this;\n  }\n\n  return FormatError;\n}(Error);\n\nfunction mergeLiteral(parts) {\n  if (parts.length < 2) {\n    return parts;\n  }\n\n  return parts.reduce(function (all, part) {\n    var lastPart = all[all.length - 1];\n\n    if (!lastPart || lastPart.type !== 0\n    /* literal */\n    || part.type !== 0\n    /* literal */\n    ) {\n        all.push(part);\n      } else {\n      lastPart.value += part.value;\n    }\n\n    return all;\n  }, []);\n} // TODO(skeleton): add skeleton support\n\n\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, // For debugging\noriginalMessage) {\n  // Hot path for straight simple msg translations\n  if (els.length === 1 && isLiteralElement(els[0])) {\n    return [{\n      type: 0\n      /* literal */\n      ,\n      value: els[0].value\n    }];\n  }\n\n  var result = [];\n\n  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n    var el = els_1[_i]; // Exit early for string parts.\n\n    if (isLiteralElement(el)) {\n      result.push({\n        type: 0\n        /* literal */\n        ,\n        value: el.value\n      });\n      continue;\n    } // TODO: should this part be literal type?\n    // Replace `#` in plural rules with the actual numeric value.\n\n\n    if (isPoundElement(el)) {\n      if (typeof currentPluralValue === 'number') {\n        result.push({\n          type: 0\n          /* literal */\n          ,\n          value: formatters.getNumberFormat(locales).format(currentPluralValue)\n        });\n      }\n\n      continue;\n    }\n\n    var varName = el.value; // Enforce that all required values are provided by the caller.\n\n    if (!(values && varName in values)) {\n      throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n    }\n\n    var value = values[varName];\n\n    if (isArgumentElement(el)) {\n      if (!value || typeof value === 'string' || typeof value === 'number') {\n        value = typeof value === 'string' || typeof value === 'number' ? String(value) : '';\n      }\n\n      result.push({\n        type: 1\n        /* argument */\n        ,\n        value: value\n      });\n      continue;\n    } // Recursively format plural and select parts' option â€” which can be a\n    // nested pattern structure. The choosing of the option to use is\n    // abstracted-by and delegated-to the part helper object.\n\n\n    if (isDateElement(el)) {\n      var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n      result.push({\n        type: 0\n        /* literal */\n        ,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n\n    if (isTimeElement(el)) {\n      var style = typeof el.style === 'string' ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? parseDateTimeSkeleton(el.style.pattern) : undefined;\n      result.push({\n        type: 0\n        /* literal */\n        ,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n\n    if (isNumberElement(el)) {\n      var style = typeof el.style === 'string' ? formats.number[el.style] : isNumberSkeleton(el.style) ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens) : undefined;\n      result.push({\n        type: 0\n        /* literal */\n        ,\n        value: formatters.getNumberFormat(locales, style).format(value)\n      });\n      continue;\n    }\n\n    if (isSelectElement(el)) {\n      var opt = el.options[value] || el.options.other;\n\n      if (!opt) {\n        throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n      }\n\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n      continue;\n    }\n\n    if (isPluralElement(el)) {\n      var opt = el.options[\"=\" + value];\n\n      if (!opt) {\n        if (!Intl.PluralRules) {\n          throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n        }\n\n        var rule = formatters.getPluralRules(locales, {\n          type: el.pluralType\n        }).select(value - (el.offset || 0));\n        opt = el.options[rule] || el.options.other;\n      }\n\n      if (!opt) {\n        throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n      }\n\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n      continue;\n    }\n  }\n\n  return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, // For debugging\noriginalMessage) {\n  var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage); // Hot path for straight simple msg translations\n\n  if (parts.length === 1) {\n    return parts[0].value;\n  }\n\n  return parts.reduce(function (all, part) {\n    return all += part.value;\n  }, '');\n} // Singleton\n\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\n\nfunction generateId() {\n  return Date.now() + \"_\" + ++counter;\n}\n\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n  return text.split(TOKEN_REGEX).filter(Boolean).map(function (c) {\n    return objectParts[c] != null ? objectParts[c] : c;\n  }).reduce(function (all, c) {\n    if (!all.length) {\n      all.push(c);\n    } else if (typeof c === 'string' && typeof all[all.length - 1] === 'string') {\n      all[all.length - 1] += c;\n    } else {\n      all.push(c);\n    }\n\n    return all;\n  }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\n\n\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\nfunction formatHTMLElement(el, objectParts, values) {\n  var tagName = el.tagName;\n  var outerHTML = el.outerHTML,\n      textContent = el.textContent,\n      childNodes = el.childNodes; // Regular text\n\n  if (!tagName) {\n    return restoreRichPlaceholderMessage(textContent || '', objectParts);\n  }\n\n  tagName = tagName.toLowerCase();\n  var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n  var formatFnOrValue = values[tagName];\n\n  if (formatFnOrValue && isVoidElement) {\n    throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n  }\n\n  if (!childNodes.length) {\n    return [outerHTML];\n  }\n\n  var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n    return all.concat(formatHTMLElement(child, objectParts, values));\n  }, []); // Legacy HTML\n\n  if (!formatFnOrValue) {\n    return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n  } // HTML Tag replacement\n\n\n  if (typeof formatFnOrValue === 'function') {\n    return [formatFnOrValue.apply(void 0, chunks)];\n  }\n\n  return [formatFnOrValue];\n}\n\nexport function formatHTMLMessage(els, locales, formatters, formats, values, // For debugging\noriginalMessage) {\n  var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n  var objectParts = {};\n  var formattedMessage = parts.reduce(function (all, part) {\n    if (part.type === 0\n    /* literal */\n    ) {\n        return all += part.value;\n      }\n\n    var id = generateId();\n    objectParts[id] = part.value;\n    return all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER;\n  }, ''); // Not designed to filter out aggressively\n\n  if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n    return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n  }\n\n  if (!values) {\n    throw new FormatError('Message has placeholders but no values was given');\n  }\n\n  if (typeof DOMParser === 'undefined') {\n    throw new FormatError('Cannot format XML message without DOMParser');\n  }\n\n  if (!domParser) {\n    domParser = new DOMParser();\n  }\n\n  var content = domParser.parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html').getElementById(TEMPLATE_ID);\n\n  if (!content) {\n    throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n  }\n\n  var tagsToFormat = Object.keys(values).filter(function (varName) {\n    return !!content.getElementsByTagName(varName).length;\n  }); // No tags to format\n\n  if (!tagsToFormat.length) {\n    return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n  }\n\n  var caseSensitiveTags = tagsToFormat.filter(function (tagName) {\n    return tagName !== tagName.toLowerCase();\n  });\n\n  if (caseSensitiveTags.length) {\n    throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n  } // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n\n\n  return Array.prototype.slice.call(content.childNodes).reduce(function (all, child) {\n    return all.concat(formatHTMLElement(child, objectParts, values));\n  }, []);\n}","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/node_modules/intl-messageformat/lib/formatters.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","convertNumberSkeletonToNumberFormatOptions","isArgumentElement","isDateElement","isDateTimeSkeleton","isLiteralElement","isNumberElement","isNumberSkeleton","isPluralElement","isPoundElement","isSelectElement","isTimeElement","parseDateTimeSkeleton","FormatError","_super","msg","variableId","_this","call","Error","mergeLiteral","parts","reduce","all","part","lastPart","type","push","value","formatToParts","els","locales","formatters","formats","values","currentPluralValue","originalMessage","result","_i","els_1","el","getNumberFormat","format","varName","String","style","date","undefined","getDateTimeFormat","time","pattern","number","tokens","opt","options","other","RangeError","keys","join","apply","Intl","PluralRules","rule","getPluralRules","pluralType","select","offset","formatToString","domParser","TOKEN_DELIMITER","TOKEN_REGEX","counter","generateId","Date","now","restoreRichPlaceholderMessage","text","objectParts","split","filter","Boolean","map","c","SIMPLE_XML_REGEX","TEMPLATE_ID","VOID_ELEMENTS","formatHTMLElement","tagName","outerHTML","textContent","childNodes","toLowerCase","isVoidElement","indexOf","formatFnOrValue","chunks","slice","child","concat","formatHTMLMessage","formattedMessage","id","test","DOMParser","content","parseFromString","getElementById","tagsToFormat","getElementsByTagName","caseSensitiveTags"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, } from 'intl-messageformat-parser';\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option â€” which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n];\nfunction formatHTMLElement(el, objectParts, values) {\n    var tagName = el.tagName;\n    var outerHTML = el.outerHTML, textContent = el.textContent, childNodes = el.childNodes;\n    // Regular text\n    if (!tagName) {\n        return restoreRichPlaceholderMessage(textContent || '', objectParts);\n    }\n    tagName = tagName.toLowerCase();\n    var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n    var formatFnOrValue = values[tagName];\n    if (formatFnOrValue && isVoidElement) {\n        throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n    }\n    if (!childNodes.length) {\n        return [outerHTML];\n    }\n    var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n        return all.concat(formatHTMLElement(child, objectParts, values));\n    }, []);\n    // Legacy HTML\n    if (!formatFnOrValue) {\n        return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n    }\n    // HTML Tag replacement\n    if (typeof formatFnOrValue === 'function') {\n        return [formatFnOrValue.apply(void 0, chunks)];\n    }\n    return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    var content = domParser\n        .parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html')\n        .getElementById(TEMPLATE_ID);\n    if (!content) {\n        throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!content.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var caseSensitiveTags = tagsToFormat.filter(function (tagName) { return tagName !== tagName.toLowerCase(); });\n    if (caseSensitiveTags.length) {\n        throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n    }\n    // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n    return Array.prototype.slice\n        .call(content.childNodes)\n        .reduce(function (all, child) { return all.concat(formatHTMLElement(child, objectParts, values)); }, []);\n}\n"]},"metadata":{},"sourceType":"module"}
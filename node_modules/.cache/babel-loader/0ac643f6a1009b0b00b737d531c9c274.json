{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect}from'react';import{TECHNOLOGIES_RECEIVED,TECHNOLOGIES_STARTED}from'../../../store/technologies/technologies_actions_types';import{StaticDataContext,StoreContext}from'../../../utils/context/contexts';var DEFAULT_OBJECT={};export var useTechnologies=function useTechnologies(){var _useContext=useContext(StoreContext),_useContext$technolog=_slicedToArray(_useContext.technologies,2),technologies=_useContext$technolog[0].technologies,dispatch=_useContext$technolog[1];var _useContext2=useContext(StaticDataContext),endpoints=_useContext2.endpoints;useEffect(function(){if(!endpoints.devicons){dispatch({type:TECHNOLOGIES_RECEIVED,technologies:DEFAULT_OBJECT});return;}if(technologies===null&&endpoints.devicons){dispatch({type:TECHNOLOGIES_STARTED});// eslint-disable-next-line no-undef\nfetch(endpoints.devicons).then(function(res){if(res.status.toString().startsWith('2')){return res.json();}throw new Error(\"\".concat(res.status,\" \").concat(res.statusText));}).then(function(fetchedTechnologies){return dispatch({type:TECHNOLOGIES_RECEIVED,technologies:fetchedTechnologies});}).catch(function(e){console.error('Failed to fetch technologies',e);dispatch({type:TECHNOLOGIES_RECEIVED,technologies:DEFAULT_OBJECT});});}},[technologies]);return{technologies:technologies};};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/hooks/technologies/use_technologies.js"],"names":["useContext","useEffect","TECHNOLOGIES_RECEIVED","TECHNOLOGIES_STARTED","StaticDataContext","StoreContext","DEFAULT_OBJECT","useTechnologies","technologies","dispatch","endpoints","devicons","type","fetch","then","res","status","toString","startsWith","json","Error","statusText","fetchedTechnologies","catch","e","console","error"],"mappings":"yKAAA,OAASA,UAAT,CAAqBC,SAArB,KAAsC,OAAtC,CAEA,OAASC,qBAAT,CAAgCC,oBAAhC,KAA4D,wDAA5D,CACA,OAASC,iBAAT,CAA4BC,YAA5B,KAAgD,iCAAhD,CAEA,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CACA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,iBAG7BP,UAAU,CAACK,YAAD,CAHmB,kDAE7BG,YAF6B,IAEZA,YAFY,0BAEZA,YAFY,CAEIC,QAFJ,2CAIXT,UAAU,CAACI,iBAAD,CAJC,CAIzBM,SAJyB,cAIzBA,SAJyB,CAMjCT,SAAS,CAAC,UAAM,CACZ,GAAI,CAACS,SAAS,CAACC,QAAf,CAAyB,CACrBF,QAAQ,CAAC,CAAEG,IAAI,CAAEV,qBAAR,CAA+BM,YAAY,CAAEF,cAA7C,CAAD,CAAR,CACA,OACH,CACD,GAAIE,YAAY,GAAK,IAAjB,EAAyBE,SAAS,CAACC,QAAvC,CAAiD,CAC7CF,QAAQ,CAAC,CAAEG,IAAI,CAAET,oBAAR,CAAD,CAAR,CACA;AACAU,KAAK,CAACH,SAAS,CAACC,QAAX,CAAL,CACKG,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,CAAWC,QAAX,GAAsBC,UAAtB,CAAiC,GAAjC,CAAJ,CAA2C,CACvC,MAAOH,CAAAA,GAAG,CAACI,IAAJ,EAAP,CACH,CACD,KAAM,IAAIC,CAAAA,KAAJ,WAAaL,GAAG,CAACC,MAAjB,aAA2BD,GAAG,CAACM,UAA/B,EAAN,CACH,CANL,EAOKP,IAPL,CAOU,SAACQ,mBAAD,QACFb,CAAAA,QAAQ,CAAC,CAAEG,IAAI,CAAEV,qBAAR,CAA+BM,YAAY,CAAEc,mBAA7C,CAAD,CADN,EAPV,EAUKC,KAVL,CAUW,SAACC,CAAD,CAAO,CACVC,OAAO,CAACC,KAAR,CAAc,8BAAd,CAA8CF,CAA9C,EACAf,QAAQ,CAAC,CAAEG,IAAI,CAAEV,qBAAR,CAA+BM,YAAY,CAAEF,cAA7C,CAAD,CAAR,CACH,CAbL,EAcH,CACJ,CAvBQ,CAuBN,CAACE,YAAD,CAvBM,CAAT,CAyBA,MAAO,CAAEA,YAAY,CAAZA,YAAF,CAAP,CACH,CAhCM","sourcesContent":["import { useContext, useEffect } from 'react';\n\nimport { TECHNOLOGIES_RECEIVED, TECHNOLOGIES_STARTED } from '../../../store/technologies/technologies_actions_types';\nimport { StaticDataContext, StoreContext } from '../../../utils/context/contexts';\n\nconst DEFAULT_OBJECT = {};\nexport const useTechnologies = () => {\n    const {\n        technologies: [{ technologies }, dispatch]\n    } = useContext(StoreContext);\n    const { endpoints } = useContext(StaticDataContext);\n\n    useEffect(() => {\n        if (!endpoints.devicons) {\n            dispatch({ type: TECHNOLOGIES_RECEIVED, technologies: DEFAULT_OBJECT });\n            return;\n        }\n        if (technologies === null && endpoints.devicons) {\n            dispatch({ type: TECHNOLOGIES_STARTED });\n            // eslint-disable-next-line no-undef\n            fetch(endpoints.devicons)\n                .then((res) => {\n                    if (res.status.toString().startsWith('2')) {\n                        return res.json();\n                    }\n                    throw new Error(`${res.status} ${res.statusText}`);\n                })\n                .then((fetchedTechnologies) =>\n                    dispatch({ type: TECHNOLOGIES_RECEIVED, technologies: fetchedTechnologies })\n                )\n                .catch((e) => {\n                    console.error('Failed to fetch technologies', e);\n                    dispatch({ type: TECHNOLOGIES_RECEIVED, technologies: DEFAULT_OBJECT });\n                });\n        }\n    }, [technologies]);\n\n    return { technologies };\n};\n"]},"metadata":{},"sourceType":"module"}
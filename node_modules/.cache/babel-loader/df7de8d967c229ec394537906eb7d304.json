{"ast":null,"code":"export var flex={center:{display:'flex',alignItems:'center',justifyContent:'center'}};export var withCustomHorizontalScrollbar=function withCustomHorizontalScrollbar(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'#c1c1c1';return{'&::-webkit-scrollbar-track':{border:0},'&::-webkit-scrollbar':{height:5},'&::-webkit-scrollbar-thumb':{backgroundColor:color},scrollbarWidth:'thin',scrollbarColor:\"\".concat(color,\" transparent\")};};export var withCustomVerticalScrollbar=function withCustomVerticalScrollbar(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'#c1c1c1';return{'&::-webkit-scrollbar-track':{border:0},'&::-webkit-scrollbar':{width:6},'&::-webkit-scrollbar-thumb':{backgroundColor:color},scrollbarWidth:'thin',scrollbarColor:\"\".concat(color,\" transparent\")};};export var getColorsFromCardVariant=function getColorsFromCardVariant(theme,cardVariant){return theme.components.cards.variants[cardVariant]||theme.components.cards.default;};export var getHexFromPaletteColor=function getHexFromPaletteColor(theme,paletteColor){var _theme$palette$palett;var shade=arguments.length>2&&arguments[2]!==undefined?arguments[2]:500;return((_theme$palette$palett=theme.palette[paletteColor])!==null&&_theme$palette$palett!==void 0?_theme$palette$palett:theme.primary)[shade];};export var getContrastDefaultColorFromPaletteColor=function getContrastDefaultColorFromPaletteColor(theme,paletteColor){return theme.palette[paletteColor].contrastDefaultColor;};export var createScreenWidthMediaQuery=function createScreenWidthMediaQuery(){var key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'max-width';var value=arguments.length>1?arguments[1]:undefined;return\"@media screen and (\".concat(key,\": \").concat(value,\"px)\");};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/utils/styles/styles_utils.js"],"names":["flex","center","display","alignItems","justifyContent","withCustomHorizontalScrollbar","color","border","height","backgroundColor","scrollbarWidth","scrollbarColor","withCustomVerticalScrollbar","width","getColorsFromCardVariant","theme","cardVariant","components","cards","variants","default","getHexFromPaletteColor","paletteColor","shade","palette","primary","getContrastDefaultColorFromPaletteColor","contrastDefaultColor","createScreenWidthMediaQuery","key","value"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,IAAI,CAAG,CAChBC,MAAM,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,UAAU,CAAE,QAFR,CAGJC,cAAc,CAAE,QAHZ,CADQ,CAAb,CAQP,MAAO,IAAMC,CAAAA,6BAA6B,CAAG,QAAhCA,CAAAA,6BAAgC,MAACC,CAAAA,KAAD,2DAAS,SAAT,OAAwB,CACjE,6BAA8B,CAC1BC,MAAM,CAAE,CADkB,CADmC,CAIjE,uBAAwB,CACpBC,MAAM,CAAE,CADY,CAJyC,CAOjE,6BAA8B,CAC1BC,eAAe,CAAEH,KADS,CAPmC,CAUjEI,cAAc,CAAE,MAViD,CAWjEC,cAAc,WAAKL,KAAL,gBAXmD,CAAxB,EAAtC,CAcP,MAAO,IAAMM,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,MAACN,CAAAA,KAAD,2DAAS,SAAT,OAAwB,CAC/D,6BAA8B,CAC1BC,MAAM,CAAE,CADkB,CADiC,CAI/D,uBAAwB,CACpBM,KAAK,CAAE,CADa,CAJuC,CAO/D,6BAA8B,CAC1BJ,eAAe,CAAEH,KADS,CAPiC,CAU/DI,cAAc,CAAE,MAV+C,CAW/DC,cAAc,WAAKL,KAAL,gBAXiD,CAAxB,EAApC,CAcP,MAAO,IAAMQ,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,KAAD,CAAQC,WAAR,QACpCD,CAAAA,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBC,QAAvB,CAAgCH,WAAhC,GAAgDD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBE,OADnC,EAAjC,CAGP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACN,KAAD,CAAQO,YAAR,+BAAsBC,CAAAA,KAAtB,2DAA8B,GAA9B,OAClC,wBAACR,KAAK,CAACS,OAAN,CAAcF,YAAd,CAAD,+DAAgCP,KAAK,CAACU,OAAtC,EAA+CF,KAA/C,CADkC,EAA/B,CAGP,MAAO,IAAMG,CAAAA,uCAAuC,CAAG,QAA1CA,CAAAA,uCAA0C,CAACX,KAAD,CAAQO,YAAR,QACnDP,CAAAA,KAAK,CAACS,OAAN,CAAcF,YAAd,EAA4BK,oBADuB,EAAhD,CAGP,MAAO,IAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,MAACC,CAAAA,GAAD,2DAAO,WAAP,IAAoBC,CAAAA,KAApB,8EAAoDD,GAApD,cAA4DC,KAA5D,SAApC","sourcesContent":["export const flex = {\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n};\n\nexport const withCustomHorizontalScrollbar = (color = '#c1c1c1') => ({\n    '&::-webkit-scrollbar-track': {\n        border: 0\n    },\n    '&::-webkit-scrollbar': {\n        height: 5\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: color\n    },\n    scrollbarWidth: 'thin',\n    scrollbarColor: `${color} transparent`\n});\n\nexport const withCustomVerticalScrollbar = (color = '#c1c1c1') => ({\n    '&::-webkit-scrollbar-track': {\n        border: 0\n    },\n    '&::-webkit-scrollbar': {\n        width: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: color\n    },\n    scrollbarWidth: 'thin',\n    scrollbarColor: `${color} transparent`\n});\n\nexport const getColorsFromCardVariant = (theme, cardVariant) =>\n    theme.components.cards.variants[cardVariant] || theme.components.cards.default;\n\nexport const getHexFromPaletteColor = (theme, paletteColor, shade = 500) =>\n    (theme.palette[paletteColor] ?? theme.primary)[shade];\n\nexport const getContrastDefaultColorFromPaletteColor = (theme, paletteColor) =>\n    theme.palette[paletteColor].contrastDefaultColor;\n\nexport const createScreenWidthMediaQuery = (key = 'max-width', value) => `@media screen and (${key}: ${value}px)`;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect,useRef,useState}from'react';import{useIntl}from'react-intl';import{StaticDataContext}from'../../../utils/context/contexts';var GIPHY_API_ENDPOINT='https://api.giphy.com/v1/gifs/search?';export var useGiphyResults=function useGiphyResults(input){var page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;var timeout=arguments.length>3&&arguments[3]!==undefined?arguments[3]:800;var debounceSearch=useRef();var _useIntl=useIntl(),locale=_useIntl.locale;var _useContext=useContext(StaticDataContext),apiKeys=_useContext.apiKeys;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),lastLoaded=_useState2[0],setLastLoaded=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResults=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];useEffect(function(){if(!input||!apiKeys.giphy){setResults([]);return;}if(input===(lastLoaded===null||lastLoaded===void 0?void 0:lastLoaded.input)&&page===(lastLoaded===null||lastLoaded===void 0?void 0:lastLoaded.page)){return;}setError(null);if(debounceSearch.current){clearTimeout(debounceSearch.current);}debounceSearch.current=setTimeout(function(){setLoading(true);var params={lang:locale,apiKey:apiKeys.giphy,q:input,offset:page*limit,limit:limit};// eslint-disable-next-line no-undef\nfetch(encodeURI(GIPHY_API_ENDPOINT+Object.entries(params).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return\"\".concat(key,\"=\").concat(value);}).join('&'))).then(function(res){if(res.status.toString().startsWith('2')){return res.json();}throw new Error(\"\".concat(res.status,\" \").concat(res.statusText));}).then(function(_ref3){var data=_ref3.data;setResults(data.map(function(_ref4){var _images$downsized;var id=_ref4.id,title=_ref4.title,images=_ref4.images;return{id:id,url:images===null||images===void 0?void 0:(_images$downsized=images.downsized)===null||_images$downsized===void 0?void 0:_images$downsized.url,title:title};}));}).catch(function(e){console.warn('Failed to fecth from giphy',e.message);setError(e.message);}).finally(function(){setLastLoaded({input:input,page:page});debounceSearch.current=null;setLoading(false);});},timeout);},[input,lastLoaded,page]);return{gifs:results,loading:loading,error:error};};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/hooks/giphy/use_giphy_results.js"],"names":["useContext","useEffect","useRef","useState","useIntl","StaticDataContext","GIPHY_API_ENDPOINT","useGiphyResults","input","page","limit","timeout","debounceSearch","locale","apiKeys","lastLoaded","setLastLoaded","results","setResults","loading","setLoading","error","setError","giphy","current","clearTimeout","setTimeout","params","lang","apiKey","q","offset","fetch","encodeURI","Object","entries","map","key","value","join","then","res","status","toString","startsWith","json","Error","statusText","data","id","title","images","url","downsized","catch","e","console","warn","message","finally","gifs"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { StaticDataContext } from '../../../utils/context/contexts';\n\nconst GIPHY_API_ENDPOINT = 'https://api.giphy.com/v1/gifs/search?';\n\nexport const useGiphyResults = (input, page = 0, limit = 20, timeout = 800) => {\n    const debounceSearch = useRef();\n    const { locale } = useIntl();\n    const { apiKeys } = useContext(StaticDataContext);\n    const [lastLoaded, setLastLoaded] = useState(false);\n    const [results, setResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!input || !apiKeys.giphy) {\n            setResults([]);\n            return;\n        }\n        if (input === lastLoaded?.input && page === lastLoaded?.page) {\n            return;\n        }\n        setError(null);\n        if (debounceSearch.current) {\n            clearTimeout(debounceSearch.current);\n        }\n        debounceSearch.current = setTimeout(() => {\n            setLoading(true);\n            const params = {\n                lang: locale,\n                apiKey: apiKeys.giphy,\n                q: input,\n                offset: page * limit,\n                limit\n            };\n\n            // eslint-disable-next-line no-undef\n            fetch(\n                encodeURI(\n                    GIPHY_API_ENDPOINT +\n                        Object.entries(params)\n                            .map(([key, value]) => `${key}=${value}`)\n                            .join('&')\n                )\n            )\n                .then((res) => {\n                    if (res.status.toString().startsWith('2')) {\n                        return res.json();\n                    }\n                    throw new Error(`${res.status} ${res.statusText}`);\n                })\n                .then(({ data }) => {\n                    setResults(\n                        data.map(({ id, title, images }) => ({\n                            id,\n                            url: images?.downsized?.url,\n                            title\n                        }))\n                    );\n                })\n                .catch((e) => {\n                    console.warn('Failed to fecth from giphy', e.message);\n                    setError(e.message);\n                })\n                .finally(() => {\n                    setLastLoaded({ input, page });\n                    debounceSearch.current = null;\n                    setLoading(false);\n                });\n        }, timeout);\n    }, [input, lastLoaded, page]);\n\n    return { gifs: results, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}
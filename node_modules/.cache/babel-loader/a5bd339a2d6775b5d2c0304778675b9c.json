{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import get from'lodash/get';var hexToRgb=function hexToRgb(hex){var c;if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){c=hex.substring(1).split('');if(c.length===3){c=[c[0],c[0],c[1],c[1],c[2],c[2]];}c=\"0x\".concat(c.join(''));// eslint-disable-next-line no-bitwise\nreturn[c>>16&255,c>>8&255,c&255];}throw new Error('Bad Hex');};var THEME_TRANSFORMS={palette:function palette(colors){return Object.entries(colors).reduce(function(colorsAcc,_ref){var _ref2=_slicedToArray(_ref,2),colorName=_ref2[0],shades=_ref2[1];var colorAccumulator=colorsAcc;colorAccumulator[colorName]=_objectSpread(_objectSpread({},shades),{},{rgbShades:Object.entries(shades).reduce(function(shadesAcc,_ref3){var _ref4=_slicedToArray(_ref3,2),shade=_ref4[0],shadeValue=_ref4[1];if(Number.isNaN(parseInt(shade,10))){return shadesAcc;}var shadesAccumulator=shadesAcc;shadesAccumulator[shade]=hexToRgb(shadeValue);return shadesAccumulator;},{})});return colorAccumulator;},{});}};export var transformTheme=function transformTheme(theme){return Object.entries(THEME_TRANSFORMS).reduce(function(acc,_ref5){var _ref6=_slicedToArray(_ref5,2),path=_ref6[0],transform=_ref6[1];acc[path]=transform(get(theme,path));return acc;},theme);};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/utils/styles/theme/theme_transforms.js"],"names":["get","hexToRgb","hex","c","test","substring","split","length","join","Error","THEME_TRANSFORMS","palette","colors","Object","entries","reduce","colorsAcc","colorName","shades","colorAccumulator","rgbShades","shadesAcc","shade","shadeValue","Number","isNaN","parseInt","shadesAccumulator","transformTheme","theme","acc","path","transform"],"mappings":"iVAAA,MAAOA,CAAAA,GAAP,KAAgB,YAAhB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CACtB,GAAIC,CAAAA,CAAJ,CACA,GAAI,2BAA2BC,IAA3B,CAAgCF,GAAhC,CAAJ,CAA0C,CACtCC,CAAC,CAAGD,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiBC,KAAjB,CAAuB,EAAvB,CAAJ,CACA,GAAIH,CAAC,CAACI,MAAF,GAAa,CAAjB,CAAoB,CAChBJ,CAAC,CAAG,CAACA,CAAC,CAAC,CAAD,CAAF,CAAOA,CAAC,CAAC,CAAD,CAAR,CAAaA,CAAC,CAAC,CAAD,CAAd,CAAmBA,CAAC,CAAC,CAAD,CAApB,CAAyBA,CAAC,CAAC,CAAD,CAA1B,CAA+BA,CAAC,CAAC,CAAD,CAAhC,CAAJ,CACH,CACDA,CAAC,aAAQA,CAAC,CAACK,IAAF,CAAO,EAAP,CAAR,CAAD,CACA;AACA,MAAO,CAAEL,CAAC,EAAI,EAAN,CAAY,GAAb,CAAmBA,CAAC,EAAI,CAAN,CAAW,GAA7B,CAAkCA,CAAC,CAAG,GAAtC,CAAP,CACH,CACD,KAAM,IAAIM,CAAAA,KAAJ,CAAU,SAAV,CAAN,CACH,CAZD,CAcA,GAAMC,CAAAA,gBAAgB,CAAG,CACrBC,OAAO,CAAE,iBAACC,MAAD,QACLC,CAAAA,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,MAAvB,CAA8B,SAACC,SAAD,MAAoC,kCAAvBC,SAAuB,UAAZC,MAAY,UAC9D,GAAMC,CAAAA,gBAAgB,CAAGH,SAAzB,CACAG,gBAAgB,CAACF,SAAD,CAAhB,gCACOC,MADP,MAEIE,SAAS,CAAEP,MAAM,CAACC,OAAP,CAAeI,MAAf,EAAuBH,MAAvB,CAA8B,SAACM,SAAD,OAAoC,mCAAvBC,KAAuB,UAAhBC,UAAgB,UACzE,GAAIC,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAACJ,KAAD,CAAQ,EAAR,CAArB,CAAJ,CAAuC,CACnC,MAAOD,CAAAA,SAAP,CACH,CACD,GAAMM,CAAAA,iBAAiB,CAAGN,SAA1B,CACAM,iBAAiB,CAACL,KAAD,CAAjB,CAA2BrB,QAAQ,CAACsB,UAAD,CAAnC,CACA,MAAOI,CAAAA,iBAAP,CACH,CAPU,CAOR,EAPQ,CAFf,GAWA,MAAOR,CAAAA,gBAAP,CACH,CAdD,CAcG,EAdH,CADK,EADY,CAAzB,CAmBA,MAAO,IAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAC1BhB,CAAAA,MAAM,CAACC,OAAP,CAAeJ,gBAAf,EAAiCK,MAAjC,CAAwC,SAACe,GAAD,OAA4B,mCAArBC,IAAqB,UAAfC,SAAe,UAChEF,GAAG,CAACC,IAAD,CAAH,CAAYC,SAAS,CAAChC,GAAG,CAAC6B,KAAD,CAAQE,IAAR,CAAJ,CAArB,CACA,MAAOD,CAAAA,GAAP,CACH,CAHD,CAGGD,KAHH,CAD0B,EAAvB","sourcesContent":["import get from 'lodash/get';\n\nconst hexToRgb = (hex) => {\n    let c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = `0x${c.join('')}`;\n        // eslint-disable-next-line no-bitwise\n        return [(c >> 16) & 255, (c >> 8) & 255, c & 255];\n    }\n    throw new Error('Bad Hex');\n};\n\nconst THEME_TRANSFORMS = {\n    palette: (colors) =>\n        Object.entries(colors).reduce((colorsAcc, [colorName, shades]) => {\n            const colorAccumulator = colorsAcc;\n            colorAccumulator[colorName] = {\n                ...shades,\n                rgbShades: Object.entries(shades).reduce((shadesAcc, [shade, shadeValue]) => {\n                    if (Number.isNaN(parseInt(shade, 10))) {\n                        return shadesAcc;\n                    }\n                    const shadesAccumulator = shadesAcc;\n                    shadesAccumulator[shade] = hexToRgb(shadeValue);\n                    return shadesAccumulator;\n                }, {})\n            };\n            return colorAccumulator;\n        }, {})\n};\n\nexport const transformTheme = (theme) =>\n    Object.entries(THEME_TRANSFORMS).reduce((acc, [path, transform]) => {\n        acc[path] = transform(get(theme, path));\n        return acc;\n    }, theme);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createScreenWidthMediaQuery,flex,getColorsFromCardVariant,getHexFromPaletteColor,withCustomVerticalScrollbar}from'../../../../../utils/styles/styles_utils';var center=flex.center;export var styles=function styles(theme){var screenSizes=theme.screenSizes,height=theme.components.cards.height,spacing=theme.miscellaneous.spacing;return _defineProperty({image:{height:height,width:'100%',objectFit:'cover'},slideName:{zIndex:4,position:'absolute',width:'100%',bottom:80,left:0,textAlign:'center'},transitioningItemWithoutGif:_objectSpread({height:'100%',width:'100%',padding:[spacing*12,spacing*14],zIndex:4,position:'absolute',top:0,left:0},center),slideNameWithoutGif:_objectSpread({maxHeight:'100%',overflow:'auto',paddingRight:spacing,lineHeight:'initial'},withCustomVerticalScrollbar('#fff')),slidesContainer:{height:'100%','& .slick-slider':{height:'100%'},'& .slick-dots':{zIndex:3,bottom:35}},reverseArrow:{'& > svg':{transform:'scale(-1)'}},nextArrow:{right:35},prevArrow:{left:35},arrow:function arrow(_ref){var variant=_ref.variant;return _objectSpread(_objectSpread({zIndex:3,top:'calc(50% - 25px)',position:'absolute',backgroundColor:getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).backgroundColor),height:50,width:50,cursor:'pointer',borderRadius:'50%'},center),{},{'& > svg':{height:20,width:'auto','& > path':{stroke:getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).color)}}});}},createScreenWidthMediaQuery('max-width',screenSizes.xs),{slidesContainer:{'& .slick-dots':{display:['none','!important']}},slideName:{bottom:35}});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/gifs/gifs_back/gifs_back_styles.js"],"names":["createScreenWidthMediaQuery","flex","getColorsFromCardVariant","getHexFromPaletteColor","withCustomVerticalScrollbar","center","styles","theme","screenSizes","height","components","cards","spacing","miscellaneous","image","width","objectFit","slideName","zIndex","position","bottom","left","textAlign","transitioningItemWithoutGif","padding","top","slideNameWithoutGif","maxHeight","overflow","paddingRight","lineHeight","slidesContainer","reverseArrow","transform","nextArrow","right","prevArrow","arrow","variant","backgroundColor","cursor","borderRadius","stroke","color","xs","display"],"mappings":"mVAAA,OACIA,2BADJ,CAEIC,IAFJ,CAGIC,wBAHJ,CAIIC,sBAJJ,CAKIC,2BALJ,KAMO,0CANP,C,GAQQC,CAAAA,M,CAAWJ,I,CAAXI,M,CAER,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,IAEzBC,CAAAA,WAFyB,CAOzBD,KAPyB,CAEzBC,WAFyB,CAIZC,MAJY,CAOzBF,KAPyB,CAGzBG,UAHyB,CAIrBC,KAJqB,CAIZF,MAJY,CAMRG,OANQ,CAOzBL,KAPyB,CAMzBM,aANyB,CAMRD,OANQ,CAQ7B,wBACIE,KAAK,CAAE,CACHL,MAAM,CAANA,MADG,CAEHM,KAAK,CAAE,MAFJ,CAGHC,SAAS,CAAE,OAHR,CADX,CAMIC,SAAS,CAAE,CACPC,MAAM,CAAE,CADD,CAEPC,QAAQ,CAAE,UAFH,CAGPJ,KAAK,CAAE,MAHA,CAIPK,MAAM,CAAE,EAJD,CAKPC,IAAI,CAAE,CALC,CAMPC,SAAS,CAAE,QANJ,CANf,CAcIC,2BAA2B,gBACvBd,MAAM,CAAE,MADe,CAEvBM,KAAK,CAAE,MAFgB,CAGvBS,OAAO,CAAE,CAACZ,OAAO,CAAG,EAAX,CAAeA,OAAO,CAAG,EAAzB,CAHc,CAIvBM,MAAM,CAAE,CAJe,CAKvBC,QAAQ,CAAE,UALa,CAMvBM,GAAG,CAAE,CANkB,CAOvBJ,IAAI,CAAE,CAPiB,EAQpBhB,MARoB,CAd/B,CAwBIqB,mBAAmB,gBACfC,SAAS,CAAE,MADI,CAEfC,QAAQ,CAAE,MAFK,CAGfC,YAAY,CAAEjB,OAHC,CAIfkB,UAAU,CAAE,SAJG,EAKZ1B,2BAA2B,CAAC,MAAD,CALf,CAxBvB,CA+BI2B,eAAe,CAAE,CACbtB,MAAM,CAAE,MADK,CAEb,kBAAmB,CACfA,MAAM,CAAE,MADO,CAFN,CAKb,gBAAiB,CACbS,MAAM,CAAE,CADK,CAEbE,MAAM,CAAE,EAFK,CALJ,CA/BrB,CAyCIY,YAAY,CAAE,CACV,UAAW,CACPC,SAAS,CAAE,WADJ,CADD,CAzClB,CA8CIC,SAAS,CAAE,CACPC,KAAK,CAAE,EADA,CA9Cf,CAiDIC,SAAS,CAAE,CACPf,IAAI,CAAE,EADC,CAjDf,CAoDIgB,KAAK,CAAE,wBAAGC,CAAAA,OAAH,MAAGA,OAAH,qCACHpB,MAAM,CAAE,CADL,CAEHO,GAAG,CAAE,kBAFF,CAGHN,QAAQ,CAAE,UAHP,CAIHoB,eAAe,CAAEpC,sBAAsB,CAACI,KAAD,CAAQL,wBAAwB,CAACK,KAAD,CAAQ+B,OAAR,CAAxB,CAAyCC,eAAjD,CAJpC,CAKH9B,MAAM,CAAE,EALL,CAMHM,KAAK,CAAE,EANJ,CAOHyB,MAAM,CAAE,SAPL,CAQHC,YAAY,CAAE,KARX,EASApC,MATA,MAUH,UAAW,CACPI,MAAM,CAAE,EADD,CAEPM,KAAK,CAAE,MAFA,CAGP,WAAY,CACR2B,MAAM,CAAEvC,sBAAsB,CAACI,KAAD,CAAQL,wBAAwB,CAACK,KAAD,CAAQ+B,OAAR,CAAxB,CAAyCK,KAAjD,CADtB,CAHL,CAVR,IApDX,EAsEK3C,2BAA2B,CAAC,WAAD,CAAcQ,WAAW,CAACoC,EAA1B,CAtEhC,CAsEgE,CACxDb,eAAe,CAAE,CACb,gBAAiB,CACbc,OAAO,CAAE,CAAC,MAAD,CAAS,YAAT,CADI,CADJ,CADuC,CAMxD5B,SAAS,CAAE,CACPG,MAAM,CAAE,EADD,CAN6C,CAtEhE,EAiFH,CAzFM","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    flex,\n    getColorsFromCardVariant,\n    getHexFromPaletteColor,\n    withCustomVerticalScrollbar\n} from '../../../../../utils/styles/styles_utils';\n\nconst { center } = flex;\n\nexport const styles = (theme) => {\n    const {\n        screenSizes,\n        components: {\n            cards: { height }\n        },\n        miscellaneous: { spacing }\n    } = theme;\n    return {\n        image: {\n            height,\n            width: '100%',\n            objectFit: 'cover'\n        },\n        slideName: {\n            zIndex: 4,\n            position: 'absolute',\n            width: '100%',\n            bottom: 80,\n            left: 0,\n            textAlign: 'center'\n        },\n        transitioningItemWithoutGif: {\n            height: '100%',\n            width: '100%',\n            padding: [spacing * 12, spacing * 14],\n            zIndex: 4,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            ...center\n        },\n        slideNameWithoutGif: {\n            maxHeight: '100%',\n            overflow: 'auto',\n            paddingRight: spacing,\n            lineHeight: 'initial',\n            ...withCustomVerticalScrollbar('#fff')\n        },\n        slidesContainer: {\n            height: '100%',\n            '& .slick-slider': {\n                height: '100%'\n            },\n            '& .slick-dots': {\n                zIndex: 3,\n                bottom: 35\n            }\n        },\n        reverseArrow: {\n            '& > svg': {\n                transform: 'scale(-1)'\n            }\n        },\n        nextArrow: {\n            right: 35\n        },\n        prevArrow: {\n            left: 35\n        },\n        arrow: ({ variant }) => ({\n            zIndex: 3,\n            top: 'calc(50% - 25px)',\n            position: 'absolute',\n            backgroundColor: getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backgroundColor),\n            height: 50,\n            width: 50,\n            cursor: 'pointer',\n            borderRadius: '50%',\n            ...center,\n            '& > svg': {\n                height: 20,\n                width: 'auto',\n                '& > path': {\n                    stroke: getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).color)\n                }\n            }\n        }),\n        [createScreenWidthMediaQuery('max-width', screenSizes.xs)]: {\n            slidesContainer: {\n                '& .slick-dots': {\n                    display: ['none', '!important']\n                }\n            },\n            slideName: {\n                bottom: 35\n            }\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
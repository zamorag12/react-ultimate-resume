{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useMemo,useRef}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage,useIntl}from'react-intl';import{List,ListItem,PopperCard,Typography}from'@welovedevs/ui';import{ProfileCardSection}from'../../../../commons/profile_card/profile_card_section/profile_card_section';import{ProfileCardSectionTitle}from'../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';import{ProfileCardSectionText}from'../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';import{ProfileCardAnimatedBack}from'../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';import{ContractType}from'../../../../commons/fields/contract_types/contract_types';import{DreamJobCurrentJobIssues}from'./dream_job_current_job_issues/dream_job_current_job_issues';import{DreamJobPerks}from'./dream_job_perks/dream_job_perks';import{DreamJobSalarySectionContent}from'./dream_job_salary_section_content/dream_job_salary_section_content';import{useOpenerState}from'../../../../hooks/use_opener_state';import{existsAndNotEmpty}from'../../../utils/exists_and_not_empty';import{REMOTE_FREQUENCY}from'../../../../../utils/enums/remote/remote_utils';import{remoteDisplayTranslations}from'../../../../../utils/enums/remote/remote_filter_translations';import{styles}from'./dream_job_back_styles';import{hasOnlyFreelanceContract}from'../../../utils/has_only_freelance_contract';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var DreamJobBackComponent=function DreamJobBackComponent(_ref){var data=_ref.data;var classes=useStyles();var averageDailyRate=data.averageDailyRate,places=data.places,perks=data.perks,salary=data.salary,remoteFrequency=data.remoteFrequency,contractTypes=data.contractTypes,currentJobIssues=data.currentJobIssues;var isFreelance=hasOnlyFreelanceContract(contractTypes);return/*#__PURE__*/_jsxs(ProfileCardAnimatedBack,{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Title\",defaultMessage:\"Dream job\"}),children:[existsAndNotEmpty(places)&&/*#__PURE__*/_jsx(ProfileCardSection,{children:/*#__PURE__*/_jsx(DreamJobLocations,{places:places,remoteFrequency:remoteFrequency,classes:classes})}),existsAndNotEmpty(isFreelance?averageDailyRate:salary)&&(isFreelance?averageDailyRate!=='0':salary!=='0')&&/*#__PURE__*/_jsx(ProfileCardSection,{children:/*#__PURE__*/_jsx(DreamJobSalarySectionContent,{contractTypes:contractTypes,averageDailyRate:averageDailyRate,salary:salary})}),existsAndNotEmpty(contractTypes)&&/*#__PURE__*/_jsxs(ProfileCardSection,{children:[/*#__PURE__*/_jsx(ProfileCardSectionTitle,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.ContractTypes.Title\",defaultMessage:\"Contract types\"})}),/*#__PURE__*/_jsx(ProfileCardSectionText,{children:/*#__PURE__*/_jsx(ContractType,{contractTypes:contractTypes})})]}),existsAndNotEmpty(perks)&&typeof perks==='object'&&Object.values(perks).some(function(value){return existsAndNotEmpty(value);})&&/*#__PURE__*/_jsxs(ProfileCardSection,{children:[/*#__PURE__*/_jsx(ProfileCardSectionTitle,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.Perks.Title\",defaultMessage:\"Important perks in my job\"})}),/*#__PURE__*/_jsx(ProfileCardSectionText,{children:/*#__PURE__*/_jsx(DreamJobPerks,{perks:perks})})]}),existsAndNotEmpty(currentJobIssues)&&/*#__PURE__*/_jsxs(ProfileCardSection,{children:[/*#__PURE__*/_jsx(ProfileCardSectionTitle,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.CurrentJobIssues.Title\",defaultMessage:\"Current job's issues\"})}),/*#__PURE__*/_jsx(ProfileCardSectionText,{component:\"div\",children:/*#__PURE__*/_jsx(DreamJobCurrentJobIssues,{currentJobIssues:currentJobIssues})})]})]});};var DreamJobLocations=function DreamJobLocations(_ref2){var remoteFrequency=_ref2.remoteFrequency,places=_ref2.places,classes=_ref2.classes;var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;if(remoteFrequency===REMOTE_FREQUENCY.FULL_TIME){return/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.RemoteOnly\",defaultMessage:\"I want to work remotely\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProfileCardSectionTitle,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.Title\",defaultMessage:\"My dreamjob location\"})}),/*#__PURE__*/_jsxs(ProfileCardSectionText,{children:[/*#__PURE__*/_jsx(DreamJobPlaces,{places:places,classes:classes}),/*#__PURE__*/_jsx(\"br\",{}),remoteFrequency&&formatMessage(remoteDisplayTranslations[remoteFrequency]||remoteDisplayTranslations.others)]})]});};var DreamJobPlaces=function DreamJobPlaces(_ref3){var _ref3$places=_ref3.places,places=_ref3$places===void 0?[]:_ref3$places,classes=_ref3.classes;var textAnchor=useRef();var _useOpenerState=useOpenerState(),_useOpenerState2=_slicedToArray(_useOpenerState,2),open=_useOpenerState2[0],handlers=_useOpenerState2[1];var _useMemo=useMemo(function(){var placesCopy=_toConsumableArray(places);var item=placesCopy.shift();return{firstPlace:item,remainingPlaces:placesCopy};},[places]),firstPlace=_useMemo.firstPlace,remainingPlaces=_useMemo.remainingPlaces;if(!remainingPlaces.length){var _firstPlace$name;return/*#__PURE__*/_jsx(ProfileCardSectionText,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.OnePlace\",defaultMessage:\"I want to work in {place}\",values:{place:(_firstPlace$name=firstPlace===null||firstPlace===void 0?void 0:firstPlace.name)!==null&&_firstPlace$name!==void 0?_firstPlace$name:''}})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({className:classes.button,type:\"button\",ref:textAnchor},handlers),{},{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Dreamjob.Back.Location.ManyPlaces\",defaultMessage:\"I want to work in {place} and {length, plural, one {one other place} other {# other places}}\",values:{place:firstPlace.name,length:remainingPlaces.length}})})),/*#__PURE__*/_jsx(PopperCard,{open:open,anchorElement:textAnchor.current,popperProps:{modifiers:{preventOverflow:{boundariesElement:'viewport'}}},children:/*#__PURE__*/_jsx(List,{children:remainingPlaces.filter(function(item){return item;}).map(function(_ref4,index){var name=_ref4.name;return/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(Typography,{children:name})},\"place_popper_\".concat(index));})})})]});};export var DreamJobBack=/*#__PURE__*/memo(DreamJobBackComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/dream_job/dream_job_back/dream_job_back.jsx"],"names":["React","memo","useMemo","useRef","createUseStyles","FormattedMessage","useIntl","List","ListItem","PopperCard","Typography","ProfileCardSection","ProfileCardSectionTitle","ProfileCardSectionText","ProfileCardAnimatedBack","ContractType","DreamJobCurrentJobIssues","DreamJobPerks","DreamJobSalarySectionContent","useOpenerState","existsAndNotEmpty","REMOTE_FREQUENCY","remoteDisplayTranslations","styles","hasOnlyFreelanceContract","useStyles","DreamJobBackComponent","data","classes","averageDailyRate","places","perks","salary","remoteFrequency","contractTypes","currentJobIssues","isFreelance","Object","values","some","value","DreamJobLocations","formatMessage","FULL_TIME","others","DreamJobPlaces","textAnchor","open","handlers","placesCopy","item","shift","firstPlace","remainingPlaces","length","place","name","button","current","modifiers","preventOverflow","boundariesElement","filter","map","index","DreamJobBack"],"mappings":"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","sourcesContent":["import React, { memo, useMemo, useRef } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { List, ListItem, PopperCard, Typography } from '@welovedevs/ui';\n\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ContractType } from '../../../../commons/fields/contract_types/contract_types';\nimport { DreamJobCurrentJobIssues } from './dream_job_current_job_issues/dream_job_current_job_issues';\nimport { DreamJobPerks } from './dream_job_perks/dream_job_perks';\nimport { DreamJobSalarySectionContent } from './dream_job_salary_section_content/dream_job_salary_section_content';\n\nimport { useOpenerState } from '../../../../hooks/use_opener_state';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\n\nimport { REMOTE_FREQUENCY } from '../../../../../utils/enums/remote/remote_utils';\nimport { remoteDisplayTranslations } from '../../../../../utils/enums/remote/remote_filter_translations';\n\nimport { styles } from './dream_job_back_styles';\nimport { hasOnlyFreelanceContract } from '../../../utils/has_only_freelance_contract';\n\nconst useStyles = createUseStyles(styles);\n\nconst DreamJobBackComponent = ({ data }) => {\n    const classes = useStyles();\n    const { averageDailyRate, places, perks, salary, remoteFrequency, contractTypes, currentJobIssues } = data;\n    const isFreelance = hasOnlyFreelanceContract(contractTypes);\n\n    return (\n        <ProfileCardAnimatedBack title={<FormattedMessage id=\"Dreamjob.Back.Title\" defaultMessage=\"Dream job\" />}>\n            {existsAndNotEmpty(places) && (\n                <ProfileCardSection>\n                    <DreamJobLocations places={places} remoteFrequency={remoteFrequency} classes={classes} />\n                </ProfileCardSection>\n            )}\n            {existsAndNotEmpty(isFreelance ? averageDailyRate : salary) &&\n                (isFreelance ? averageDailyRate !== '0' : salary !== '0') && (\n                    <ProfileCardSection>\n                        <DreamJobSalarySectionContent\n                            contractTypes={contractTypes}\n                            averageDailyRate={averageDailyRate}\n                            salary={salary}\n                        />\n                    </ProfileCardSection>\n                )}\n            {existsAndNotEmpty(contractTypes) && (\n                <ProfileCardSection>\n                    <ProfileCardSectionTitle>\n                        <FormattedMessage id=\"Dreamjob.Back.ContractTypes.Title\" defaultMessage=\"Contract types\" />\n                    </ProfileCardSectionTitle>\n                    <ProfileCardSectionText>\n                        <ContractType contractTypes={contractTypes} />\n                    </ProfileCardSectionText>\n                </ProfileCardSection>\n            )}\n            {existsAndNotEmpty(perks) &&\n                typeof perks === 'object' &&\n                Object.values(perks).some((value) => existsAndNotEmpty(value)) && (\n                    <ProfileCardSection>\n                        <ProfileCardSectionTitle>\n                            <FormattedMessage\n                                id=\"Dreamjob.Back.Location.Perks.Title\"\n                                defaultMessage=\"Important perks in my job\"\n                            />\n                        </ProfileCardSectionTitle>\n                        <ProfileCardSectionText>\n                            <DreamJobPerks perks={perks} />\n                        </ProfileCardSectionText>\n                    </ProfileCardSection>\n                )}\n            {existsAndNotEmpty(currentJobIssues) && (\n                <ProfileCardSection>\n                    <ProfileCardSectionTitle>\n                        <FormattedMessage\n                            id=\"Dreamjob.Back.Location.CurrentJobIssues.Title\"\n                            defaultMessage=\"Current job's issues\"\n                        />\n                    </ProfileCardSectionTitle>\n                    <ProfileCardSectionText component=\"div\">\n                        <DreamJobCurrentJobIssues currentJobIssues={currentJobIssues} />\n                    </ProfileCardSectionText>\n                </ProfileCardSection>\n            )}\n        </ProfileCardAnimatedBack>\n    );\n};\n\nconst DreamJobLocations = ({ remoteFrequency, places, classes }) => {\n    const { formatMessage } = useIntl();\n    if (remoteFrequency === REMOTE_FREQUENCY.FULL_TIME) {\n        return <FormattedMessage id=\"Dreamjob.Back.Location.RemoteOnly\" defaultMessage=\"I want to work remotely\" />;\n    }\n\n    return (\n        <>\n            <ProfileCardSectionTitle>\n                <FormattedMessage id=\"Dreamjob.Back.Location.Title\" defaultMessage=\"My dreamjob location\" />\n            </ProfileCardSectionTitle>\n            <ProfileCardSectionText>\n                <DreamJobPlaces places={places} classes={classes} />\n                <br />\n                {remoteFrequency &&\n                    formatMessage(remoteDisplayTranslations[remoteFrequency] || remoteDisplayTranslations.others)}\n            </ProfileCardSectionText>\n        </>\n    );\n};\n\nconst DreamJobPlaces = ({ places = [], classes }) => {\n    const textAnchor = useRef();\n    const [open, handlers] = useOpenerState();\n    const { firstPlace, remainingPlaces } = useMemo(() => {\n        const placesCopy = [...places];\n        const item = placesCopy.shift();\n        return { firstPlace: item, remainingPlaces: placesCopy };\n    }, [places]);\n\n    if (!remainingPlaces.length) {\n        return (\n            <ProfileCardSectionText>\n                <FormattedMessage\n                    id=\"Dreamjob.Back.Location.OnePlace\"\n                    defaultMessage=\"I want to work in {place}\"\n                    values={{ place: firstPlace?.name ?? '' }}\n                />\n            </ProfileCardSectionText>\n        );\n    }\n\n    return (\n        <>\n            <button className={classes.button} type=\"button\" ref={textAnchor} {...handlers}>\n                <FormattedMessage\n                    id=\"Dreamjob.Back.Location.ManyPlaces\"\n                    defaultMessage=\"I want to work in {place} and {length, plural, one {one other place} other {# other places}}\"\n                    values={{ place: firstPlace.name, length: remainingPlaces.length }}\n                />\n            </button>\n            <PopperCard\n                open={open}\n                anchorElement={textAnchor.current}\n                popperProps={{\n                    modifiers: {\n                        preventOverflow: {\n                            boundariesElement: 'viewport'\n                        }\n                    }\n                }}\n            >\n                <List>\n                    {remainingPlaces\n                        .filter((item) => item)\n                        .map(({ name }, index) => (\n                            <ListItem key={`place_popper_${index}`}>\n                                <Typography>{name}</Typography>\n                            </ListItem>\n                        ))}\n                </List>\n            </PopperCard>\n        </>\n    );\n};\n\nexport const DreamJobBack = memo(DreamJobBackComponent);\n"]},"metadata":{},"sourceType":"module"}
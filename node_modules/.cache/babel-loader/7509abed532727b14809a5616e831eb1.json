{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createScreenWidthMediaQuery,getColorsFromCardVariant,getHexFromPaletteColor,withCustomVerticalScrollbar}from'../../../../utils/styles/styles_utils';var getContentBackgroundColor=function getContentBackgroundColor(theme,cardVariant){var _getColorsFromCardVar=getColorsFromCardVariant(theme,cardVariant),backBackgroundColor=_getColorsFromCardVar.backBackgroundColor,frontBackgroundColor=_getColorsFromCardVar.backgroundColor;if(frontBackgroundColor===backBackgroundColor){return'transparent';}return getHexFromPaletteColor(theme,backBackgroundColor);};export var styles=function styles(theme){var _ref2;var spacing=theme.miscellaneous.spacing,screenSizes=theme.screenSizes;var QUERY_SMALL=createScreenWidthMediaQuery('max-width',screenSizes.small);var QUERY_EXTRA_SMALL=createScreenWidthMediaQuery('max-width',screenSizes.xs);return _ref2={container:function container(_ref){var variant=_ref.variant;var backHexColor=getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).backColor);return _objectSpread({padding:[spacing*4,spacing*8],backgroundColor:getContentBackgroundColor(theme,variant),color:backHexColor,flex:1,overflow:'auto'},withCustomVerticalScrollbar(getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).backColor)));}},_defineProperty(_ref2,QUERY_SMALL,{container:function container(){return{padding:[[spacing*4,spacing*5],'!important']};}}),_defineProperty(_ref2,QUERY_EXTRA_SMALL,{container:function container(){return{padding:[[spacing*4,spacing*3],'!important']};}}),_ref2;};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/profile_card/profile_card_content/profile_card_content_styles.js"],"names":["createScreenWidthMediaQuery","getColorsFromCardVariant","getHexFromPaletteColor","withCustomVerticalScrollbar","getContentBackgroundColor","theme","cardVariant","backBackgroundColor","frontBackgroundColor","backgroundColor","styles","spacing","miscellaneous","screenSizes","QUERY_SMALL","small","QUERY_EXTRA_SMALL","xs","container","variant","backHexColor","backColor","padding","color","flex","overflow"],"mappings":"mVAAA,OACIA,2BADJ,CAEIC,wBAFJ,CAGIC,sBAHJ,CAIIC,2BAJJ,KAKO,uCALP,CAOA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,KAAD,CAAQC,WAAR,CAAwB,2BACiBL,wBAAwB,CAACI,KAAD,CAAQC,WAAR,CADzC,CAC9CC,mBAD8C,uBAC9CA,mBAD8C,CACRC,oBADQ,uBACzBC,eADyB,CAEtD,GAAID,oBAAoB,GAAKD,mBAA7B,CAAkD,CAC9C,MAAO,aAAP,CACH,CACD,MAAOL,CAAAA,sBAAsB,CAACG,KAAD,CAAQE,mBAAR,CAA7B,CACH,CAND,CAQA,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACL,KAAD,CAAW,cAERM,CAAAA,OAFQ,CAIzBN,KAJyB,CAEzBO,aAFyB,CAERD,OAFQ,CAGzBE,WAHyB,CAIzBR,KAJyB,CAGzBQ,WAHyB,CAM7B,GAAMC,CAAAA,WAAW,CAAGd,2BAA2B,CAAC,WAAD,CAAca,WAAW,CAACE,KAA1B,CAA/C,CACA,GAAMC,CAAAA,iBAAiB,CAAGhB,2BAA2B,CAAC,WAAD,CAAca,WAAW,CAACI,EAA1B,CAArD,CAEA,cACIC,SAAS,CAAE,wBAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACxB,GAAMC,CAAAA,YAAY,CAAGlB,sBAAsB,CAACG,KAAD,CAAQJ,wBAAwB,CAACI,KAAD,CAAQc,OAAR,CAAxB,CAAyCE,SAAjD,CAA3C,CACA,sBACIC,OAAO,CAAE,CAACX,OAAO,CAAG,CAAX,CAAcA,OAAO,CAAG,CAAxB,CADb,CAEIF,eAAe,CAAEL,yBAAyB,CAACC,KAAD,CAAQc,OAAR,CAF9C,CAGII,KAAK,CAAEH,YAHX,CAIII,IAAI,CAAE,CAJV,CAKIC,QAAQ,CAAE,MALd,EAMOtB,2BAA2B,CAC1BD,sBAAsB,CAACG,KAAD,CAAQJ,wBAAwB,CAACI,KAAD,CAAQc,OAAR,CAAxB,CAAyCE,SAAjD,CADI,CANlC,EAUH,CAbL,wBAcKP,WAdL,CAcmB,CACXI,SAAS,CAAE,2BAAO,CACdI,OAAO,CAAE,CAAC,CAACX,OAAO,CAAG,CAAX,CAAcA,OAAO,CAAG,CAAxB,CAAD,CAA6B,YAA7B,CADK,CAAP,EADA,CAdnB,wBAmBKK,iBAnBL,CAmByB,CACjBE,SAAS,CAAE,2BAAO,CACdI,OAAO,CAAE,CAAC,CAACX,OAAO,CAAG,CAAX,CAAcA,OAAO,CAAG,CAAxB,CAAD,CAA6B,YAA7B,CADK,CAAP,EADM,CAnBzB,QAyBH,CAlCM","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    getColorsFromCardVariant,\n    getHexFromPaletteColor,\n    withCustomVerticalScrollbar\n} from '../../../../utils/styles/styles_utils';\n\nconst getContentBackgroundColor = (theme, cardVariant) => {\n    const { backBackgroundColor, backgroundColor: frontBackgroundColor } = getColorsFromCardVariant(theme, cardVariant);\n    if (frontBackgroundColor === backBackgroundColor) {\n        return 'transparent';\n    }\n    return getHexFromPaletteColor(theme, backBackgroundColor);\n};\n\nexport const styles = (theme) => {\n    const {\n        miscellaneous: { spacing },\n        screenSizes\n    } = theme;\n\n    const QUERY_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.small);\n    const QUERY_EXTRA_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.xs);\n\n    return {\n        container: ({ variant }) => {\n            const backHexColor = getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor);\n            return {\n                padding: [spacing * 4, spacing * 8],\n                backgroundColor: getContentBackgroundColor(theme, variant),\n                color: backHexColor,\n                flex: 1,\n                overflow: 'auto',\n                ...withCustomVerticalScrollbar(\n                    getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor)\n                )\n            };\n        },\n        [QUERY_SMALL]: {\n            container: () => ({\n                padding: [[spacing * 4, spacing * 5], '!important']\n            })\n        },\n        [QUERY_EXTRA_SMALL]: {\n            container: () => ({\n                padding: [[spacing * 4, spacing * 3], '!important']\n            })\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
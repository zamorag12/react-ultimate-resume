{"ast":null,"code":"import _classCallCheck from \"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\n\nvar FormattedHTMLMessage = /*#__PURE__*/function (_FormattedMessage) {\n  _inherits(FormattedHTMLMessage, _FormattedMessage);\n\n  var _super = _createSuper(FormattedHTMLMessage);\n\n  function FormattedHTMLMessage() {\n    _classCallCheck(this, FormattedHTMLMessage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FormattedHTMLMessage, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Context.Consumer, null, function (intl) {\n        if (!_this.props.defaultMessage) {\n          invariantIntlContext(intl);\n        }\n\n        var formatHTMLMessage = intl.formatHTMLMessage,\n            textComponent = intl.textComponent;\n        var _this$props = _this.props,\n            id = _this$props.id,\n            description = _this$props.description,\n            defaultMessage = _this$props.defaultMessage,\n            rawValues = _this$props.values,\n            children = _this$props.children;\n        var Component = _this.props.tagName; // This is bc of TS3.3 doesn't recognize `defaultProps`\n\n        if (!Component) {\n          Component = textComponent || 'span';\n        }\n\n        var descriptor = {\n          id: id,\n          description: description,\n          defaultMessage: defaultMessage\n        };\n        var formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n\n        if (typeof children === 'function') {\n          return children(formattedHTMLMessage);\n        } // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by React.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for React to do its virtual DOM diffing.\n\n\n        var html = {\n          __html: formattedHTMLMessage\n        };\n        return React.createElement(Component, {\n          dangerouslySetInnerHTML: html\n        });\n      });\n    }\n  }]);\n\n  return FormattedHTMLMessage;\n}(FormattedMessage);\n\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\nFormattedHTMLMessage.defaultProps = Object.assign(Object.assign({}, FormattedMessage.defaultProps), {\n  tagName: 'span'\n});\nexport default FormattedHTMLMessage;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/node_modules/react-intl/lib/components/html-message.js"],"names":["React","FormattedMessage","Context","invariantIntlContext","FormattedHTMLMessage","createElement","Consumer","intl","props","defaultMessage","formatHTMLMessage","textComponent","id","description","rawValues","values","children","Component","tagName","descriptor","formattedHTMLMessage","html","__html","dangerouslySetInnerHTML","displayName","defaultProps","Object","assign"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,oBAAT,QAAqC,UAArC;;IACMC,oB;;;;;;;;;;;;;WACF,kBAAS;AAAA;;AACL,aAAQJ,KAAK,CAACK,aAAN,CAAoBH,OAAO,CAACI,QAA5B,EAAsC,IAAtC,EAA4C,UAACC,IAAD,EAAU;AAC1D,YAAI,CAAC,KAAI,CAACC,KAAL,CAAWC,cAAhB,EAAgC;AAC5BN,UAAAA,oBAAoB,CAACI,IAAD,CAApB;AACH;;AAHyD,YAIlDG,iBAJkD,GAIbH,IAJa,CAIlDG,iBAJkD;AAAA,YAI/BC,aAJ+B,GAIbJ,IAJa,CAI/BI,aAJ+B;AAAA,0BAKgB,KAAI,CAACH,KALrB;AAAA,YAKlDI,EALkD,eAKlDA,EALkD;AAAA,YAK9CC,WAL8C,eAK9CA,WAL8C;AAAA,YAKjCJ,cALiC,eAKjCA,cALiC;AAAA,YAKTK,SALS,eAKjBC,MALiB;AAAA,YAKEC,QALF,eAKEA,QALF;AAAA,YAM3CC,SAN2C,GAM7B,KAAI,CAACT,KANwB,CAMpDU,OANoD,EAO1D;;AACA,YAAI,CAACD,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAGN,aAAa,IAAI,MAA7B;AACH;;AACD,YAAMQ,UAAU,GAAG;AAAEP,UAAAA,EAAE,EAAFA,EAAF;AAAMC,UAAAA,WAAW,EAAXA,WAAN;AAAmBJ,UAAAA,cAAc,EAAdA;AAAnB,SAAnB;AACA,YAAMW,oBAAoB,GAAGV,iBAAiB,CAACS,UAAD,EAAaL,SAAb,CAA9C;;AACA,YAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoC;AAChC,iBAAOA,QAAQ,CAACI,oBAAD,CAAf;AACH,SAfyD,CAgB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAMC,IAAI,GAAG;AAAEC,UAAAA,MAAM,EAAEF;AAAV,SAAb;AACA,eAAOpB,KAAK,CAACK,aAAN,CAAoBY,SAApB,EAA+B;AAAEM,UAAAA,uBAAuB,EAAEF;AAA3B,SAA/B,CAAP;AACH,OA1BO,CAAR;AA2BH;;;;EA7B8BpB,gB;;AA+BnCG,oBAAoB,CAACoB,WAArB,GAAmC,sBAAnC;AACApB,oBAAoB,CAACqB,YAArB,GAAoCC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1B,gBAAgB,CAACwB,YAAnC,CAAd,EAAgE;AAAEP,EAAAA,OAAO,EAAE;AAAX,CAAhE,CAApC;AACA,eAAed,oBAAf","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nclass FormattedHTMLMessage extends FormattedMessage {\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatHTMLMessage, textComponent } = intl;\n            const { id, description, defaultMessage, values: rawValues, children, } = this.props;\n            let { tagName: Component } = this.props;\n            // This is bc of TS3.3 doesn't recognize `defaultProps`\n            if (!Component) {\n                Component = textComponent || 'span';\n            }\n            const descriptor = { id, description, defaultMessage };\n            const formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n            if (typeof children === 'function') {\n                return children(formattedHTMLMessage);\n            }\n            // Since the message presumably has HTML in it, we need to set\n            // `innerHTML` in order for it to be rendered and not escaped by React.\n            // To be safe, all string prop values were escaped when formatting the\n            // message. It is assumed that the message is not UGC, and came from the\n            // developer making it more like a template.\n            //\n            // Note: There's a perf impact of using this component since there's no\n            // way for React to do its virtual DOM diffing.\n            const html = { __html: formattedHTMLMessage };\n            return React.createElement(Component, { dangerouslySetInnerHTML: html });\n        }));\n    }\n}\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\nFormattedHTMLMessage.defaultProps = Object.assign(Object.assign({}, FormattedMessage.defaultProps), { tagName: 'span' });\nexport default FormattedHTMLMessage;\n"]},"metadata":{},"sourceType":"module"}
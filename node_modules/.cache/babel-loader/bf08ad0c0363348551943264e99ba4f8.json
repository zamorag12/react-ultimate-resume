{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\n\nvar FormattedPlural = function FormattedPlural(props) {\n  var value = props.value,\n      other = props.other,\n      children = props.children,\n      _props$intl = props.intl,\n      formatPlural = _props$intl.formatPlural,\n      Text = _props$intl.textComponent;\n  var pluralCategory = formatPlural(value, props);\n  var formattedPlural = props[pluralCategory] || other;\n\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  } // Work around @types/react where React.FC cannot return string\n\n\n  return formattedPlural;\n};\n\nFormattedPlural.defaultProps = {\n  type: 'cardinal'\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/node_modules/react-intl/lib/components/plural.js"],"names":["React","withIntl","FormattedPlural","props","value","other","children","intl","formatPlural","Text","textComponent","pluralCategory","formattedPlural","createElement","defaultProps","type","displayName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,MACrBC,KADqB,GACoDD,KADpD,CACrBC,KADqB;AAAA,MACdC,KADc,GACoDF,KADpD,CACdE,KADc;AAAA,MACPC,QADO,GACoDH,KADpD,CACPG,QADO;AAAA,oBACoDH,KADpD,CACGI,IADH;AAAA,MACWC,YADX,eACWA,YADX;AAAA,MACwCC,IADxC,eACyBC,aADzB;AAE7B,MAAMC,cAAc,GAAGH,YAAY,CAACJ,KAAD,EAAQD,KAAR,CAAnC;AACA,MAAMS,eAAe,GAAGT,KAAK,CAACQ,cAAD,CAAL,IAAyBN,KAAjD;;AACA,MAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAChC,WAAOA,QAAQ,CAACM,eAAD,CAAf;AACH;;AACD,MAAIH,IAAJ,EAAU;AACN,WAAOT,KAAK,CAACa,aAAN,CAAoBJ,IAApB,EAA0B,IAA1B,EAAgCG,eAAhC,CAAP;AACH,GAT4B,CAU7B;;;AACA,SAAOA,eAAP;AACH,CAZD;;AAaAV,eAAe,CAACY,YAAhB,GAA+B;AAC3BC,EAAAA,IAAI,EAAE;AADqB,CAA/B;AAGAb,eAAe,CAACc,WAAhB,GAA8B,iBAA9B;AACA,eAAef,QAAQ,CAACC,eAAD,CAAvB","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    const pluralCategory = formatPlural(value, props);\n    const formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n"]},"metadata":{},"sourceType":"module"}
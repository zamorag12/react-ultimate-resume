{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useRef,useState}from'react';import cn from'classnames';import{createUseStyles}from'react-jss';import{PopperCard,Slider}from'@welovedevs/ui';import{styles}from'./slider_with_popper_styles';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);export var SliderWithPopper=function SliderWithPopper(_ref){var color=_ref.color,name=_ref.name,value=_ref.value,onChange=_ref.onChange,min=_ref.min,max=_ref.max,step=_ref.step,_ref$debounce=_ref.debounce,debounce=_ref$debounce===void 0?500:_ref$debounce,_ref$classes=_ref.classes,receivedClasses=_ref$classes===void 0?{}:_ref$classes,popperCardProps=_ref.popperCardProps;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFocused=_useState2[0],setIsFocused=_useState2[1];var _useState3=useState(value),_useState4=_slicedToArray(_useState3,2),localValue=_useState4[0],setLocalValue=_useState4[1];var handleFocus=useCallback(function(){return setIsFocused(true);},[]);var handleBlur=useCallback(function(){return setIsFocused(false);},[]);var timer=useRef();var thumbReference=useRef();useEffect(function(){setLocalValue(value);},[value]);var handleChange=useCallback(function(e){e.persist();var newValue=e.target.value;if(timer.current){clearTimeout(timer.current);}setLocalValue(newValue);if(debounce){timer.current=setTimeout(function(){return onChange(e);},debounce);}else{onChange(e);}},[onChange]);return/*#__PURE__*/_jsx(Slider,{classes:{container:cn(classes.container,receivedClasses.container)},color:color,name:name,value:localValue,onChange:handleChange,min:min,max:max,step:step,onMouseDown:handleFocus,onMouseUp:handleBlur,thumbReference:thumbReference,thumbChildren:/*#__PURE__*/_jsx(PopperCard,_objectSpread(_objectSpread({open:isFocused,anchorElement:thumbReference.current,popperProps:{disablePortal:true,modifiers:{preventOverflow:{boundariesElement:'viewport'},hide:{enabled:false}}}},popperCardProps),{},{children:localValue}))});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/slider_with_popper/slider_with_popper.jsx"],"names":["React","useCallback","useEffect","useRef","useState","cn","createUseStyles","PopperCard","Slider","styles","useStyles","SliderWithPopper","color","name","value","onChange","min","max","step","debounce","classes","receivedClasses","popperCardProps","isFocused","setIsFocused","localValue","setLocalValue","handleFocus","handleBlur","timer","thumbReference","handleChange","e","persist","newValue","target","current","clearTimeout","setTimeout","container","disablePortal","modifiers","preventOverflow","boundariesElement","hide","enabled"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,MAAxC,CAAgDC,QAAhD,KAAgE,OAAhE,CAEA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,eAAT,KAAgC,WAAhC,CAEA,OAASC,UAAT,CAAqBC,MAArB,KAAmC,gBAAnC,CAEA,OAASC,MAAT,KAAuB,6BAAvB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGJ,eAAe,CAACG,MAAD,CAAjC,CAEA,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAW1B,IAVFC,CAAAA,KAUE,MAVFA,KAUE,CATFC,IASE,MATFA,IASE,CARFC,KAQE,MARFA,KAQE,CAPFC,QAOE,MAPFA,QAOE,CANFC,GAME,MANFA,GAME,CALFC,GAKE,MALFA,GAKE,CAJFC,IAIE,MAJFA,IAIE,oBAHFC,QAGE,CAHFA,QAGE,wBAHS,GAGT,iCAFFC,OAEE,CAFOC,eAEP,uBAFyB,EAEzB,cADFC,eACE,MADFA,eACE,CACF,GAAMF,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CADE,cAGgCN,QAAQ,CAAC,KAAD,CAHxC,wCAGKmB,SAHL,eAGgBC,YAHhB,8BAIkCpB,QAAQ,CAACU,KAAD,CAJ1C,yCAIKW,UAJL,eAIiBC,aAJjB,eAMF,GAAMC,CAAAA,WAAW,CAAG1B,WAAW,CAAC,iBAAMuB,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAD,CAA2B,EAA3B,CAA/B,CACA,GAAMI,CAAAA,UAAU,CAAG3B,WAAW,CAAC,iBAAMuB,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAAD,CAA4B,EAA5B,CAA9B,CAEA,GAAMK,CAAAA,KAAK,CAAG1B,MAAM,EAApB,CACA,GAAM2B,CAAAA,cAAc,CAAG3B,MAAM,EAA7B,CAEAD,SAAS,CAAC,UAAM,CACZwB,aAAa,CAACZ,KAAD,CAAb,CACH,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMiB,CAAAA,YAAY,CAAG9B,WAAW,CAC5B,SAAC+B,CAAD,CAAO,CACHA,CAAC,CAACC,OAAF,GACA,GAAMC,CAAAA,QAAQ,CAAGF,CAAC,CAACG,MAAF,CAASrB,KAA1B,CACA,GAAIe,KAAK,CAACO,OAAV,CAAmB,CACfC,YAAY,CAACR,KAAK,CAACO,OAAP,CAAZ,CACH,CACDV,aAAa,CAACQ,QAAD,CAAb,CACA,GAAIf,QAAJ,CAAc,CACVU,KAAK,CAACO,OAAN,CAAgBE,UAAU,CAAC,iBAAMvB,CAAAA,QAAQ,CAACiB,CAAD,CAAd,EAAD,CAAoBb,QAApB,CAA1B,CACH,CAFD,IAEO,CACHJ,QAAQ,CAACiB,CAAD,CAAR,CACH,CACJ,CAb2B,CAc5B,CAACjB,QAAD,CAd4B,CAAhC,CAiBA,mBACI,KAAC,MAAD,EACI,OAAO,CAAE,CACLwB,SAAS,CAAElC,EAAE,CAACe,OAAO,CAACmB,SAAT,CAAoBlB,eAAe,CAACkB,SAApC,CADR,CADb,CAII,KAAK,CAAE3B,KAJX,CAKI,IAAI,CAAEC,IALV,CAMI,KAAK,CAAEY,UANX,CAOI,QAAQ,CAAEM,YAPd,CAQI,GAAG,CAAEf,GART,CASI,GAAG,CAAEC,GATT,CAUI,IAAI,CAAEC,IAVV,CAWI,WAAW,CAAES,WAXjB,CAYI,SAAS,CAAEC,UAZf,CAaI,cAAc,CAAEE,cAbpB,CAcI,aAAa,cACT,KAAC,UAAD,8BACI,IAAI,CAAEP,SADV,CAEI,aAAa,CAAEO,cAAc,CAACM,OAFlC,CAGI,WAAW,CAAE,CACTI,aAAa,CAAE,IADN,CAETC,SAAS,CAAE,CACPC,eAAe,CAAE,CACbC,iBAAiB,CAAE,UADN,CADV,CAIPC,IAAI,CAAE,CACFC,OAAO,CAAE,KADP,CAJC,CAFF,CAHjB,EAcQvB,eAdR,eAgBKG,UAhBL,GAfR,EADJ,CAqCH,CAjFM","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nimport { PopperCard, Slider } from '@welovedevs/ui';\n\nimport { styles } from './slider_with_popper_styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport const SliderWithPopper = ({\n    color,\n    name,\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    debounce = 500,\n    classes: receivedClasses = {},\n    popperCardProps\n}) => {\n    const classes = useStyles();\n\n    const [isFocused, setIsFocused] = useState(false);\n    const [localValue, setLocalValue] = useState(value);\n\n    const handleFocus = useCallback(() => setIsFocused(true), []);\n    const handleBlur = useCallback(() => setIsFocused(false), []);\n\n    const timer = useRef();\n    const thumbReference = useRef();\n\n    useEffect(() => {\n        setLocalValue(value);\n    }, [value]);\n\n    const handleChange = useCallback(\n        (e) => {\n            e.persist();\n            const newValue = e.target.value;\n            if (timer.current) {\n                clearTimeout(timer.current);\n            }\n            setLocalValue(newValue);\n            if (debounce) {\n                timer.current = setTimeout(() => onChange(e), debounce);\n            } else {\n                onChange(e);\n            }\n        },\n        [onChange]\n    );\n\n    return (\n        <Slider\n            classes={{\n                container: cn(classes.container, receivedClasses.container)\n            }}\n            color={color}\n            name={name}\n            value={localValue}\n            onChange={handleChange}\n            min={min}\n            max={max}\n            step={step}\n            onMouseDown={handleFocus}\n            onMouseUp={handleBlur}\n            thumbReference={thumbReference}\n            thumbChildren={\n                <PopperCard\n                    open={isFocused}\n                    anchorElement={thumbReference.current}\n                    popperProps={{\n                        disablePortal: true,\n                        modifiers: {\n                            preventOverflow: {\n                                boundariesElement: 'viewport'\n                            },\n                            hide: {\n                                enabled: false\n                            }\n                        }\n                    }}\n                    {...popperCardProps}\n                >\n                    {localValue}\n                </PopperCard>\n            }\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
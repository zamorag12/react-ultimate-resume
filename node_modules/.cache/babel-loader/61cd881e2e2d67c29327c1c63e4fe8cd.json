{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useMemo}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage,useIntl}from'react-intl';import{ProfileCardAnimatedBack}from'../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';import{ProfileCardSectionTitle}from'../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';import{ProfileCardSectionText}from'../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';import{ProfileCardSection}from'../../../../commons/profile_card/profile_card_section/profile_card_section';import{ContractType}from'../../../../commons/fields/contract_types/contract_types';import{existsAndNotEmpty}from'../../../utils/exists_and_not_empty';import{translations}from'../../../../../utils/enums/job_serachstate/job_search_state_translations';import{styles}from'./basics_back_styles';import{NoDataButton}from'../../../../commons/no_data_button/no_data_button';import{ExperienceYears}from'./fields/professional_experience';import{CodeExperienceYears}from'./fields/code_professional_experience';import{OtherExperienceYears}from'./fields/other_professional_experience';import{CodingYears}from'./fields/coding_years';import{StudiesLevel}from'./fields/studies_level';import{useMode}from'../../../../hooks/use_mode';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var BasicsBackComponent=function BasicsBackComponent(_ref){var data=_ref.data,handleAddButtonClick=_ref.handleAddButtonClick;var _useMode=useMode(),_useMode2=_slicedToArray(_useMode,1),mode=_useMode2[0];var classes=useStyles();var currentCityName=data.currentCity.name,experienceYears=data.experienceYears,codeExperienceYears=data.codeExperienceYears,otherExperienceYears=data.otherExperienceYears,contractTypes=data.contractTypes,studiesLevel=data.studiesLevel,codingYears=data.codingYears,codingReason=data.codingReason,searchState=data.searchState,visaSponsorship=data.visaSponsorship,personalDescription=data.personalDescription;var descriptionContent=useMemo(function(){if(!personalDescription&&mode==='edit'){return/*#__PURE__*/_jsx(NoDataButton,{handleAddButtonClick:handleAddButtonClick,classes:{container:classes.addButton},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.noDescription.buttonLabel\",defaultMessage:\"Ajouter une description\"})});}return/*#__PURE__*/_jsx(\"span\",{children:personalDescription});},[personalDescription,mode,handleAddButtonClick,classes]);var sections=useMemo(function(){return{personalDescription:{title:null,hide:false,value:descriptionContent},visaSponsorship:{hide:!existsAndNotEmpty(visaSponsorship),value:/*#__PURE__*/_jsx(\"span\",{className:classes.bold,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.VisaSponsorship\",defaultMessage:\"I require a visa sponsorship\"})})},work:{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.Work.Title\",defaultMessage:\"Work\"}),hide:!experienceYears&&!existsAndNotEmpty(contractTypes)&&!existsAndNotEmpty(searchState),value:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ExperienceYears,{experienceYears:experienceYears,codeExperienceYears:codeExperienceYears}),/*#__PURE__*/_jsx(CodeExperienceYears,{experienceYears:experienceYears,codeExperienceYears:codeExperienceYears}),/*#__PURE__*/_jsx(OtherExperienceYears,{otherExperienceYears:otherExperienceYears,codeExperienceYears:codeExperienceYears}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ContractType,{contractTypes:contractTypes}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(JobSearchState,{searchState:searchState})]})},codingYears:{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.CodingYears.title\",defaultMessage:\"Experience\"}),hide:Number.isNaN(Number(codingYears)),value:/*#__PURE__*/_jsx(CodingYears,{codingYears:codingYears})},studies:{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.StudiesLevel.Title\",defaultMessage:\"Training\"}),hide:!studiesLevel,value:/*#__PURE__*/_jsx(StudiesLevel,{studiesLevel:studiesLevel})},codingReason:{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.CodingReason.Title\",defaultMessage:\"Why i code\"}),hide:!codingReason,value:/*#__PURE__*/_jsx(\"span\",{children:codingReason})}};},[currentCityName,experienceYears,contractTypes,studiesLevel,codingYears,codingReason,visaSponsorship,personalDescription,descriptionContent,searchState]);return/*#__PURE__*/_jsx(ProfileCardAnimatedBack,{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.Title\",defaultMessage:\"Who?\"}),children:Object.entries(sections).filter(function(_ref2){var _ref3=_slicedToArray(_ref2,2),hide=_ref3[1].hide;return!hide;}).map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),id=_ref5[0],_ref5$=_ref5[1],title=_ref5$.title,value=_ref5$.value;return/*#__PURE__*/_jsxs(ProfileCardSection,{children:[title&&/*#__PURE__*/_jsx(ProfileCardSectionTitle,{children:title}),/*#__PURE__*/_jsx(ProfileCardSectionText,{children:value})]},id);})});};var JobSearchState=function JobSearchState(_ref6){var searchState=_ref6.searchState;var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;if(!searchState){return null;}return/*#__PURE__*/_jsx(\"span\",{children:formatMessage(translations[searchState]||translations.unknown)});};export var BasicsBack=/*#__PURE__*/memo(BasicsBackComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/basics/basics_back/basics_back.jsx"],"names":["React","memo","useMemo","createUseStyles","FormattedMessage","useIntl","ProfileCardAnimatedBack","ProfileCardSectionTitle","ProfileCardSectionText","ProfileCardSection","ContractType","existsAndNotEmpty","translations","styles","NoDataButton","ExperienceYears","CodeExperienceYears","OtherExperienceYears","CodingYears","StudiesLevel","useMode","useStyles","BasicsBackComponent","data","handleAddButtonClick","mode","classes","currentCityName","currentCity","name","experienceYears","codeExperienceYears","otherExperienceYears","contractTypes","studiesLevel","codingYears","codingReason","searchState","visaSponsorship","personalDescription","descriptionContent","container","addButton","sections","title","hide","value","bold","work","Number","isNaN","studies","Object","entries","filter","map","id","JobSearchState","formatMessage","unknown","BasicsBack"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ContractType } from '../../../../commons/fields/contract_types/contract_types';\n\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\n\nimport { translations } from '../../../../../utils/enums/job_serachstate/job_search_state_translations';\nimport { styles } from './basics_back_styles';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { ExperienceYears } from './fields/professional_experience';\nimport { CodeExperienceYears } from './fields/code_professional_experience';\nimport { OtherExperienceYears } from './fields/other_professional_experience';\nimport { CodingYears } from './fields/coding_years';\nimport { StudiesLevel } from './fields/studies_level';\nimport { useMode } from '../../../../hooks/use_mode';\n\nconst useStyles = createUseStyles(styles);\n\nconst BasicsBackComponent = ({ data, handleAddButtonClick }) => {\n    const [mode] = useMode();\n    const classes = useStyles();\n\n    const {\n        currentCity: { name: currentCityName },\n        experienceYears,\n        codeExperienceYears,\n        otherExperienceYears,\n        contractTypes,\n        studiesLevel,\n        codingYears,\n        codingReason,\n        searchState,\n        visaSponsorship,\n        personalDescription\n    } = data;\n\n    const descriptionContent = useMemo(() => {\n        if (!personalDescription && mode === 'edit') {\n            return (\n                <NoDataButton\n                    handleAddButtonClick={handleAddButtonClick}\n                    classes={{\n                        container: classes.addButton\n                    }}\n                >\n                    <FormattedMessage id=\"Basics.noDescription.buttonLabel\" defaultMessage=\"Ajouter une description\" />\n                </NoDataButton>\n            );\n        }\n        return <span>{personalDescription}</span>;\n    }, [personalDescription, mode, handleAddButtonClick, classes]);\n\n    const sections = useMemo(\n        () => ({\n            personalDescription: {\n                title: null,\n                hide: false,\n                value: descriptionContent\n            },\n            visaSponsorship: {\n                hide: !existsAndNotEmpty(visaSponsorship),\n                value: (\n                    <span className={classes.bold}>\n                        <FormattedMessage\n                            id=\"Basics.Back.VisaSponsorship\"\n                            defaultMessage=\"I require a visa sponsorship\"\n                        />\n                    </span>\n                )\n            },\n            work: {\n                title: <FormattedMessage id=\"Basics.Back.Work.Title\" defaultMessage=\"Work\" />,\n                hide: !experienceYears && !existsAndNotEmpty(contractTypes) && !existsAndNotEmpty(searchState),\n                value: (\n                    <>\n                        <ExperienceYears experienceYears={experienceYears} codeExperienceYears={codeExperienceYears} />\n                        <CodeExperienceYears\n                            experienceYears={experienceYears}\n                            codeExperienceYears={codeExperienceYears}\n                        />\n                        <OtherExperienceYears\n                            otherExperienceYears={otherExperienceYears}\n                            codeExperienceYears={codeExperienceYears}\n                        />\n                        <br />\n                        <ContractType contractTypes={contractTypes} />\n                        <br />\n                        <JobSearchState searchState={searchState} />\n                    </>\n                )\n            },\n            codingYears: {\n                title: <FormattedMessage id=\"Basics.Back.CodingYears.title\" defaultMessage=\"Experience\" />,\n                hide: Number.isNaN(Number(codingYears)),\n                value: <CodingYears codingYears={codingYears} />\n            },\n            studies: {\n                title: <FormattedMessage id=\"Basics.Back.StudiesLevel.Title\" defaultMessage=\"Training\" />,\n                hide: !studiesLevel,\n                value: <StudiesLevel studiesLevel={studiesLevel} />\n            },\n            codingReason: {\n                title: <FormattedMessage id=\"Basics.Back.CodingReason.Title\" defaultMessage=\"Why i code\" />,\n                hide: !codingReason,\n                value: <span>{codingReason}</span>\n            }\n        }),\n        [\n            currentCityName,\n            experienceYears,\n            contractTypes,\n            studiesLevel,\n            codingYears,\n            codingReason,\n            visaSponsorship,\n            personalDescription,\n            descriptionContent,\n            searchState\n        ]\n    );\n\n    return (\n        <ProfileCardAnimatedBack title={<FormattedMessage id=\"Basics.Back.Title\" defaultMessage=\"Who?\" />}>\n            {Object.entries(sections)\n                .filter(([, { hide }]) => !hide)\n                .map(([id, { title, value }]) => (\n                    <ProfileCardSection key={id}>\n                        {title && <ProfileCardSectionTitle>{title}</ProfileCardSectionTitle>}\n                        <ProfileCardSectionText>{value}</ProfileCardSectionText>\n                    </ProfileCardSection>\n                ))}\n        </ProfileCardAnimatedBack>\n    );\n};\n\nconst JobSearchState = ({ searchState }) => {\n    const { formatMessage } = useIntl();\n    if (!searchState) {\n        return null;\n    }\n    return <span>{formatMessage(translations[searchState] || translations.unknown)}</span>;\n};\n\nexport const BasicsBack = memo(BasicsBackComponent);\n"]},"metadata":{},"sourceType":"module"}
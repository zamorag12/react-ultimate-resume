{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{createScreenWidthMediaQuery,getColorsFromCardVariant,getHexFromPaletteColor}from'../../../../utils/styles/styles_utils';export var styles=function styles(theme){var screenSizes=theme.screenSizes;var QUERY_SMALL=createScreenWidthMediaQuery('max-width',screenSizes.small);return _defineProperty({container:function container(_ref){var variant=_ref.variant;return{height:'45%',minHeight:'45%',width:'auto',color:getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).color),'& .to-fill':{fill:'currentColor'},'& .to-stroke':{stroke:'currentColor'}};}},QUERY_SMALL,{container:function container(){return{height:'30%',minHeight:'30%',marginBottom:[0,'!important']};}});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/profile_card/profile_card_front_vector/profile_card_front_vector_styles.js"],"names":["createScreenWidthMediaQuery","getColorsFromCardVariant","getHexFromPaletteColor","styles","theme","screenSizes","QUERY_SMALL","small","container","variant","height","minHeight","width","color","fill","stroke","marginBottom"],"mappings":"2KAAA,OACIA,2BADJ,CAEIC,wBAFJ,CAGIC,sBAHJ,KAIO,uCAJP,CAMA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,IACrBC,CAAAA,WADqB,CACLD,KADK,CACrBC,WADqB,CAG7B,GAAMC,CAAAA,WAAW,CAAGN,2BAA2B,CAAC,WAAD,CAAcK,WAAW,CAACE,KAA1B,CAA/C,CAEA,wBACIC,SAAS,CAAE,4BAAGC,CAAAA,OAAH,MAAGA,OAAH,OAAkB,CACzBC,MAAM,CAAE,KADiB,CAEzBC,SAAS,CAAE,KAFc,CAGzBC,KAAK,CAAE,MAHkB,CAIzBC,KAAK,CAAEX,sBAAsB,CAACE,KAAD,CAAQH,wBAAwB,CAACG,KAAD,CAAQK,OAAR,CAAxB,CAAyCI,KAAjD,CAJJ,CAKzB,aAAc,CACVC,IAAI,CAAE,cADI,CALW,CAQzB,eAAgB,CACZC,MAAM,CAAE,cADI,CARS,CAAlB,EADf,EAaKT,WAbL,CAamB,CACXE,SAAS,CAAE,2BAAO,CACdE,MAAM,CAAE,KADM,CAEdC,SAAS,CAAE,KAFG,CAGdK,YAAY,CAAE,CAAC,CAAD,CAAI,YAAJ,CAHA,CAAP,EADA,CAbnB,EAqBH,CA1BM","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    getColorsFromCardVariant,\n    getHexFromPaletteColor\n} from '../../../../utils/styles/styles_utils';\n\nexport const styles = (theme) => {\n    const { screenSizes } = theme;\n\n    const QUERY_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.small);\n\n    return {\n        container: ({ variant }) => ({\n            height: '45%',\n            minHeight: '45%',\n            width: 'auto',\n            color: getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).color),\n            '& .to-fill': {\n                fill: 'currentColor'\n            },\n            '& .to-stroke': {\n                stroke: 'currentColor'\n            }\n        }),\n        [QUERY_SMALL]: {\n            container: () => ({\n                height: '30%',\n                minHeight: '30%',\n                marginBottom: [0, '!important']\n            })\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
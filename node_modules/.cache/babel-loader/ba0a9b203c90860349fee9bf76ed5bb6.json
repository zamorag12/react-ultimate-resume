{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint no-unused-vars: 0 */import React,{useCallback,useContext,useEffect,useState}from'react';import{createUseStyles,useTheme}from'react-jss';import{FormattedMessage}from'react-intl';import set from'lodash/set';import{Dialog,DialogContent,DialogActions,useMediaQuery}from'@material-ui/core';import{Button,Typography}from'@welovedevs/ui';import{DialogTitle}from'../../../../../commons/dialog/dialog_title/dialog_title';import{DeveloperProfileContext}from'../../../../../../utils/context/contexts';import{ContactInfosDialogTextFields}from'./contact_infos_dialog_textfields/contact_infos_dialog_textfields';import{styles}from'./contact_infos_dialog_styles';import{CONTACT_INFOS_DATA}from'../contact_infos_data';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);export var ContactInfosDialog=function ContactInfosDialog(_ref){var open=_ref.open,onClose=_ref.onClose,contactInformations=_ref.contactInformations;var _useContext=useContext(DeveloperProfileContext),onEdit=_useContext.onEdit;var _useState=useState(contactInformations),_useState2=_slicedToArray(_useState,2),inputs=_useState2[0],setInputs=_useState2[1];var theme=useTheme();var fullScreen=useMediaQuery(\"(max-width: \".concat(theme===null||theme===void 0?void 0:theme.screenSizes.small,\"px)\"),{defaultMatches:true});useEffect(function(){return setInputs(contactInformations);},[contactInformations]);var handleSave=useCallback(function(){if(!inputs){return;}var edits=Object.entries(inputs).reduce(function(acc,_ref2){var _CONTACT_INFOS_DATA$c;var _ref3=_slicedToArray(_ref2,2),contactInformationId=_ref3[0],value=_ref3[1];if(value===contactInformations[contactInformationId]){return acc;}set(acc,CONTACT_INFOS_DATA===null||CONTACT_INFOS_DATA===void 0?void 0:(_CONTACT_INFOS_DATA$c=CONTACT_INFOS_DATA[contactInformationId])===null||_CONTACT_INFOS_DATA$c===void 0?void 0:_CONTACT_INFOS_DATA$c.path,value);return acc;},{});onEdit(edits);onClose();},[contactInformations,inputs]);var classes=useStyles();return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,fullScreen:fullScreen,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Banner.UserInformations.ContactInfos.Dialog.Title\",defaultMessage:\"Edit your contact informations?\"})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{color:\"dark\",classes:{container:classes.typography},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Banner.UserInformations.ContactInfos.Dialog.Content\",defaultMessage:\"You can add contact informations to your profile. Please be aware that those informations might be scrapped and used for unknown purposes. <bolder>Add them at your own risks!</bolder>\",values:{bolder:function bolder(chunks){return/*#__PURE__*/_jsx(\"span\",{className:classes.bolder,children:chunks});}}})}),/*#__PURE__*/_jsx(ContactInfosDialogTextFields,{inputs:inputs,setInputs:setInputs})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:onClose,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.close\",defaultMessage:\"Close\"})}),/*#__PURE__*/_jsx(Button,{color:\"primary\",size:\"small\",onClick:handleSave,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.save\",defaultMessage:\"Save\"})})]})]});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/banner/user_actions_row/user_informations/contact_infos/contact_infos_dialog/contact_infos_dialog.jsx"],"names":["React","useCallback","useContext","useEffect","useState","createUseStyles","useTheme","FormattedMessage","set","Dialog","DialogContent","DialogActions","useMediaQuery","Button","Typography","DialogTitle","DeveloperProfileContext","ContactInfosDialogTextFields","styles","CONTACT_INFOS_DATA","useStyles","ContactInfosDialog","open","onClose","contactInformations","onEdit","inputs","setInputs","theme","fullScreen","screenSizes","small","defaultMatches","handleSave","edits","Object","entries","reduce","acc","contactInformationId","value","path","classes","container","typography","bolder","chunks"],"mappings":"yKAAA,8BACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,SAAzC,CAAoDC,QAApD,KAAoE,OAApE,CAEA,OAASC,eAAT,CAA0BC,QAA1B,KAA0C,WAA1C,CACA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CAEA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,aAAhC,CAA+CC,aAA/C,KAAoE,mBAApE,CAEA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,gBAAnC,CACA,OAASC,WAAT,KAA4B,yDAA5B,CACA,OAASC,uBAAT,KAAwC,0CAAxC,CAEA,OAASC,4BAAT,KAA6C,mEAA7C,CACA,OAASC,MAAT,KAAuB,+BAAvB,CACA,OAASC,kBAAT,KAAmC,uBAAnC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGf,eAAe,CAACa,MAAD,CAAjC,CAEA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAA4C,IAAzCC,CAAAA,IAAyC,MAAzCA,IAAyC,CAAnCC,OAAmC,MAAnCA,OAAmC,CAA1BC,mBAA0B,MAA1BA,mBAA0B,iBACvDtB,UAAU,CAACc,uBAAD,CAD6C,CAClES,MADkE,aAClEA,MADkE,eAE9CrB,QAAQ,CAACoB,mBAAD,CAFsC,wCAEnEE,MAFmE,eAE3DC,SAF2D,eAG1E,GAAMC,CAAAA,KAAK,CAAGtB,QAAQ,EAAtB,CACA,GAAMuB,CAAAA,UAAU,CAAGjB,aAAa,uBAAgBgB,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEE,WAAP,CAAmBC,KAAnC,QAA+C,CAAEC,cAAc,CAAE,IAAlB,CAA/C,CAAhC,CAEA7B,SAAS,CAAC,iBAAMwB,CAAAA,SAAS,CAACH,mBAAD,CAAf,EAAD,CAAuC,CAACA,mBAAD,CAAvC,CAAT,CAEA,GAAMS,CAAAA,UAAU,CAAGhC,WAAW,CAAC,UAAM,CACjC,GAAI,CAACyB,MAAL,CAAa,CACT,OACH,CACD,GAAMQ,CAAAA,KAAK,CAAGC,MAAM,CAACC,OAAP,CAAeV,MAAf,EAAuBW,MAAvB,CAA8B,SAACC,GAAD,OAAwC,6DAAjCC,oBAAiC,UAAXC,KAAW,UAChF,GAAIA,KAAK,GAAKhB,mBAAmB,CAACe,oBAAD,CAAjC,CAAyD,CACrD,MAAOD,CAAAA,GAAP,CACH,CACD9B,GAAG,CAAC8B,GAAD,CAAMnB,kBAAN,SAAMA,kBAAN,wCAAMA,kBAAkB,CAAGoB,oBAAH,CAAxB,gDAAM,sBAA4CE,IAAlD,CAAwDD,KAAxD,CAAH,CACA,MAAOF,CAAAA,GAAP,CACH,CANa,CAMX,EANW,CAAd,CAQAb,MAAM,CAACS,KAAD,CAAN,CACAX,OAAO,GACV,CAd6B,CAc3B,CAACC,mBAAD,CAAsBE,MAAtB,CAd2B,CAA9B,CAgBA,GAAMgB,CAAAA,OAAO,CAAGtB,SAAS,EAAzB,CACA,mBACI,MAAC,MAAD,EAAQ,IAAI,CAAEE,IAAd,CAAoB,OAAO,CAAEC,OAA7B,CAAsC,UAAU,CAAEM,UAAlD,wBACI,KAAC,WAAD,wBACI,KAAC,gBAAD,EACI,EAAE,CAAC,mDADP,CAEI,cAAc,CAAC,iCAFnB,EADJ,EADJ,cAOI,MAAC,aAAD,yBACI,KAAC,UAAD,EACI,KAAK,CAAC,MADV,CAEI,OAAO,CAAE,CACLc,SAAS,CAAED,OAAO,CAACE,UADd,CAFb,uBAMI,KAAC,gBAAD,EACI,EAAE,CAAC,qDADP,CAEI,cAAc,CAAC,yLAFnB,CAGI,MAAM,CAAE,CACJC,MAAM,CAAE,gBAACC,MAAD,qBAAY,aAAM,SAAS,CAAEJ,OAAO,CAACG,MAAzB,UAAkCC,MAAlC,EAAZ,EADJ,CAHZ,EANJ,EADJ,cAeI,KAAC,4BAAD,EAA8B,MAAM,CAAEpB,MAAtC,CAA8C,SAAS,CAAEC,SAAzD,EAfJ,GAPJ,cAwBI,MAAC,aAAD,yBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,OAAO,CAAEJ,OAA9B,uBACI,KAAC,gBAAD,EAAkB,EAAE,CAAC,iBAArB,CAAuC,cAAc,CAAC,OAAtD,EADJ,EADJ,cAII,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,IAAI,CAAC,OAA7B,CAAqC,OAAO,CAAEU,UAA9C,uBACI,KAAC,gBAAD,EAAkB,EAAE,CAAC,gBAArB,CAAsC,cAAc,CAAC,MAArD,EADJ,EAJJ,GAxBJ,GADJ,CAmCH,CA5DM","sourcesContent":["/* eslint no-unused-vars: 0 */\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\n\nimport set from 'lodash/set';\n\nimport { Dialog, DialogContent, DialogActions, useMediaQuery } from '@material-ui/core';\n\nimport { Button, Typography } from '@welovedevs/ui';\nimport { DialogTitle } from '../../../../../commons/dialog/dialog_title/dialog_title';\nimport { DeveloperProfileContext } from '../../../../../../utils/context/contexts';\n\nimport { ContactInfosDialogTextFields } from './contact_infos_dialog_textfields/contact_infos_dialog_textfields';\nimport { styles } from './contact_infos_dialog_styles';\nimport { CONTACT_INFOS_DATA } from '../contact_infos_data';\n\nconst useStyles = createUseStyles(styles);\n\nexport const ContactInfosDialog = ({ open, onClose, contactInformations }) => {\n    const { onEdit } = useContext(DeveloperProfileContext);\n    const [inputs, setInputs] = useState(contactInformations);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(`(max-width: ${theme?.screenSizes.small}px)`, { defaultMatches: true });\n\n    useEffect(() => setInputs(contactInformations), [contactInformations]);\n\n    const handleSave = useCallback(() => {\n        if (!inputs) {\n            return;\n        }\n        const edits = Object.entries(inputs).reduce((acc, [contactInformationId, value]) => {\n            if (value === contactInformations[contactInformationId]) {\n                return acc;\n            }\n            set(acc, CONTACT_INFOS_DATA?.[contactInformationId]?.path, value);\n            return acc;\n        }, {});\n\n        onEdit(edits);\n        onClose();\n    }, [contactInformations, inputs]);\n\n    const classes = useStyles();\n    return (\n        <Dialog open={open} onClose={onClose} fullScreen={fullScreen}>\n            <DialogTitle>\n                <FormattedMessage\n                    id=\"Banner.UserInformations.ContactInfos.Dialog.Title\"\n                    defaultMessage=\"Edit your contact informations?\"\n                />\n            </DialogTitle>\n            <DialogContent>\n                <Typography\n                    color=\"dark\"\n                    classes={{\n                        container: classes.typography\n                    }}\n                >\n                    <FormattedMessage\n                        id=\"Banner.UserInformations.ContactInfos.Dialog.Content\"\n                        defaultMessage=\"You can add contact informations to your profile. Please be aware that those informations might be scrapped and used for unknown purposes. <bolder>Add them at your own risks!</bolder>\"\n                        values={{\n                            bolder: (chunks) => <span className={classes.bolder}>{chunks}</span>\n                        }}\n                    />\n                </Typography>\n                <ContactInfosDialogTextFields inputs={inputs} setInputs={setInputs} />\n            </DialogContent>\n            <DialogActions>\n                <Button size=\"small\" onClick={onClose}>\n                    <FormattedMessage id=\"Main.lang.close\" defaultMessage=\"Close\" />\n                </Button>\n                <Button color=\"primary\" size=\"small\" onClick={handleSave}>\n                    <FormattedMessage id=\"Main.lang.save\" defaultMessage=\"Save\" />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
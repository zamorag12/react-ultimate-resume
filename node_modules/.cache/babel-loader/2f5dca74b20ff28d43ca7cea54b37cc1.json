{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useRef,useState}from'react';import cn from'classnames';import{createUseStyles}from'react-jss';import InfiniteScroll from'react-infinite-scroller';import{motion}from'framer-motion';import{Typography}from'@welovedevs/ui';import{PaletteVisual}from'../palette_visual/palette_visual';import{LoadingSpinner}from'../../../../commons/loading_spinner/loading_spinner';import{buildShadedPalette}from'./utils/build_shaded_palette';import{palettes}from'./utils/palettes';import{PALETTES_LIST_TRANSITIONS_PROPS,PALETTES_ITEM_TRANSITIONS_PROPS}from'./palettes_list_transition_props';import{styles}from'./palettes_list_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var PalettesListComponent=function PalettesListComponent(_ref){var currentPalette=_ref.value,onChange=_ref.onChange,_ref$classes=_ref.classes,receivedClasses=_ref$classes===void 0?{}:_ref$classes;var classes=useStyles();var containerReference=useRef();var _useState=useState(10),_useState2=_slicedToArray(_useState,2),itemsToShow=_useState2[0],setItemsToShow=_useState2[1];var displayedPalettes=useMemo(function(){return palettes.slice(0,itemsToShow);},[itemsToShow]);var onSelectChanged=useCallback(function(value){return function(){var _value=_slicedToArray(value,3),primary=_value[0],secondary=_value[1],tertiary=_value[2];return onChange({primary:buildShadedPalette(primary),secondary:buildShadedPalette(secondary),tertiary:buildShadedPalette(tertiary)});};},[]);var setNextDisplayedPalettes=useCallback(function(){return setItemsToShow(itemsToShow+10);},[itemsToShow,setItemsToShow]);return/*#__PURE__*/_jsxs(\"div\",{ref:containerReference,id:\"scrollable_\".concat(classes.container),className:cn(classes.container,receivedClasses.container),children:[currentPalette&&/*#__PURE__*/_jsxs(\"div\",{className:classes.selectedPaletteContainer,children:[/*#__PURE__*/_jsx(PaletteVisual,{palette:currentPalette}),/*#__PURE__*/_jsx(\"div\",{className:classes.divider})]}),/*#__PURE__*/_jsx(InfiniteScroll,{hasMore:itemsToShow<palettes.length,loader:/*#__PURE__*/_jsx(LoadingSpinner,{}),pageStart:0,useWindow:false,loadMore:setNextDisplayedPalettes,getScrollParent:function getScrollParent(){return containerReference.current;},children:/*#__PURE__*/_jsx(motion.div,{variants:PALETTES_LIST_TRANSITIONS_PROPS,initial:\"hidden\",animate:\"visible\",children:displayedPalettes.map(function(item,paletteIndex){return/*#__PURE__*/_jsxs(motion.button,{variants:PALETTES_ITEM_TRANSITIONS_PROPS,type:\"button\",className:classes.selectablePaletteContainer,onClick:onSelectChanged(item),children:[/*#__PURE__*/_jsx(Typography,{color:\"dark\",classes:{container:classes.selectablePaletteIndex},variant:\"h3\",children:\"\".concat(paletteIndex+1,\".\")}),/*#__PURE__*/_jsx(PaletteVisual,{classes:{tooltipPopper:classes.tooltipPopper,color:classes.paletteVisualColor},palette:['primary','secondary','tertiary'].reduce(function(acc,keyName,index){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},keyName,{500:item[index]}));},{})})]},\"palette_\".concat(item.join('_')));})})},\"scroll\")]});};export var PalettesList=PalettesListComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/banner/user_actions_row/customize_dialog/palettes_list/palettes_list.jsx"],"names":["React","useCallback","useMemo","useRef","useState","cn","createUseStyles","InfiniteScroll","motion","Typography","PaletteVisual","LoadingSpinner","buildShadedPalette","palettes","PALETTES_LIST_TRANSITIONS_PROPS","PALETTES_ITEM_TRANSITIONS_PROPS","styles","useStyles","PalettesListComponent","currentPalette","value","onChange","classes","receivedClasses","containerReference","itemsToShow","setItemsToShow","displayedPalettes","slice","onSelectChanged","primary","secondary","tertiary","setNextDisplayedPalettes","container","selectedPaletteContainer","divider","length","current","map","item","paletteIndex","selectablePaletteContainer","selectablePaletteIndex","tooltipPopper","color","paletteVisualColor","reduce","acc","keyName","index","join","PalettesList"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { motion } from 'framer-motion';\n\nimport { Typography } from '@welovedevs/ui';\n\nimport { PaletteVisual } from '../palette_visual/palette_visual';\nimport { LoadingSpinner } from '../../../../commons/loading_spinner/loading_spinner';\n\nimport { buildShadedPalette } from './utils/build_shaded_palette';\n\nimport { palettes } from './utils/palettes';\n\nimport { PALETTES_LIST_TRANSITIONS_PROPS, PALETTES_ITEM_TRANSITIONS_PROPS } from './palettes_list_transition_props';\n\nimport { styles } from './palettes_list_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst PalettesListComponent = ({ value: currentPalette, onChange, classes: receivedClasses = {} }) => {\n    const classes = useStyles();\n    const containerReference = useRef();\n    const [itemsToShow, setItemsToShow] = useState(10);\n\n    const displayedPalettes = useMemo(() => palettes.slice(0, itemsToShow), [itemsToShow]);\n\n    const onSelectChanged = useCallback(\n        (value) => () => {\n            const [primary, secondary, tertiary] = value;\n            return onChange({\n                primary: buildShadedPalette(primary),\n                secondary: buildShadedPalette(secondary),\n                tertiary: buildShadedPalette(tertiary)\n            });\n        },\n        []\n    );\n\n    const setNextDisplayedPalettes = useCallback(() => setItemsToShow(itemsToShow + 10), [itemsToShow, setItemsToShow]);\n\n    return (\n        <div\n            ref={containerReference}\n            id={`scrollable_${classes.container}`}\n            className={cn(classes.container, receivedClasses.container)}\n        >\n            {currentPalette && (\n                <div className={classes.selectedPaletteContainer}>\n                    <PaletteVisual palette={currentPalette} />\n                    <div className={classes.divider} />\n                </div>\n            )}\n            <InfiniteScroll\n                key=\"scroll\"\n                hasMore={itemsToShow < palettes.length}\n                loader={<LoadingSpinner />}\n                pageStart={0}\n                useWindow={false}\n                loadMore={setNextDisplayedPalettes}\n                getScrollParent={() => containerReference.current}\n            >\n                <motion.div variants={PALETTES_LIST_TRANSITIONS_PROPS} initial=\"hidden\" animate=\"visible\">\n                    {displayedPalettes.map((item, paletteIndex) => (\n                        <motion.button\n                            variants={PALETTES_ITEM_TRANSITIONS_PROPS}\n                            key={`palette_${item.join('_')}`}\n                            type=\"button\"\n                            className={classes.selectablePaletteContainer}\n                            onClick={onSelectChanged(item)}\n                        >\n                            <Typography\n                                color=\"dark\"\n                                classes={{\n                                    container: classes.selectablePaletteIndex\n                                }}\n                                variant=\"h3\"\n                            >\n                                {`${paletteIndex + 1}.`}\n                            </Typography>\n                            <PaletteVisual\n                                classes={{\n                                    tooltipPopper: classes.tooltipPopper,\n                                    color: classes.paletteVisualColor\n                                }}\n                                palette={['primary', 'secondary', 'tertiary'].reduce(\n                                    (acc, keyName, index) => ({\n                                        ...acc,\n                                        [keyName]: { 500: item[index] }\n                                    }),\n                                    {}\n                                )}\n                            />\n                        </motion.button>\n                    ))}\n                </motion.div>\n            </InfiniteScroll>\n        </div>\n    );\n};\n\nexport const PalettesList = PalettesListComponent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React,{useMemo}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage,useIntl}from'react-intl';import{EditDialog}from'../../../../commons/edit_dialog/edit_dialog';import{SkillsEditForm}from'./skills_edit_form/skills_edit_form';import{styles}from'./skills_edit_dialog_styles';import{useOptions}from'../../../../hooks/use_options';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var SkillsEditDialogComponent=function SkillsEditDialogComponent(_ref){var open=_ref.open,onClose=_ref.onClose,data=_ref.data,onEdit=_ref.onEdit,validationSchema=_ref.validationSchema,isEditing=_ref.isEditing;var classes=useStyles();var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;var maxSkills=useOptions('maxSkills',12);var validationSchemaToPass=useMemo(function(){return validationSchema(formatMessage,{limitTo:maxSkills});},[validationSchema]);return/*#__PURE__*/_jsx(EditDialog,{fullScreen:true,classes:{paper:classes.paper,content:classes.content},open:open,isEditing:isEditing,onClose:onClose,data:data,onEdit:onEdit,validationSchema:validationSchemaToPass,dialogClasses:{dialog:{root:classes.dialogRoot,paper:classes.dialogPaper}},title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Skills.editDialog.title\",defaultMessage:\"What are your main skills?\"}),children:function children(helpers){return/*#__PURE__*/_jsx(SkillsEditForm,{helpers:helpers});}});};export var SkillsEditDialog=SkillsEditDialogComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/skills/skills_edit_dialog/skills_edit_dialog.jsx"],"names":["React","useMemo","createUseStyles","FormattedMessage","useIntl","EditDialog","SkillsEditForm","styles","useOptions","useStyles","SkillsEditDialogComponent","open","onClose","data","onEdit","validationSchema","isEditing","classes","formatMessage","maxSkills","validationSchemaToPass","limitTo","paper","content","dialog","root","dialogRoot","dialogPaper","helpers","SkillsEditDialog"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CAEA,OAASC,eAAT,KAAgC,WAAhC,CACA,OAASC,gBAAT,CAA2BC,OAA3B,KAA0C,YAA1C,CAEA,OAASC,UAAT,KAA2B,6CAA3B,CACA,OAASC,cAAT,KAA+B,qCAA/B,CAEA,OAASC,MAAT,KAAuB,6BAAvB,CACA,OAASC,UAAT,KAA2B,+BAA3B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGP,eAAe,CAACK,MAAD,CAAjC,CAEA,GAAMG,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,MAAkE,IAA/DC,CAAAA,IAA+D,MAA/DA,IAA+D,CAAzDC,OAAyD,MAAzDA,OAAyD,CAAhDC,IAAgD,MAAhDA,IAAgD,CAA1CC,MAA0C,MAA1CA,MAA0C,CAAlCC,gBAAkC,MAAlCA,gBAAkC,CAAhBC,SAAgB,MAAhBA,SAAgB,CAChG,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CADgG,aAEtEL,OAAO,EAF+D,CAExFc,aAFwF,UAExFA,aAFwF,CAGhG,GAAMC,CAAAA,SAAS,CAAGX,UAAU,CAAC,WAAD,CAAc,EAAd,CAA5B,CACA,GAAMY,CAAAA,sBAAsB,CAAGnB,OAAO,CAAC,iBAAMc,CAAAA,gBAAgB,CAACG,aAAD,CAAgB,CAAEG,OAAO,CAAEF,SAAX,CAAhB,CAAtB,EAAD,CAAgE,CAClGJ,gBADkG,CAAhE,CAAtC,CAIA,mBACI,KAAC,UAAD,EACI,UAAU,KADd,CAEI,OAAO,CAAE,CACLO,KAAK,CAAEL,OAAO,CAACK,KADV,CAELC,OAAO,CAAEN,OAAO,CAACM,OAFZ,CAFb,CAMI,IAAI,CAAEZ,IANV,CAOI,SAAS,CAAEK,SAPf,CAQI,OAAO,CAAEJ,OARb,CASI,IAAI,CAAEC,IATV,CAUI,MAAM,CAAEC,MAVZ,CAWI,gBAAgB,CAAEM,sBAXtB,CAYI,aAAa,CAAE,CAAEI,MAAM,CAAE,CAAEC,IAAI,CAAER,OAAO,CAACS,UAAhB,CAA4BJ,KAAK,CAAEL,OAAO,CAACU,WAA3C,CAAV,CAZnB,CAaI,KAAK,cAAE,KAAC,gBAAD,EAAkB,EAAE,CAAC,yBAArB,CAA+C,cAAc,CAAC,4BAA9D,EAbX,UAeK,kBAACC,OAAD,qBAAa,KAAC,cAAD,EAAgB,OAAO,CAAEA,OAAzB,EAAb,EAfL,EADJ,CAmBH,CA3BD,CA6BA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGnB,yBAAzB","sourcesContent":["import React, { useMemo } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { SkillsEditForm } from './skills_edit_form/skills_edit_form';\n\nimport { styles } from './skills_edit_dialog_styles';\nimport { useOptions } from '../../../../hooks/use_options';\n\nconst useStyles = createUseStyles(styles);\n\nconst SkillsEditDialogComponent = ({ open, onClose, data, onEdit, validationSchema, isEditing }) => {\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n    const maxSkills = useOptions('maxSkills', 12);\n    const validationSchemaToPass = useMemo(() => validationSchema(formatMessage, { limitTo: maxSkills }), [\n        validationSchema\n    ]);\n\n    return (\n        <EditDialog\n            fullScreen\n            classes={{\n                paper: classes.paper,\n                content: classes.content\n            }}\n            open={open}\n            isEditing={isEditing}\n            onClose={onClose}\n            data={data}\n            onEdit={onEdit}\n            validationSchema={validationSchemaToPass}\n            dialogClasses={{ dialog: { root: classes.dialogRoot, paper: classes.dialogPaper } }}\n            title={<FormattedMessage id=\"Skills.editDialog.title\" defaultMessage=\"What are your main skills?\" />}\n        >\n            {(helpers) => <SkillsEditForm helpers={helpers} />}\n        </EditDialog>\n    );\n};\n\nexport const SkillsEditDialog = SkillsEditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React,{useMemo}from'react';import{FormattedMessage}from'react-intl';import{jsx as _jsx}from\"react/jsx-runtime\";export var CodingYears=function CodingYears(_ref){var codingYears=_ref.codingYears;var codingYearsValue=useMemo(function(){var numberValue=Number(codingYears);if(Number.isNaN(numberValue)){return 0;}return numberValue;},[codingYears]);if(codingYearsValue===0){return/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.CodingYears.noExperience\",defaultMessage:\"I've just started coding\"});}return/*#__PURE__*/_jsx(FormattedMessage,{id:\"Basics.Back.CodingYears.value\",defaultMessage:'{codingYears, plural, one {# year} other {# years} } coding',values:{codingYears:codingYears}});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/basics/basics_back/fields/coding_years.jsx"],"names":["React","useMemo","FormattedMessage","CodingYears","codingYears","codingYearsValue","numberValue","Number","isNaN"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CAC5C,GAAMC,CAAAA,gBAAgB,CAAGJ,OAAO,CAAC,UAAM,CACnC,GAAMK,CAAAA,WAAW,CAAGC,MAAM,CAACH,WAAD,CAA1B,CACA,GAAIG,MAAM,CAACC,KAAP,CAAaF,WAAb,CAAJ,CAA+B,CAC3B,MAAO,EAAP,CACH,CACD,MAAOA,CAAAA,WAAP,CACH,CAN+B,CAM7B,CAACF,WAAD,CAN6B,CAAhC,CAOA,GAAIC,gBAAgB,GAAK,CAAzB,CAA4B,CACxB,mBAAO,KAAC,gBAAD,EAAkB,EAAE,CAAC,sCAArB,CAA4D,cAAc,CAAC,0BAA3E,EAAP,CACH,CACD,mBACI,KAAC,gBAAD,EACI,EAAE,CAAC,+BADP,CAEI,cAAc,CAAE,6DAFpB,CAGI,MAAM,CAAE,CAAED,WAAW,CAAXA,WAAF,CAHZ,EADJ,CAOH,CAlBM","sourcesContent":["import React, { useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport const CodingYears = ({ codingYears }) => {\n    const codingYearsValue = useMemo(() => {\n        const numberValue = Number(codingYears);\n        if (Number.isNaN(numberValue)) {\n            return 0;\n        }\n        return numberValue;\n    }, [codingYears]);\n    if (codingYearsValue === 0) {\n        return <FormattedMessage id=\"Basics.Back.CodingYears.noExperience\" defaultMessage=\"I've just started coding\" />;\n    }\n    return (\n        <FormattedMessage\n            id=\"Basics.Back.CodingYears.value\"\n            defaultMessage={'{codingYears, plural, one {# year} other {# years} } coding'}\n            values={{ codingYears }}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useMemo}from'react';import{createUseStyles,useTheme}from'react-jss';import chroma from'chroma-js';import{motion}from'framer-motion';import{FormattedMessage}from'react-intl';import{ProfileCardAnimatedBack}from'../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';import{LanguageColumn}from'./language_column/language_column';import{getColorsFromCardVariant,getHexFromPaletteColor}from'../../../../../utils/styles/styles_utils';import{useCardVariant}from'../../../../hooks/profile_card_hooks/use_card_variant';import{LANGUAGES_COLUMN_TRANSITIONS_PROPS}from'./languages_back_props';import{DEFAULT_SPRING_TYPE as spring}from'../../../../../utils/framer_motion/common_types/spring_type';import{styles}from'./languages_back_styles';import{existsAndNotEmpty}from'../../../utils/exists_and_not_empty';import{NoLanguage}from'./no_language/no_language';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var LanguagesBackComponent=function LanguagesBackComponent(_ref){var _data$languages$lengt,_data$languages;var data=_ref.data,handleAddButtonClick=_ref.handleAddButtonClick;var classes=useStyles({itemSize:(_data$languages$lengt=(_data$languages=data.languages)===null||_data$languages===void 0?void 0:_data$languages.length)!==null&&_data$languages$lengt!==void 0?_data$languages$lengt:0});return/*#__PURE__*/_jsx(ProfileCardAnimatedBack,{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Languages.back.title\",defaultMessage:\"Languages\"}),classes:{content:classes.content,contentAnimated:classes.contentAnimated,title:classes.cardTitle},children:/*#__PURE__*/_jsx(Content,{data:data,handleAddButtonClick:handleAddButtonClick,classes:classes})});};var Content=function Content(_ref2){var data=_ref2.data,handleAddButtonClick=_ref2.handleAddButtonClick,classes=_ref2.classes;var theme=useTheme();var _useCardVariant=useCardVariant(),_useCardVariant2=_slicedToArray(_useCardVariant,1),variant=_useCardVariant2[0];var _useMemo=useMemo(function(){return{backColor:getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).backColor),backBackgroundColor:getHexFromPaletteColor(theme,getColorsFromCardVariant(theme,variant).backBackgroundColor)};},[theme,variant]),backColor=_useMemo.backColor,backBackgroundColor=_useMemo.backBackgroundColor;var items=data.languages;var colorPalette=useMemo(function(){var _data$languages$lengt2,_data$languages2;return Array.from({length:(_data$languages$lengt2=(_data$languages2=data.languages)===null||_data$languages2===void 0?void 0:_data$languages2.length)!==null&&_data$languages$lengt2!==void 0?_data$languages$lengt2:0},function(v,k){return chroma.mix(backColor,backBackgroundColor,2*k/15).hex();});},[backColor,backBackgroundColor]);var hasLanguage=useMemo(function(){return existsAndNotEmpty(data===null||data===void 0?void 0:data.languages);},[data]);if(!hasLanguage){return/*#__PURE__*/_jsx(NoLanguage,{handleAddButtonClick:handleAddButtonClick});}return/*#__PURE__*/_jsx(\"div\",{className:classes.columnsContainer,children:items.map(function(item){var _data$languages$lengt3,_data$languages3,_item$language;return/*#__PURE__*/_jsx(LanguageColumn,{itemsSize:(_data$languages$lengt3=(_data$languages3=data.languages)===null||_data$languages3===void 0?void 0:_data$languages3.length)!==null&&_data$languages$lengt3!==void 0?_data$languages$lengt3:0,component:motion.div,item:item,motionConfig:{variants:LANGUAGES_COLUMN_TRANSITIONS_PROPS,initial:'initial',animate:'animate',transition:spring},style:{backgroundColor:colorPalette[item.index],color:backColor},cardVariant:variant,children:/*#__PURE__*/_jsx(\"button\",{className:classes.languageLettersButton,type:\"button\",children:(_item$language=item.language)===null||_item$language===void 0?void 0:_item$language.substring(0,2).toUpperCase()})},\"language_column_\".concat(item.id));})});};export var LanguagesBack=/*#__PURE__*/memo(LanguagesBackComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/languages/languages_back/languages_back.jsx"],"names":["React","memo","useMemo","createUseStyles","useTheme","chroma","motion","FormattedMessage","ProfileCardAnimatedBack","LanguageColumn","getColorsFromCardVariant","getHexFromPaletteColor","useCardVariant","LANGUAGES_COLUMN_TRANSITIONS_PROPS","DEFAULT_SPRING_TYPE","spring","styles","existsAndNotEmpty","NoLanguage","useStyles","LanguagesBackComponent","data","handleAddButtonClick","classes","itemSize","languages","length","content","contentAnimated","title","cardTitle","Content","theme","variant","backColor","backBackgroundColor","items","colorPalette","Array","from","v","k","mix","hex","hasLanguage","columnsContainer","map","item","div","variants","initial","animate","transition","backgroundColor","index","color","languageLettersButton","language","substring","toUpperCase","id","LanguagesBack"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from 'react';\n\nimport { createUseStyles, useTheme } from 'react-jss';\nimport chroma from 'chroma-js';\nimport { motion } from 'framer-motion';\nimport { FormattedMessage } from 'react-intl';\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { LanguageColumn } from './language_column/language_column';\n\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../utils/styles/styles_utils';\n\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { LANGUAGES_COLUMN_TRANSITIONS_PROPS } from './languages_back_props';\nimport { DEFAULT_SPRING_TYPE as spring } from '../../../../../utils/framer_motion/common_types/spring_type';\n\nimport { styles } from './languages_back_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoLanguage } from './no_language/no_language';\n\nconst useStyles = createUseStyles(styles);\n\nconst LanguagesBackComponent = ({ data, handleAddButtonClick }) => {\n    const classes = useStyles({ itemSize: data.languages?.length ?? 0 });\n\n    return (\n        <ProfileCardAnimatedBack\n            title={<FormattedMessage id=\"Languages.back.title\" defaultMessage=\"Languages\" />}\n            classes={{\n                content: classes.content,\n                contentAnimated: classes.contentAnimated,\n                title: classes.cardTitle\n            }}\n        >\n            <Content {...{ data, handleAddButtonClick, classes }} />\n        </ProfileCardAnimatedBack>\n    );\n};\n\nconst Content = ({ data, handleAddButtonClick, classes }) => {\n    const theme = useTheme();\n    const [variant] = useCardVariant();\n\n    const { backColor, backBackgroundColor } = useMemo(\n        () => ({\n            backColor: getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor),\n            backBackgroundColor: getHexFromPaletteColor(\n                theme,\n                getColorsFromCardVariant(theme, variant).backBackgroundColor\n            )\n        }),\n        [theme, variant]\n    );\n    const items = data.languages;\n\n    const colorPalette = useMemo(\n        () =>\n            Array.from({ length: data.languages?.length ?? 0 }, (v, k) =>\n                chroma.mix(backColor, backBackgroundColor, (2 * k) / 15).hex()\n            ),\n        [backColor, backBackgroundColor]\n    );\n    const hasLanguage = useMemo(() => existsAndNotEmpty(data?.languages), [data]);\n\n    if (!hasLanguage) {\n        return <NoLanguage handleAddButtonClick={handleAddButtonClick} />;\n    }\n    return (\n        <div className={classes.columnsContainer}>\n            {items.map((item) => (\n                <LanguageColumn\n                    itemsSize={data.languages?.length ?? 0}\n                    key={`language_column_${item.id}`}\n                    component={motion.div}\n                    item={item}\n                    motionConfig={{\n                        variants: LANGUAGES_COLUMN_TRANSITIONS_PROPS,\n                        initial: 'initial',\n                        animate: 'animate',\n                        transition: spring\n                    }}\n                    style={{\n                        backgroundColor: colorPalette[item.index],\n                        color: backColor\n                    }}\n                    cardVariant={variant}\n                >\n                    <button className={classes.languageLettersButton} type=\"button\">\n                        {item.language?.substring(0, 2).toUpperCase()}\n                    </button>\n                </LanguageColumn>\n            ))}\n        </div>\n    );\n};\n\nexport const LanguagesBack = memo(LanguagesBackComponent);\n"]},"metadata":{},"sourceType":"module"}
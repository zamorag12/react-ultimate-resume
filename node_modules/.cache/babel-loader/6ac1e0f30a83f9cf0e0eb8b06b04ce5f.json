{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo}from'react';import cn from'classnames';import{createUseStyles}from'react-jss';import{Tooltip}from'@welovedevs/ui';import{PALETTE_KEY_TRANSLATIONS}from'./palette_visual_translations';import{styles}from'./palette_visual_styles';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var PaletteVisualComponent=function PaletteVisualComponent(_ref){var palette=_ref.palette,_ref$classes=_ref.classes,receivedClasses=_ref$classes===void 0?{}:_ref$classes,_ref$translations=_ref.translations,translations=_ref$translations===void 0?PALETTE_KEY_TRANSLATIONS:_ref$translations;var classes=useStyles();var paletteEntries=useMemo(function(){return Object.entries(palette!==null&&palette!==void 0?palette:{});},[palette]);if(!palette){return null;}return/*#__PURE__*/_jsx(\"div\",{className:cn(classes.container,receivedClasses.container),children:paletteEntries.map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],hex=_ref3[1][500];return/*#__PURE__*/_jsx(Tooltip,{title:translations[key],classes:{popper:receivedClasses.tooltipPopper},children:/*#__PURE__*/_jsx(\"div\",{className:cn(classes.color,receivedClasses.color),style:{color:hex}})},\"palette_visual_color_\".concat(key,\"_\").concat(hex));})});};export var PaletteVisual=PaletteVisualComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/banner/user_actions_row/customize_dialog/palette_visual/palette_visual.jsx"],"names":["React","useMemo","cn","createUseStyles","Tooltip","PALETTE_KEY_TRANSLATIONS","styles","useStyles","PaletteVisualComponent","palette","classes","receivedClasses","translations","paletteEntries","Object","entries","container","map","key","hex","popper","tooltipPopper","color","PaletteVisual"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,eAAT,KAAgC,WAAhC,CAEA,OAASC,OAAT,KAAwB,gBAAxB,CAEA,OAASC,wBAAT,KAAyC,+BAAzC,CAEA,OAASC,MAAT,KAAuB,yBAAvB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGJ,eAAe,CAACG,MAAD,CAAjC,CAEA,GAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAIzB,IAHFC,CAAAA,OAGE,MAHFA,OAGE,mBAFFC,OAEE,CAFOC,eAEP,uBAFyB,EAEzB,qCADFC,YACE,CADFA,YACE,4BADaP,wBACb,mBACF,GAAMK,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CAEA,GAAMM,CAAAA,cAAc,CAAGZ,OAAO,CAAC,iBAAMa,CAAAA,MAAM,CAACC,OAAP,CAAeN,OAAf,SAAeA,OAAf,UAAeA,OAAf,CAA0B,EAA1B,CAAN,EAAD,CAAsC,CAACA,OAAD,CAAtC,CAA9B,CAEA,GAAI,CAACA,OAAL,CAAc,CACV,MAAO,KAAP,CACH,CAED,mBACI,YAAK,SAAS,CAAEP,EAAE,CAACQ,OAAO,CAACM,SAAT,CAAoBL,eAAe,CAACK,SAApC,CAAlB,UACKH,cAAc,CAACI,GAAf,CAAmB,kDAAEC,GAAF,UAAcC,GAAd,UAAS,GAAT,qBAChB,KAAC,OAAD,EAEI,KAAK,CAAEP,YAAY,CAACM,GAAD,CAFvB,CAGI,OAAO,CAAE,CACLE,MAAM,CAAET,eAAe,CAACU,aADnB,CAHb,uBAOI,YAAK,SAAS,CAAEnB,EAAE,CAACQ,OAAO,CAACY,KAAT,CAAgBX,eAAe,CAACW,KAAhC,CAAlB,CAA0D,KAAK,CAAE,CAAEA,KAAK,CAAEH,GAAT,CAAjE,EAPJ,iCACiCD,GADjC,aACwCC,GADxC,EADgB,EAAnB,CADL,EADJ,CAeH,CA5BD,CA8BA,MAAO,IAAMI,CAAAA,aAAa,CAAGf,sBAAtB","sourcesContent":["import React, { useMemo } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nimport { Tooltip } from '@welovedevs/ui';\n\nimport { PALETTE_KEY_TRANSLATIONS } from './palette_visual_translations';\n\nimport { styles } from './palette_visual_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst PaletteVisualComponent = ({\n    palette,\n    classes: receivedClasses = {},\n    translations = PALETTE_KEY_TRANSLATIONS\n}) => {\n    const classes = useStyles();\n\n    const paletteEntries = useMemo(() => Object.entries(palette ?? {}), [palette]);\n\n    if (!palette) {\n        return null;\n    }\n\n    return (\n        <div className={cn(classes.container, receivedClasses.container)}>\n            {paletteEntries.map(([key, { 500: hex }]) => (\n                <Tooltip\n                    key={`palette_visual_color_${key}_${hex}`}\n                    title={translations[key]}\n                    classes={{\n                        popper: receivedClasses.tooltipPopper\n                    }}\n                >\n                    <div className={cn(classes.color, receivedClasses.color)} style={{ color: hex }} />\n                </Tooltip>\n            ))}\n        </div>\n    );\n};\n\nexport const PaletteVisual = PaletteVisualComponent;\n"]},"metadata":{},"sourceType":"module"}
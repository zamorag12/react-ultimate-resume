{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useCallback,useMemo,useState}from'react';import cn from'classnames';import{createUseStyles,useTheme}from'react-jss';import{FormattedMessage,useIntl}from'react-intl';import{AnimatePresence,motion}from'framer-motion';import{Twemoji}from'react-emoji-render';import{arrayMove,SortableContainer,SortableElement,SortableHandle}from'react-sortable-hoc';import{useFormikContext}from'formik';import moment from'moment';import keyBy from'lodash/keyBy';import uuid from'uuid/v4';import useMediaQuery from'@material-ui/core/useMediaQuery/useMediaQuery';import{Checkbox,List,ListItem,TextField,Tooltip,Typography}from'@welovedevs/ui';import{EditDialog}from'../../../../commons/edit_dialog/edit_dialog';import{YearMonth}from'../../../../commons/year_month/year_month';import{LocationField}from'../../../../commons/location_field/location_field';import{AddButton}from'../../../../commons/add_button/add_button';import{ReactComponent as MoveIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/move_list.svg\";import{ReactComponent as DeleteIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/trash.svg\";import{ReactComponent as ArrowIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/keyboard_arrow_down.svg\";import{EXPERIENCE_CONTENT_TRANSITION_PROPS}from'./experiences_edit_dialog_props';import{translations}from'./experiences_edit_dialog_translations';import{styles}from'./experiences_edit_dialog_styles';import{useOptions}from'../../../../hooks/use_options';import{DEFAULT_SPRING_TYPE as spring}from'../../../../../utils/framer_motion/common_types/spring_type';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var DragHandle=SortableHandle(function(_ref){var classes=_ref.classes;return/*#__PURE__*/_jsx(\"button\",{className:classes.dragHandleButton,type:\"button\",children:/*#__PURE__*/_jsx(MoveIcon,{className:classes.dragHandle})});});var ExperiencesEditDialogComponent=function ExperiencesEditDialogComponent(_ref2){var open=_ref2.open,onClose=_ref2.onClose,data=_ref2.data,onEdit=_ref2.onEdit,validationSchema=_ref2.validationSchema,isEditing=_ref2.isEditing;var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;var validationSchemaToPass=useMemo(function(){return validationSchema(formatMessage);},[validationSchema]);return/*#__PURE__*/_jsx(EditDialog,{open:open,onClose:onClose,data:data,isEditing:isEditing,onEdit:onEdit,validationSchema:validationSchemaToPass,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experiences.editDialog.title\",defaultMessage:\"Edit your professional experiences?\"}),children:function children(helpers){return/*#__PURE__*/_jsx(ExperiencesEditFormWrapper,{helpers:helpers});}});};var ExperiencesEditFormWrapper=function ExperiencesEditFormWrapper(_ref3){var handleValueChange=_ref3.helpers.handleValueChange;var _useFormikContext=useFormikContext(),work=_useFormikContext.values.work,validationErrors=_useFormikContext.errors;var errors=validationErrors;var experienceFieldChanged=useCallback(function(experienceIndex,field,value){handleValueChange(\"work[\".concat(experienceIndex,\"].\").concat(field))(value);},[]);var experienceDeleted=useCallback(function(idToDelete){return function(){handleValueChange('work')(work.filter(function(_ref4){var id=_ref4.id;return id!==idToDelete;}));};},[JSON.stringify(work)]);var addExperience=useCallback(function(){var id=uuid();handleValueChange('work')(work.concat({index:work.length,id:id}));},[JSON.stringify(work)]);var move=useCallback(function(_ref5){var oldIndex=_ref5.oldIndex,newIndex=_ref5.newIndex;handleValueChange('work')(arrayMove(work,oldIndex,newIndex).map(function(data,index){return _objectSpread(_objectSpread({},data),{},{index:index});}));},[work]);return/*#__PURE__*/_jsx(ExperiencesEditForm,{data:work,errors:errors===null||errors===void 0?void 0:errors.work,onAdd:addExperience,onMove:move,onFieldChange:experienceFieldChanged,onDelete:experienceDeleted});};var JobTitle=function JobTitle(_ref6){var experience=_ref6.experience;var _useIntl2=useIntl(),formatMessage=_useIntl2.formatMessage;var title=useMemo(function(){var _experience$startDate,_experience$endDate;var payload={jobTitle:experience.position,companyName:experience.name,start:(_experience$startDate=experience.startDate)===null||_experience$startDate===void 0?void 0:_experience$startDate.format('MMMM YYYY'),end:(_experience$endDate=experience.endDate)===null||_experience$endDate===void 0?void 0:_experience$endDate.format('MMMM YYYY')};if(payload.companyName){if(!payload.end){return formatMessage(translations.jobTitleCompanyNoEnd,payload);}return formatMessage(translations.jobTitleCompanyBothDates,payload);}if(payload.end){return formatMessage(translations.jobTitleNoCompanyNoEnd,payload);}return formatMessage(translations.jobTitleNoCompanyBothDates,payload);},[experience]);return title;};var ExperienceItem=SortableElement(function(_ref7){var id=_ref7.id,experience=_ref7.experience,onChange=_ref7.onChange,onRemove=_ref7.onRemove,fieldErrors=_ref7.error,folded=_ref7.folded,toggleFold=_ref7.toggleFold,classes=_ref7.classes,index=_ref7.experienceIndex;var _useIntl3=useIntl(),formatMessage=_useIntl3.formatMessage;var theme=useTheme();var isMobile=useMediaQuery(\"(max-width: \".concat(theme.screenSizes.small,\"px)\"));var _useOptions=useOptions('disableSortableExperience',false),_useOptions2=_slicedToArray(_useOptions,1),disableSortableExperience=_useOptions2[0];var dragHandle=useMemo(function(){if(disableSortableExperience){return null;}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DragHandle,{classes:classes}),/*#__PURE__*/_jsx(\"div\",{className:classes.divider})]});},[disableSortableExperience]);var hasError=Boolean(fieldErrors);return/*#__PURE__*/_jsxs(\"div\",{className:classes.experience,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.smallItemContainer,children:[dragHandle,/*#__PURE__*/_jsx(Tooltip,{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.delete\",defaultMessage:\"Delete\"}),children:/*#__PURE__*/_jsx(\"button\",{className:classes.removeButton,type:\"button\",onClick:onRemove(id),children:/*#__PURE__*/_jsx(DeleteIcon,{className:classes.removeIcon})})}),!isMobile&&/*#__PURE__*/_jsx(\"div\",{className:classes.divider}),/*#__PURE__*/_jsxs(ListItem,{button:true,className:cn(classes.listItem,hasError&&classes.listItemError),onClick:function onClick(){return toggleFold(!folded);},children:[/*#__PURE__*/_jsx(motion.div,{className:classes.arrowContainer,animate:{transform:\"rotate(\".concat(folded?-90:0,\"deg)\")},children:/*#__PURE__*/_jsx(ArrowIcon,{className:cn('refinement-arrow')})}),hasError&&/*#__PURE__*/_jsx(Twemoji,{className:classes.warningIcon,svg:true,text:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(Typography,{className:classes.smallTitle,color:\"dark\",children:/*#__PURE__*/_jsx(JobTitle,{experience:experience})})]})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:!folded&&/*#__PURE__*/_jsx(motion.div,{variants:EXPERIENCE_CONTENT_TRANSITION_PROPS,initial:\"initial\",animate:\"animate\",exit:\"exit\",transition:spring,children:/*#__PURE__*/_jsx(ContentFields,{fieldErrors:fieldErrors,id:id,formatMessage:formatMessage,experience:experience,onChange:onChange,classes:classes,index:index})})})]});});var ContentFields=function ContentFields(_ref8){var _experience$place;var fieldErrors=_ref8.fieldErrors,id=_ref8.id,formatMessage=_ref8.formatMessage,experience=_ref8.experience,onChange=_ref8.onChange,classes=_ref8.classes,index=_ref8.index;var stillEmployed=!experience.endDate;var handleStillEmployedChange=useCallback(function(){if(!stillEmployed){onChange(index,'endDate',null);}else{onChange(index,'endDate',moment());}},[index,stillEmployed]);var stillEmployedComponent=/*#__PURE__*/_jsx(StillEmployedField,{value:stillEmployed,handleStillEmployedChange:handleStillEmployedChange,formatMessage:formatMessage,classes:classes});var handleNameChange=useCallback(function(e){return onChange(index,'name',e.target.value);},[index]);var handlePositionChange=useCallback(function(e){return onChange(index,'position',e.target.value);},[index]);var handleSummaryChange=useCallback(function(e){return onChange(index,'summary',e.target.value);},[index]);var handleStartDate=useCallback(function(value){return onChange(index,'startDate',value);},[index]);var handleEndDate=useCallback(function(value){return onChange(index,'endDate',value);},[index]);var handleLocationChange=useCallback(function(value){return onChange(index,'place',value);},[index]);var handleLocationTextChange=useCallback(function(value){return onChange(index,'place',{name:value.target.value});},[index]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.content,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.line}),/*#__PURE__*/_jsxs(\"div\",{className:classes.fields,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.fieldRow,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.fieldContainer,children:[/*#__PURE__*/_jsx(Typography,{component:\"p\",color:\"dark\",variant:\"label\",children:formatMessage(translations.companyName)}),/*#__PURE__*/_jsx(TextField,{id:\"experience_companyName_\".concat(id),placeholder:formatMessage(translations.companyNamePlaceholder),value:experience.name,onChange:handleNameChange,margin:\"normal\",variant:\"flat\"}),(fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.name)&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",variant:\"helper\",component:\"p\",children:fieldErrors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.fieldContainer,children:[/*#__PURE__*/_jsx(Typography,{component:\"p\",color:\"dark\",variant:\"label\",children:formatMessage(translations.jobTitle)}),/*#__PURE__*/_jsx(TextField,{id:\"experience_jobTitle_\".concat(id),placeholder:formatMessage(translations.jobTitlePlaceholder),value:experience.position,onChange:handlePositionChange,margin:\"normal\",variant:\"flat\"}),(fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.position)&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",variant:\"helper\",component:\"p\",children:fieldErrors.position})]})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.fieldRow,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.fieldContainer,children:[/*#__PURE__*/_jsx(Typography,{component:\"p\",color:\"dark\",variant:\"label\",children:formatMessage(translations.jobPlace)}),/*#__PURE__*/_jsx(LocationField,{id:\"experience_jobPlace_\".concat(id),placeholder:formatMessage(translations.jobPlacePlaceholder),value:(_experience$place=experience.place)===null||_experience$place===void 0?void 0:_experience$place.name,onLocationSelected:handleLocationChange,onChange:handleLocationTextChange,margin:\"normal\",variant:\"flat\"}),(fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.place)&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",variant:\"helper\",component:\"p\",children:(fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.place.name)||fieldErrors.place})]})}),/*#__PURE__*/_jsxs(\"div\",{className:cn(classes.fieldRow,classes.yearMonthRow),children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.yearMonthWrapper,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.fieldContainer,children:/*#__PURE__*/_jsx(YearMonth,{textfieldProps:{fullWidth:true},variant:\"flat\",value:experience.startDate,onChange:handleStartDate,title:translations.startDate,error:fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.startDate})}),!stillEmployed&&/*#__PURE__*/_jsx(\"div\",{className:classes.fieldContainer,children:/*#__PURE__*/_jsx(YearMonth,{variant:\"flat\",value:experience.endDate,onChange:handleEndDate,title:translations.endDate,error:fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.endDate})})]}),stillEmployed&&stillEmployedComponent]}),!stillEmployed&&stillEmployedComponent,/*#__PURE__*/_jsx(\"div\",{className:classes.fieldRow,children:/*#__PURE__*/_jsxs(\"div\",{className:cn(classes.fieldContainer,classes.fullWidthFieldContainer),children:[/*#__PURE__*/_jsx(Typography,{component:\"p\",color:\"dark\",variant:\"label\",children:formatMessage(translations.descriptionTitle)}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"experience_description_\".concat(id),placeholder:formatMessage(translations.descriptionPlaceholder),value:experience.summary,onChange:handleSummaryChange,margin:\"normal\",variant:\"flat\",multiline:true,rows:4}),(fieldErrors===null||fieldErrors===void 0?void 0:fieldErrors.summary)&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",variant:\"helper\",component:\"p\",children:fieldErrors.summary})]})})]})]});};var SortableExperiences=SortableContainer(function(_ref9){var _ref9$items=_ref9.items,items=_ref9$items===void 0?[]:_ref9$items,experienceFieldChanged=_ref9.experienceFieldChanged,experienceDeleted=_ref9.experienceDeleted,formatMessage=_ref9.formatMessage,errors=_ref9.errors,foldedState=_ref9.foldedState,toggleFold=_ref9.toggleFold,classes=_ref9.classes;return/*#__PURE__*/_jsx(List,{component:\"nav\",children:items.filter(Boolean).sort(function(_ref10,_ref11){var a=_ref10.index;var b=_ref11.index;return a-b;}).map(function(experience,index){return/*#__PURE__*/_jsx(ExperienceItem,{index:index,onChange:experienceFieldChanged,onRemove:experienceDeleted,id:experience.id,experience:experience,formatMessage:formatMessage,error:errors&&errors[index],folded:foldedState[experience.id],toggleFold:toggleFold(experience.id),classes:classes,experienceIndex:index},\"work_\".concat(experience.id,\"_\").concat(index));})});});var StillEmployedField=function StillEmployedField(_ref12){var value=_ref12.value,classes=_ref12.classes,handleStillEmployedChange=_ref12.handleStillEmployedChange,formatMessage=_ref12.formatMessage;return/*#__PURE__*/_jsx(\"div\",{className:cn(classes.fieldRow,value&&cn(classes.fieldRowJustifyEnd,classes.withMarginStillEmployedFieldRow)),children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:cn(classes.fieldContainer,classes.checkboxField),onClick:handleStillEmployedChange,children:[/*#__PURE__*/_jsx(Checkbox,{color:\"secondary\",checked:value,variant:\"outlined\"}),/*#__PURE__*/_jsx(Typography,{classes:{container:classes.typography},color:\"dark\",component:\"div\",children:formatMessage(translations.stillEmployed)})]})});};var ExperiencesEditForm=function ExperiencesEditForm(_ref13){var data=_ref13.data,errors=_ref13.errors,onAdd=_ref13.onAdd,onMove=_ref13.onMove,onFieldChange=_ref13.onFieldChange,onDelete=_ref13.onDelete;var classes=useStyles({});var keyedValues=useMemo(function(){return keyBy(data,function(_ref14){var id=_ref14.id;return id;});},[data]);var _useState=useState(Object.keys(keyedValues||{}).reduce(function(state,id){// eslint-disable-next-line no-param-reassign\nstate[id]=true;return state;},{})),_useState2=_slicedToArray(_useState,2),foldedState=_useState2[0],setFoldState=_useState2[1];var toggleFold=useCallback(function(id){return function(value){var newFoldState=_objectSpread({},foldedState);newFoldState[id]=value;setFoldState(newFoldState);};},[foldedState]);var globalError=typeof errors==='string'&&errors;return/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[/*#__PURE__*/_jsx(SortableExperiences,{lockToContainerEdges:true,helperClass:classes.sortableHelper,onSortEnd:onMove,items:data,distance:15,useDragHandle:true,lockAxis:\"y\",experienceFieldChanged:onFieldChange,experienceDeleted:onDelete,errors:errors,foldedState:foldedState,toggleFold:toggleFold,classes:classes}),/*#__PURE__*/_jsx(AddButton,{onClick:onAdd}),globalError&&/*#__PURE__*/_jsx(Typography,{color:\"danger\",component:\"p\",children:errors})]});};export var ExperiencesEditDialog=ExperiencesEditDialogComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/experiences/experiences_edit_dialog/experiences_edit_dialog.jsx"],"names":["React","useCallback","useMemo","useState","cn","createUseStyles","useTheme","FormattedMessage","useIntl","AnimatePresence","motion","Twemoji","arrayMove","SortableContainer","SortableElement","SortableHandle","useFormikContext","moment","keyBy","uuid","useMediaQuery","Checkbox","List","ListItem","TextField","Tooltip","Typography","EditDialog","YearMonth","LocationField","AddButton","EXPERIENCE_CONTENT_TRANSITION_PROPS","translations","styles","useOptions","DEFAULT_SPRING_TYPE","spring","useStyles","DragHandle","classes","dragHandleButton","dragHandle","ExperiencesEditDialogComponent","open","onClose","data","onEdit","validationSchema","isEditing","formatMessage","validationSchemaToPass","helpers","ExperiencesEditFormWrapper","handleValueChange","work","values","validationErrors","errors","experienceFieldChanged","experienceIndex","field","value","experienceDeleted","idToDelete","filter","id","JSON","stringify","addExperience","concat","index","length","move","oldIndex","newIndex","map","JobTitle","experience","title","payload","jobTitle","position","companyName","name","start","startDate","format","end","endDate","jobTitleCompanyNoEnd","jobTitleCompanyBothDates","jobTitleNoCompanyNoEnd","jobTitleNoCompanyBothDates","ExperienceItem","onChange","onRemove","fieldErrors","error","folded","toggleFold","theme","isMobile","screenSizes","small","disableSortableExperience","divider","hasError","Boolean","smallItemContainer","removeButton","removeIcon","listItem","listItemError","arrowContainer","transform","warningIcon","smallTitle","ContentFields","stillEmployed","handleStillEmployedChange","stillEmployedComponent","handleNameChange","e","target","handlePositionChange","handleSummaryChange","handleStartDate","handleEndDate","handleLocationChange","handleLocationTextChange","content","line","fields","fieldRow","fieldContainer","companyNamePlaceholder","jobTitlePlaceholder","jobPlace","jobPlacePlaceholder","place","yearMonthRow","yearMonthWrapper","fullWidth","fullWidthFieldContainer","descriptionTitle","descriptionPlaceholder","summary","SortableExperiences","items","foldedState","sort","a","b","StillEmployedField","fieldRowJustifyEnd","withMarginStillEmployedFieldRow","checkboxField","container","typography","ExperiencesEditForm","onAdd","onMove","onFieldChange","onDelete","keyedValues","Object","keys","reduce","state","setFoldState","newFoldState","globalError","sortableHelper","ExperiencesEditDialog"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Twemoji } from 'react-emoji-render';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { useFormikContext } from 'formik';\nimport moment from 'moment';\nimport keyBy from 'lodash/keyBy';\nimport uuid from 'uuid/v4';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\nimport { Checkbox, List, ListItem, TextField, Tooltip, Typography } from '@welovedevs/ui';\n\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { YearMonth } from '../../../../commons/year_month/year_month';\nimport { LocationField } from '../../../../commons/location_field/location_field';\nimport { AddButton } from '../../../../commons/add_button/add_button';\n\nimport { ReactComponent as MoveIcon } from '../../../../../assets/icons/move_list.svg';\nimport { ReactComponent as DeleteIcon } from '../../../../../assets/icons/trash.svg';\nimport { ReactComponent as ArrowIcon } from '../../../../../assets/icons/keyboard_arrow_down.svg';\n\nimport { EXPERIENCE_CONTENT_TRANSITION_PROPS } from './experiences_edit_dialog_props';\n\nimport { translations } from './experiences_edit_dialog_translations';\nimport { styles } from './experiences_edit_dialog_styles';\nimport { useOptions } from '../../../../hooks/use_options';\nimport { DEFAULT_SPRING_TYPE as spring } from '../../../../../utils/framer_motion/common_types/spring_type';\n\nconst useStyles = createUseStyles(styles);\n\nconst DragHandle = SortableHandle(({ classes }) => (\n    <button className={classes.dragHandleButton} type=\"button\">\n        <MoveIcon className={classes.dragHandle} />\n    </button>\n));\n\nconst ExperiencesEditDialogComponent = ({ open, onClose, data, onEdit, validationSchema, isEditing }) => {\n    const { formatMessage } = useIntl();\n    const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n\n    return (\n        <EditDialog\n            open={open}\n            onClose={onClose}\n            data={data}\n            isEditing={isEditing}\n            onEdit={onEdit}\n            validationSchema={validationSchemaToPass}\n            title={\n                <FormattedMessage\n                    id=\"Experiences.editDialog.title\"\n                    defaultMessage=\"Edit your professional experiences?\"\n                />\n            }\n        >\n            {(helpers) => <ExperiencesEditFormWrapper helpers={helpers} />}\n        </EditDialog>\n    );\n};\n\nconst ExperiencesEditFormWrapper = ({ helpers: { handleValueChange } }) => {\n    const {\n        values: { work },\n        errors: validationErrors\n    } = useFormikContext();\n\n    const errors = validationErrors;\n\n    const experienceFieldChanged = useCallback((experienceIndex, field, value) => {\n        handleValueChange(`work[${experienceIndex}].${field}`)(value);\n    }, []);\n    const experienceDeleted = useCallback(\n        (idToDelete) => () => {\n            handleValueChange('work')(work.filter(({ id }) => id !== idToDelete));\n        },\n        [JSON.stringify(work)]\n    );\n\n    const addExperience = useCallback(() => {\n        const id = uuid();\n        handleValueChange('work')(\n            work.concat({\n                index: work.length,\n                id\n            })\n        );\n    }, [JSON.stringify(work)]);\n\n    const move = useCallback(\n        ({ oldIndex, newIndex }) => {\n            handleValueChange('work')(arrayMove(work, oldIndex, newIndex).map((data, index) => ({ ...data, index })));\n        },\n        [work]\n    );\n\n    return (\n        <ExperiencesEditForm\n            data={work}\n            errors={errors?.work}\n            onAdd={addExperience}\n            onMove={move}\n            onFieldChange={experienceFieldChanged}\n            onDelete={experienceDeleted}\n        />\n    );\n};\n\nconst JobTitle = ({ experience }) => {\n    const { formatMessage } = useIntl();\n    const title = useMemo(() => {\n        const payload = {\n            jobTitle: experience.position,\n            companyName: experience.name,\n            start: experience.startDate?.format('MMMM YYYY'),\n            end: experience.endDate?.format('MMMM YYYY')\n        };\n        if (payload.companyName) {\n            if (!payload.end) {\n                return formatMessage(translations.jobTitleCompanyNoEnd, payload);\n            }\n            return formatMessage(translations.jobTitleCompanyBothDates, payload);\n        }\n        if (payload.end) {\n            return formatMessage(translations.jobTitleNoCompanyNoEnd, payload);\n        }\n        return formatMessage(translations.jobTitleNoCompanyBothDates, payload);\n    }, [experience]);\n\n    return title;\n};\n\nconst ExperienceItem = SortableElement(\n    ({\n        id,\n        experience,\n        onChange,\n        onRemove,\n        error: fieldErrors,\n        folded,\n        toggleFold,\n        classes,\n        experienceIndex: index\n    }) => {\n        const { formatMessage } = useIntl();\n        const theme = useTheme();\n        const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n        const [disableSortableExperience] = useOptions('disableSortableExperience', false);\n\n        const dragHandle = useMemo(() => {\n            if (disableSortableExperience) {\n                return null;\n            }\n\n            return (\n                <>\n                    <DragHandle classes={classes} />\n                    <div className={classes.divider} />\n                </>\n            );\n        }, [disableSortableExperience]);\n        const hasError = Boolean(fieldErrors);\n        return (\n            <div className={classes.experience}>\n                <div className={classes.smallItemContainer}>\n                    {dragHandle}\n                    <Tooltip title={<FormattedMessage id=\"Main.lang.delete\" defaultMessage=\"Delete\" />}>\n                        <button className={classes.removeButton} type=\"button\" onClick={onRemove(id)}>\n                            <DeleteIcon className={classes.removeIcon} />\n                        </button>\n                    </Tooltip>\n                    {!isMobile && <div className={classes.divider} />}\n                    <ListItem\n                        button\n                        className={cn(classes.listItem, hasError && classes.listItemError)}\n                        onClick={() => toggleFold(!folded)}\n                    >\n                        <motion.div\n                            className={classes.arrowContainer}\n                            animate={{\n                                transform: `rotate(${folded ? -90 : 0}deg)`\n                            }}\n                        >\n                            <ArrowIcon className={cn('refinement-arrow')} />\n                        </motion.div>\n                        {hasError && <Twemoji className={classes.warningIcon} svg text=\"⚠️\" />}\n                        <Typography className={classes.smallTitle} color=\"dark\">\n                            <JobTitle {...{ experience }} />\n                        </Typography>\n                    </ListItem>\n                </div>\n                <AnimatePresence>\n                    {!folded && (\n                        <motion.div\n                            variants={EXPERIENCE_CONTENT_TRANSITION_PROPS}\n                            initial=\"initial\"\n                            animate=\"animate\"\n                            exit=\"exit\"\n                            transition={spring}\n                        >\n                            <ContentFields\n                                fieldErrors={fieldErrors}\n                                id={id}\n                                formatMessage={formatMessage}\n                                experience={experience}\n                                onChange={onChange}\n                                classes={classes}\n                                index={index}\n                            />\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        );\n    }\n);\n\nconst ContentFields = ({ fieldErrors, id, formatMessage, experience, onChange, classes, index }) => {\n    const stillEmployed = !experience.endDate;\n\n    const handleStillEmployedChange = useCallback(() => {\n        if (!stillEmployed) {\n            onChange(index, 'endDate', null);\n        } else {\n            onChange(index, 'endDate', moment());\n        }\n    }, [index, stillEmployed]);\n\n    const stillEmployedComponent = (\n        <StillEmployedField value={stillEmployed} {...{ handleStillEmployedChange, formatMessage, classes }} />\n    );\n\n    const handleNameChange = useCallback((e) => onChange(index, 'name', e.target.value), [index]);\n    const handlePositionChange = useCallback((e) => onChange(index, 'position', e.target.value), [index]);\n    const handleSummaryChange = useCallback((e) => onChange(index, 'summary', e.target.value), [index]);\n    const handleStartDate = useCallback((value) => onChange(index, 'startDate', value), [index]);\n    const handleEndDate = useCallback((value) => onChange(index, 'endDate', value), [index]);\n    const handleLocationChange = useCallback((value) => onChange(index, 'place', value), [index]);\n    const handleLocationTextChange = useCallback((value) => onChange(index, 'place', { name: value.target.value }), [\n        index\n    ]);\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.line} />\n            <div className={classes.fields}>\n                <div className={classes.fieldRow}>\n                    <div className={classes.fieldContainer}>\n                        <Typography component=\"p\" color=\"dark\" variant=\"label\">\n                            {formatMessage(translations.companyName)}\n                        </Typography>\n                        <TextField\n                            id={`experience_companyName_${id}`}\n                            placeholder={formatMessage(translations.companyNamePlaceholder)}\n                            value={experience.name}\n                            onChange={handleNameChange}\n                            margin=\"normal\"\n                            variant=\"flat\"\n                        />\n                        {fieldErrors?.name && (\n                            <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                {fieldErrors.name}\n                            </Typography>\n                        )}\n                    </div>\n                    <div className={classes.fieldContainer}>\n                        <Typography component=\"p\" color=\"dark\" variant=\"label\">\n                            {formatMessage(translations.jobTitle)}\n                        </Typography>\n                        <TextField\n                            id={`experience_jobTitle_${id}`}\n                            placeholder={formatMessage(translations.jobTitlePlaceholder)}\n                            value={experience.position}\n                            onChange={handlePositionChange}\n                            margin=\"normal\"\n                            variant=\"flat\"\n                        />\n                        {fieldErrors?.position && (\n                            <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                {fieldErrors.position}\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div className={classes.fieldRow}>\n                    <div className={classes.fieldContainer}>\n                        <Typography component=\"p\" color=\"dark\" variant=\"label\">\n                            {formatMessage(translations.jobPlace)}\n                        </Typography>\n                        <LocationField\n                            id={`experience_jobPlace_${id}`}\n                            placeholder={formatMessage(translations.jobPlacePlaceholder)}\n                            value={experience.place?.name}\n                            onLocationSelected={handleLocationChange}\n                            onChange={handleLocationTextChange}\n                            margin=\"normal\"\n                            variant=\"flat\"\n                        />\n                        {fieldErrors?.place && (\n                            <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                {fieldErrors?.place.name || fieldErrors.place}\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div className={cn(classes.fieldRow, classes.yearMonthRow)}>\n                    <div className={classes.yearMonthWrapper}>\n                        <div className={classes.fieldContainer}>\n                            <YearMonth\n                                textfieldProps={{ fullWidth: true }}\n                                variant=\"flat\"\n                                value={experience.startDate}\n                                onChange={handleStartDate}\n                                title={translations.startDate}\n                                error={fieldErrors?.startDate}\n                            />\n                        </div>\n                        {!stillEmployed && (\n                            <div className={classes.fieldContainer}>\n                                <YearMonth\n                                    variant=\"flat\"\n                                    value={experience.endDate}\n                                    onChange={handleEndDate}\n                                    title={translations.endDate}\n                                    error={fieldErrors?.endDate}\n                                />\n                            </div>\n                        )}\n                    </div>\n                    {stillEmployed && stillEmployedComponent}\n                </div>\n                {!stillEmployed && stillEmployedComponent}\n                <div className={classes.fieldRow}>\n                    <div className={cn(classes.fieldContainer, classes.fullWidthFieldContainer)}>\n                        <Typography component=\"p\" color=\"dark\" variant=\"label\">\n                            {formatMessage(translations.descriptionTitle)}\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            id={`experience_description_${id}`}\n                            placeholder={formatMessage(translations.descriptionPlaceholder)}\n                            value={experience.summary}\n                            onChange={handleSummaryChange}\n                            margin=\"normal\"\n                            variant=\"flat\"\n                            multiline\n                            rows={4}\n                        />\n                        {fieldErrors?.summary && (\n                            <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                {fieldErrors.summary}\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst SortableExperiences = SortableContainer(\n    ({\n        items = [],\n        experienceFieldChanged,\n        experienceDeleted,\n        formatMessage,\n        errors,\n        foldedState,\n        toggleFold,\n        classes\n    }) => (\n        <List component=\"nav\">\n            {items\n                .filter(Boolean)\n                .sort(({ index: a }, { index: b }) => a - b)\n                .map((experience, index) => (\n                    <ExperienceItem\n                        index={index}\n                        key={`work_${experience.id}_${index}`}\n                        onChange={experienceFieldChanged}\n                        onRemove={experienceDeleted}\n                        id={experience.id}\n                        experience={experience}\n                        formatMessage={formatMessage}\n                        error={errors && errors[index]}\n                        folded={foldedState[experience.id]}\n                        toggleFold={toggleFold(experience.id)}\n                        classes={classes}\n                        experienceIndex={index}\n                    />\n                ))}\n        </List>\n    )\n);\n\nconst StillEmployedField = ({ value, classes, handleStillEmployedChange, formatMessage }) => (\n    <div\n        className={cn(\n            classes.fieldRow,\n            value && cn(classes.fieldRowJustifyEnd, classes.withMarginStillEmployedFieldRow)\n        )}\n    >\n        <button\n            type=\"button\"\n            className={cn(classes.fieldContainer, classes.checkboxField)}\n            onClick={handleStillEmployedChange}\n        >\n            <Checkbox color=\"secondary\" checked={value} variant=\"outlined\" />\n            <Typography classes={{ container: classes.typography }} color=\"dark\" component=\"div\">\n                {formatMessage(translations.stillEmployed)}\n            </Typography>\n        </button>\n    </div>\n);\n\nconst ExperiencesEditForm = ({ data, errors, onAdd, onMove, onFieldChange, onDelete }) => {\n    const classes = useStyles({});\n    const keyedValues = useMemo(() => keyBy(data, ({ id }) => id), [data]);\n\n    const [foldedState, setFoldState] = useState(\n        Object.keys(keyedValues || {}).reduce((state, id) => {\n            // eslint-disable-next-line no-param-reassign\n            state[id] = true;\n            return state;\n        }, {})\n    );\n\n    const toggleFold = useCallback(\n        (id) => (value) => {\n            const newFoldState = { ...foldedState };\n            newFoldState[id] = value;\n            setFoldState(newFoldState);\n        },\n        [foldedState]\n    );\n\n    const globalError = typeof errors === 'string' && errors;\n\n    return (\n        <div className={classes.container}>\n            <SortableExperiences\n                lockToContainerEdges\n                helperClass={classes.sortableHelper}\n                onSortEnd={onMove}\n                items={data}\n                distance={15}\n                useDragHandle\n                lockAxis=\"y\"\n                experienceFieldChanged={onFieldChange}\n                experienceDeleted={onDelete}\n                {...{\n                    errors,\n                    foldedState,\n                    toggleFold,\n                    classes\n                }}\n            />\n            <AddButton onClick={onAdd} />\n            {globalError && (\n                <Typography color=\"danger\" component=\"p\">\n                    {errors}\n                </Typography>\n            )}\n        </div>\n    );\n};\n\nexport const ExperiencesEditDialog = ExperiencesEditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}
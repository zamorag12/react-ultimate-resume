{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useCallback,useMemo}from'react';import{createUseStyles}from'react-jss';import{FormattedMessage,useIntl}from'react-intl';import{useFormikContext}from'formik';import uuid from'uuid/v4';import{ListItem}from'@welovedevs/ui';import{EditDialog}from'../../../../commons/edit_dialog/edit_dialog';import{EditDialogField}from'../../../../commons/edit_dialog_field/edit_dialog_field';import{CheckboxGroup}from'../../../../commons/checkbox_group/checkbox_group';import{CONTRACT_TYPES}from'../../../../../utils/enums/contract_types/contract_types';import{Select}from'../../../../commons/select/select';import{SalaryField}from'./salary_field/salary_field';import{PerksField}from'./perks_field/perks_field';import{CurrentJobIssuesField}from'./current_job_issues_field/current_job_issues_field';import{LocationPlacesField}from'./location_places_field/location_places_field';import{REMOTE_FREQUENCY}from'../../../../../utils/enums/remote/remote_utils';import{remoteSelectTranslations}from'../../../../../utils/enums/remote/remote_filter_translations';import{contractTypesTranslations}from'../../../../../utils/enums/contract_types/contract_types_translations';import{styles}from'./dream_job_card_edit_dialog_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var DEFAULT_OBJECT={};var DreamJobCardEditDialogComponent=function DreamJobCardEditDialogComponent(_ref){var open=_ref.open,onClose=_ref.onClose,data=_ref.data,onEdit=_ref.onEdit,validationSchema=_ref.validationSchema,isEditing=_ref.isEditing;var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;var validationSchemaToPass=useMemo(function(){return validationSchema(formatMessage);},[validationSchema]);return/*#__PURE__*/_jsx(EditDialog,{open:open,onClose:onClose,data:data,onEdit:onEdit,isEditing:isEditing,validationSchema:validationSchemaToPass,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"DreamJob.editDialog.title\",defaultMessage:\"Your dream job information\"}),children:function children(helpers){return/*#__PURE__*/_jsx(Content,{helpers:helpers});}});};var Content=function Content(_ref2){var _values$perks,_values$currentJobIss;var handleValueChange=_ref2.helpers.handleValueChange;var _useIntl2=useIntl(),formatMessage=_useIntl2.formatMessage;var classes=useStyles();var _useFormikContext=useFormikContext(),values=_useFormikContext.values,errors=_useFormikContext.errors,handleChange=_useFormikContext.handleChange,setFieldValue=_useFormikContext.setFieldValue;var averageDailyRate=values.averageDailyRate,places=values.places,salary=values.salary,remoteFrequency=values.remoteFrequency,contractTypes=values.contractTypes;var perks=(_values$perks=values.perks)!==null&&_values$perks!==void 0?_values$perks:DEFAULT_OBJECT;var currentJobIssues=(_values$currentJobIss=values.currentJobIssues)!==null&&_values$currentJobIss!==void 0?_values$currentJobIss:DEFAULT_OBJECT;var addPlace=useCallback(function(place){return handleValueChange('places')(places.concat(_objectSpread(_objectSpread({},place),{},{id:uuid()})));},[places]);var removePlace=useCallback(function(id){return function(){return handleValueChange('places')(places.filter(function(place){return place.id!==id;}));};},[places]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LocationPlacesField,{onChange:handleValueChange('places'),error:errors===null||errors===void 0?void 0:errors.places,places:places,addPlace:addPlace,removePlace:removePlace}),/*#__PURE__*/_jsx(PerksField,{error:errors===null||errors===void 0?void 0:errors.perks,perks:perks,onChange:handleValueChange('perks'),setFieldValue:setFieldValue}),/*#__PURE__*/_jsx(EditDialogField,{error:errors.remoteFrequency,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"DreamJob.editDialog.remoteFrequency.title\",defaultMessage:\"Do you want to work remotely?\"}),children:/*#__PURE__*/_jsx(Select,{fullWidth:true,value:remoteFrequency,onChange:handleChange('remoteFrequency'),textFieldProps:{variant:'flat'},textFieldIconProps:{className:classes.selectIcon},children:Object.values(REMOTE_FREQUENCY).map(function(elemValue,index){return/*#__PURE__*/_jsx(ListItem,{value:elemValue,children:formatMessage(remoteSelectTranslations[elemValue])},\"remote_frequency_\".concat(elemValue,\"_\").concat(index));})})}),/*#__PURE__*/_jsx(EditDialogField,{error:errors.contractTypes,title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"DreamJob.editDialog.contractTypes.title\",defaultMessage:\"What contract types are you currently looking for?\"}),children:/*#__PURE__*/_jsx(CheckboxGroup,{values:CONTRACT_TYPES,translations:contractTypesTranslations,value:contractTypes,name:\"contractTypes\",variant:\"outlined\",onChange:handleValueChange('contractTypes')})}),/*#__PURE__*/_jsx(SalaryField,{salary:salary,contractTypes:contractTypes,averageDailyRate:averageDailyRate,errors:errors,handleChange:handleChange}),/*#__PURE__*/_jsx(CurrentJobIssuesField,{error:errors===null||errors===void 0?void 0:errors.currentJobIssues,currentJobIssues:currentJobIssues,onChange:handleValueChange('currentJobIssues'),setFieldValue:setFieldValue})]});};export var DreamJobCardEditDialog=DreamJobCardEditDialogComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/dream_job/dream_job_edit_dialog/dream_job_card_edit_dialog.jsx"],"names":["React","useCallback","useMemo","createUseStyles","FormattedMessage","useIntl","useFormikContext","uuid","ListItem","EditDialog","EditDialogField","CheckboxGroup","CONTRACT_TYPES","Select","SalaryField","PerksField","CurrentJobIssuesField","LocationPlacesField","REMOTE_FREQUENCY","remoteSelectTranslations","contractTypesTranslations","styles","useStyles","DEFAULT_OBJECT","DreamJobCardEditDialogComponent","open","onClose","data","onEdit","validationSchema","isEditing","formatMessage","validationSchemaToPass","helpers","Content","handleValueChange","classes","values","errors","handleChange","setFieldValue","averageDailyRate","places","salary","remoteFrequency","contractTypes","perks","currentJobIssues","addPlace","place","concat","id","removePlace","filter","variant","className","selectIcon","Object","map","elemValue","index","DreamJobCardEditDialog"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useFormikContext } from 'formik';\nimport uuid from 'uuid/v4';\n\nimport { ListItem } from '@welovedevs/ui';\n\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { EditDialogField } from '../../../../commons/edit_dialog_field/edit_dialog_field';\nimport { CheckboxGroup } from '../../../../commons/checkbox_group/checkbox_group';\n\nimport { CONTRACT_TYPES } from '../../../../../utils/enums/contract_types/contract_types';\n\nimport { Select } from '../../../../commons/select/select';\nimport { SalaryField } from './salary_field/salary_field';\n\nimport { PerksField } from './perks_field/perks_field';\nimport { CurrentJobIssuesField } from './current_job_issues_field/current_job_issues_field';\nimport { LocationPlacesField } from './location_places_field/location_places_field';\n\nimport { REMOTE_FREQUENCY } from '../../../../../utils/enums/remote/remote_utils';\nimport { remoteSelectTranslations } from '../../../../../utils/enums/remote/remote_filter_translations';\nimport { contractTypesTranslations } from '../../../../../utils/enums/contract_types/contract_types_translations';\n\nimport { styles } from './dream_job_card_edit_dialog_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst DEFAULT_OBJECT = {};\n\nconst DreamJobCardEditDialogComponent = ({ open, onClose, data, onEdit, validationSchema, isEditing }) => {\n    const { formatMessage } = useIntl();\n    const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n\n    return (\n        <EditDialog\n            open={open}\n            onClose={onClose}\n            data={data}\n            onEdit={onEdit}\n            isEditing={isEditing}\n            validationSchema={validationSchemaToPass}\n            title={<FormattedMessage id=\"DreamJob.editDialog.title\" defaultMessage=\"Your dream job information\" />}\n        >\n            {(helpers) => <Content helpers={helpers} />}\n        </EditDialog>\n    );\n};\n\nconst Content = ({ helpers: { handleValueChange } }) => {\n    const { formatMessage } = useIntl();\n    const classes = useStyles();\n    const { values, errors, handleChange, setFieldValue } = useFormikContext();\n    const { averageDailyRate, places, salary, remoteFrequency, contractTypes } = values;\n\n    const perks = values.perks ?? DEFAULT_OBJECT;\n    const currentJobIssues = values.currentJobIssues ?? DEFAULT_OBJECT;\n\n    const addPlace = useCallback((place) => handleValueChange('places')(places.concat({ ...place, id: uuid() })), [\n        places\n    ]);\n\n    const removePlace = useCallback(\n        (id) => () => handleValueChange('places')(places.filter((place) => place.id !== id)),\n        [places]\n    );\n\n    return (\n        <>\n            <LocationPlacesField\n                onChange={handleValueChange('places')}\n                error={errors?.places}\n                places={places}\n                addPlace={addPlace}\n                removePlace={removePlace}\n            />\n            <PerksField\n                error={errors?.perks}\n                perks={perks}\n                onChange={handleValueChange('perks')}\n                setFieldValue={setFieldValue}\n            />\n            <EditDialogField\n                error={errors.remoteFrequency}\n                title={\n                    <FormattedMessage\n                        id=\"DreamJob.editDialog.remoteFrequency.title\"\n                        defaultMessage=\"Do you want to work remotely?\"\n                    />\n                }\n            >\n                <Select\n                    fullWidth\n                    value={remoteFrequency}\n                    onChange={handleChange('remoteFrequency')}\n                    textFieldProps={{ variant: 'flat' }}\n                    textFieldIconProps={{ className: classes.selectIcon }}\n                >\n                    {Object.values(REMOTE_FREQUENCY).map((elemValue, index) => (\n                        <ListItem key={`remote_frequency_${elemValue}_${index}`} value={elemValue}>\n                            {formatMessage(remoteSelectTranslations[elemValue])}\n                        </ListItem>\n                    ))}\n                </Select>\n            </EditDialogField>\n            <EditDialogField\n                error={errors.contractTypes}\n                title={\n                    <FormattedMessage\n                        id=\"DreamJob.editDialog.contractTypes.title\"\n                        defaultMessage=\"What contract types are you currently looking for?\"\n                    />\n                }\n            >\n                <CheckboxGroup\n                    values={CONTRACT_TYPES}\n                    translations={contractTypesTranslations}\n                    value={contractTypes}\n                    name=\"contractTypes\"\n                    variant=\"outlined\"\n                    onChange={handleValueChange('contractTypes')}\n                />\n            </EditDialogField>\n            <SalaryField\n                salary={salary}\n                contractTypes={contractTypes}\n                averageDailyRate={averageDailyRate}\n                errors={errors}\n                handleChange={handleChange}\n            />\n            <CurrentJobIssuesField\n                error={errors?.currentJobIssues}\n                currentJobIssues={currentJobIssues}\n                onChange={handleValueChange('currentJobIssues')}\n                setFieldValue={setFieldValue}\n            />\n        </>\n    );\n};\n\nexport const DreamJobCardEditDialog = DreamJobCardEditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}
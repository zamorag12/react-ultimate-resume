{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import mergeWith from'lodash/mergeWith';import merge from'lodash/merge';import cloneDeep from'lodash/cloneDeep';import isArray from'lodash/isArray';import DESIGN_SYSTEM_DEFAULT_PALETTE from'@welovedevs/ui/styles/palettes';import{THEME_SCHEMA}from'./theme_schema';import{transformTheme}from'./theme_transforms';var DEFAULT_PALETTE=cloneDeep(DESIGN_SYSTEM_DEFAULT_PALETTE);export var DEFAULT_THEME={palette:DEFAULT_PALETTE,miscellaneous:{backgroundColor:DEFAULT_PALETTE.dark[50],color:DEFAULT_PALETTE.dark[500],fontFamily:['Avenir Next','Open Sans','Roboto','Arial'],spacing:8},screenSizes:{xs:400,small:500,medium:900},components:{banner:{overlayColor:'primary',imageSource:'https://cdn.filestackcontent.com/8I2wVnCRTFxypXRYLRsp'},cards:{height:470,width:470,borderRadius:20,default:{backgroundColor:'dark',color:'light',backBackgroundColor:'light',backColor:'dark'},variants:[['primary','light','light','primary'],['tertiary','primary','light','primary'],['light','secondary','light','secondary'],['secondary','light','light','secondary'],['light','primary','light','primary']].map(function(_ref){var _ref2=_slicedToArray(_ref,4),backgroundColor=_ref2[0],color=_ref2[1],backBackgroundColor=_ref2[2],backColor=_ref2[3];return{backgroundColor:backgroundColor,color:color,backBackgroundColor:backBackgroundColor,backColor:backColor};})}}};export var getRandomCardVariant=function getRandomCardVariant(theme){var _theme$components,_theme$components$car,_theme$components$car2;return Math.floor(Math.random()*((_theme$components=theme.components)===null||_theme$components===void 0?void 0:(_theme$components$car=_theme$components.cards)===null||_theme$components$car===void 0?void 0:(_theme$components$car2=_theme$components$car.variants)===null||_theme$components$car2===void 0?void 0:_theme$components$car2.length));};var mergeFunction=function mergeFunction(objValue,srcValue){if(isArray(objValue)){return srcValue;}return merge(objValue,srcValue);};export var buildTheme=function buildTheme(theme){var merged=mergeWith(cloneDeep(DEFAULT_THEME),theme,mergeFunction);try{THEME_SCHEMA.validateSync(merged,{context:{palette:merged===null||merged===void 0?void 0:merged.palette},strict:true});return transformTheme(merged);}catch(error){console.error('Invalid theme! Using default theme instead.',{error:error});return transformTheme(_objectSpread({},DEFAULT_THEME));}};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/utils/styles/theme/theme.js"],"names":["mergeWith","merge","cloneDeep","isArray","DESIGN_SYSTEM_DEFAULT_PALETTE","THEME_SCHEMA","transformTheme","DEFAULT_PALETTE","DEFAULT_THEME","palette","miscellaneous","backgroundColor","dark","color","fontFamily","spacing","screenSizes","xs","small","medium","components","banner","overlayColor","imageSource","cards","height","width","borderRadius","default","backBackgroundColor","backColor","variants","map","getRandomCardVariant","theme","Math","floor","random","length","mergeFunction","objValue","srcValue","buildTheme","merged","validateSync","context","strict","error","console"],"mappings":"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","sourcesContent":["import mergeWith from 'lodash/mergeWith';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isArray from 'lodash/isArray';\nimport DESIGN_SYSTEM_DEFAULT_PALETTE from '@welovedevs/ui/styles/palettes';\n\nimport { THEME_SCHEMA } from './theme_schema';\nimport { transformTheme } from './theme_transforms';\n\nconst DEFAULT_PALETTE = cloneDeep(DESIGN_SYSTEM_DEFAULT_PALETTE);\n\nexport const DEFAULT_THEME = {\n    palette: DEFAULT_PALETTE,\n    miscellaneous: {\n        backgroundColor: DEFAULT_PALETTE.dark[50],\n        color: DEFAULT_PALETTE.dark[500],\n        fontFamily: ['Avenir Next', 'Open Sans', 'Roboto', 'Arial'],\n        spacing: 8\n    },\n    screenSizes: {\n        xs: 400,\n        small: 500,\n        medium: 900\n    },\n    components: {\n        banner: {\n            overlayColor: 'primary',\n            imageSource: 'https://cdn.filestackcontent.com/8I2wVnCRTFxypXRYLRsp'\n        },\n        cards: {\n            height: 470,\n            width: 470,\n            borderRadius: 20,\n            default: {\n                backgroundColor: 'dark',\n                color: 'light',\n                backBackgroundColor: 'light',\n                backColor: 'dark'\n            },\n            variants: [\n                ['primary', 'light', 'light', 'primary'],\n                ['tertiary', 'primary', 'light', 'primary'],\n                ['light', 'secondary', 'light', 'secondary'],\n                ['secondary', 'light', 'light', 'secondary'],\n                ['light', 'primary', 'light', 'primary']\n            ].map(([backgroundColor, color, backBackgroundColor, backColor]) => ({\n                backgroundColor,\n                color,\n                backBackgroundColor,\n                backColor\n            }))\n        }\n    }\n};\n\nexport const getRandomCardVariant = (theme) => Math.floor(Math.random() * theme.components?.cards?.variants?.length);\n\nconst mergeFunction = (objValue, srcValue) => {\n    if (isArray(objValue)) {\n        return srcValue;\n    }\n    return merge(objValue, srcValue);\n};\n\nexport const buildTheme = (theme) => {\n    const merged = mergeWith(cloneDeep(DEFAULT_THEME), theme, mergeFunction);\n    try {\n        THEME_SCHEMA.validateSync(merged, {\n            context: { palette: merged?.palette },\n            strict: true\n        });\n        return transformTheme(merged);\n    } catch (error) {\n        console.error('Invalid theme! Using default theme instead.', { error });\n        return transformTheme({ ...DEFAULT_THEME });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as Yup from'yup';import{validationTranslations}from'../../../../../utils/validation_translations';import{interestsTranslations}from'./validator_translations';export var interestsValidator=function interestsValidator(formatMessage){return Yup.object().shape({interests:Yup.array().of(Yup.object().transform(function(value){return _objectSpread(_objectSpread({},value),{},{stillEmployed:!value.endDate});}).shape({name:Yup.string().required(formatMessage(validationTranslations.required)).min(2,formatMessage(validationTranslations.min,{min:2})),gifUrl:Yup.string()})).required(formatMessage(interestsTranslations.atLeastOne))});};export var validateInterestsComplete=function validateInterestsComplete(data){try{Yup.object({interests:Yup.array().required().min(1)}).validateSync(data);}catch(e){return false;}return true;};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/gifs/data/validator.js"],"names":["Yup","validationTranslations","interestsTranslations","interestsValidator","formatMessage","object","shape","interests","array","of","transform","value","stillEmployed","endDate","name","string","required","min","gifUrl","atLeastOne","validateInterestsComplete","data","validateSync","e"],"mappings":"wKAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,sBAAT,KAAuC,8CAAvC,CACA,OAASC,qBAAT,KAAsC,0BAAtC,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,aAAD,QAC9BJ,CAAAA,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB,CACfC,SAAS,CAAEP,GAAG,CAACQ,KAAJ,GACNC,EADM,CAEHT,GAAG,CAACK,MAAJ,GACKK,SADL,CACe,SAACC,KAAD,wCAAiBA,KAAjB,MAAwBC,aAAa,CAAE,CAACD,KAAK,CAACE,OAA9C,IADf,EAEKP,KAFL,CAEW,CACHQ,IAAI,CAAEd,GAAG,CAACe,MAAJ,GACDC,QADC,CACQZ,aAAa,CAACH,sBAAsB,CAACe,QAAxB,CADrB,EAEDC,GAFC,CAEG,CAFH,CAEMb,aAAa,CAACH,sBAAsB,CAACgB,GAAxB,CAA6B,CAAEA,GAAG,CAAE,CAAP,CAA7B,CAFnB,CADH,CAIHC,MAAM,CAAElB,GAAG,CAACe,MAAJ,EAJL,CAFX,CAFG,EAWNC,QAXM,CAWGZ,aAAa,CAACF,qBAAqB,CAACiB,UAAvB,CAXhB,CADI,CAAnB,CAD8B,EAA3B,CAgBP,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,IAAD,CAAU,CAC/C,GAAI,CACArB,GAAG,CAACK,MAAJ,CAAW,CACPE,SAAS,CAAEP,GAAG,CAACQ,KAAJ,GAAYQ,QAAZ,GAAuBC,GAAvB,CAA2B,CAA3B,CADJ,CAAX,EAEGK,YAFH,CAEgBD,IAFhB,EAGH,CAAC,MAAOE,CAAP,CAAU,CACR,MAAO,MAAP,CACH,CACD,MAAO,KAAP,CACH,CATM","sourcesContent":["import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { interestsTranslations } from './validator_translations';\n\nexport const interestsValidator = (formatMessage) =>\n    Yup.object().shape({\n        interests: Yup.array()\n            .of(\n                Yup.object()\n                    .transform((value) => ({ ...value, stillEmployed: !value.endDate }))\n                    .shape({\n                        name: Yup.string()\n                            .required(formatMessage(validationTranslations.required))\n                            .min(2, formatMessage(validationTranslations.min, { min: 2 })),\n                        gifUrl: Yup.string()\n                    })\n            )\n            .required(formatMessage(interestsTranslations.atLeastOne))\n    });\n\nexport const validateInterestsComplete = (data) => {\n    try {\n        Yup.object({\n            interests: Yup.array().required().min(1)\n        }).validateSync(data);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}
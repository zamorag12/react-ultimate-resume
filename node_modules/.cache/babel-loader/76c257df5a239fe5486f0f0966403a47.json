{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,memo,useCallback,useEffect,useMemo,useRef,useState}from'react';import cn from'classnames';import{createUseStyles}from'react-jss';import{FormattedMessage}from'react-intl';import moment from'moment';import{Typography}from'@welovedevs/ui';import{ProfileCardPaddedFront}from'../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';import{CenterContentContainer}from'../../../../commons/center_content_container/center_content_container';import{ProfileCardActions}from'../../../../commons/profile_card/profile_card_actions/profile_card_actions';import{ProfileCardButton}from'../../../../commons/profile_card/profile_card_button/profile_card_button';import{ProfileCardFrontTypography}from'../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';import{useCardVariant}from'../../../../hooks/profile_card_hooks/use_card_variant';import{useCardSide}from'../../../../hooks/profile_card_hooks/use_card_side';import{SIDES}from'../../../../commons/profile_card/profile_card_side/side';import{styles}from'./experiences_front_styles';import{existsAndNotEmpty}from'../../../utils/exists_and_not_empty';import{NoDataButton}from'../../../../commons/no_data_button/no_data_button';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var ExperiencesFrontComponent=function ExperiencesFrontComponent(_ref){var data=_ref.data,handleAddButtonClick=_ref.handleAddButtonClick;var _useCardVariant=useCardVariant(),_useCardVariant2=_slicedToArray(_useCardVariant,1),variant=_useCardVariant2[0];var _useCardSide=useCardSide(),_useCardSide2=_slicedToArray(_useCardSide,2),side=_useCardSide2[0],setSide=_useCardSide2[1];var classes=useStyles({variant:variant});var hasWork=useMemo(function(){return existsAndNotEmpty(data===null||data===void 0?void 0:data.work);},[data]);var handleButtonClick=useCallback(function(){return setSide(side===SIDES.FRONT?SIDES.BACK:SIDES.FRONT);},[side,setSide]);var title=useMemo(function(){var _data$work;var builder=[];var firstExperience=(_data$work=data.work)===null||_data$work===void 0?void 0:_data$work[0];if(firstExperience===null||firstExperience===void 0?void 0:firstExperience.position){builder.push(firstExperience.position);}if(builder.length){builder.push(/*#__PURE__*/_jsx(\"br\",{}));}if(firstExperience===null||firstExperience===void 0?void 0:firstExperience.name){builder.push(\"@\".concat(firstExperience.name));}else if(firstExperience===null||firstExperience===void 0?void 0:firstExperience.location){builder.push(\"@\".concat(firstExperience.location));}else if(firstExperience===null||firstExperience===void 0?void 0:firstExperience.stillEmployed){if(moment.isMoment(firstExperience===null||firstExperience===void 0?void 0:firstExperience.startDate)){builder.push(/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experience.front.title.since\",defaultMessage:\"Since {year}\",values:{year:firstExperience.startDate.year()}}));}else{builder.push(/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experience.front.title.stillEmployed\",defaultMessage:\"Still employed\"}));}}else if(!['endDate','startDate'].some(function(key){return!moment.isMoment(firstExperience===null||firstExperience===void 0?void 0:firstExperience[key]);})){var startDate=firstExperience.startDate;var endDate=firstExperience.endDate;var startYear=startDate.year();var endYear=endDate.year();var isSameYear=startYear===endYear;builder.push(/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experience.front.title.fromTo\",defaultMessage:\"From {start} to {end}\",values:{start:isSameYear?startDate.format('MMMM'):startYear,end:isSameYear?\"\".concat(endDate.format('MMMM'),\" \").concat(endYear):endYear}}));}return builder.map(function(value,index){return/*#__PURE__*/_jsx(Fragment,{children:value},\"builder_part_\".concat(index));});},[data.work]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProfileCardPaddedFront,{children:/*#__PURE__*/_jsx(CenterContentContainer,{classes:{container:classes.container},children:/*#__PURE__*/_jsx(Content,{hasWork:hasWork,title:title,handleAddButtonClick:handleAddButtonClick,classes:classes})})}),hasWork&&/*#__PURE__*/_jsx(ProfileCardActions,{children:/*#__PURE__*/_jsx(ProfileCardButton,{onClick:handleButtonClick,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experiences.front.action\",defaultMessage:\"See all experiences\"})})})]});};var Content=function Content(_ref2){var hasWork=_ref2.hasWork,title=_ref2.title,handleAddButtonClick=_ref2.handleAddButtonClick,classes=_ref2.classes;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isTypographyTruncated=_useState2[0],setIsTypographyTruncated=_useState2[1];var typographyReference=useRef();useEffect(function(){var element=typographyReference.current;setIsTypographyTruncated(false);if((element===null||element===void 0?void 0:element.offsetHeight)>(element===null||element===void 0?void 0:element.scrollHeight)-1){setIsTypographyTruncated(false);}},[]);if(hasWork){return/*#__PURE__*/_jsx(\"div\",{className:classes.textsContainer,children:/*#__PURE__*/_jsx(ProfileCardFrontTypography,{ref:typographyReference,classes:{container:cn(classes.typography,isTypographyTruncated&&classes.truncatedTypography)},children:title})});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.noWork,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h3\",classes:{container:classes.noWorkTypography},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experiences.front.noWork\",defaultMessage:\"Vous n'avez pas encore ajout\\xE9 d'exp\\xE9riences !\"})}),/*#__PURE__*/_jsx(NoDataButton,{handleAddButtonClick:handleAddButtonClick,classes:{container:classes.addButton},children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Experiences.noWork.buttonLabel\",defaultMessage:\"Ajouter une exp\\xE9rience\"})})]});};export var ExperiencesFront=/*#__PURE__*/memo(ExperiencesFrontComponent);","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/experiences/experiences_front/experiences_front.jsx"],"names":["React","Fragment","memo","useCallback","useEffect","useMemo","useRef","useState","cn","createUseStyles","FormattedMessage","moment","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardActions","ProfileCardButton","ProfileCardFrontTypography","useCardVariant","useCardSide","SIDES","styles","existsAndNotEmpty","NoDataButton","useStyles","ExperiencesFrontComponent","data","handleAddButtonClick","variant","side","setSide","classes","hasWork","work","handleButtonClick","FRONT","BACK","title","builder","firstExperience","position","push","length","name","location","stillEmployed","isMoment","startDate","year","some","key","endDate","startYear","endYear","isSameYear","start","format","end","map","value","index","container","Content","isTypographyTruncated","setIsTypographyTruncated","typographyReference","element","current","offsetHeight","scrollHeight","textsContainer","typography","truncatedTypography","noWork","noWorkTypography","addButton","ExperiencesFront"],"mappings":"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","sourcesContent":["import React, { Fragment, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nimport { Typography } from '@welovedevs/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\n\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nimport { styles } from './experiences_front_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\n\nconst useStyles = createUseStyles(styles);\n\nconst ExperiencesFrontComponent = ({ data, handleAddButtonClick }) => {\n    const [variant] = useCardVariant();\n    const [side, setSide] = useCardSide();\n    const classes = useStyles({ variant });\n\n    const hasWork = useMemo(() => existsAndNotEmpty(data?.work), [data]);\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    const title = useMemo(() => {\n        const builder = [];\n        const firstExperience = data.work?.[0];\n        if (firstExperience?.position) {\n            builder.push(firstExperience.position);\n        }\n        if (builder.length) {\n            builder.push(<br />);\n        }\n        if (firstExperience?.name) {\n            builder.push(`@${firstExperience.name}`);\n        } else if (firstExperience?.location) {\n            builder.push(`@${firstExperience.location}`);\n        } else if (firstExperience?.stillEmployed) {\n            if (moment.isMoment(firstExperience?.startDate)) {\n                builder.push(\n                    <FormattedMessage\n                        id=\"Experience.front.title.since\"\n                        defaultMessage=\"Since {year}\"\n                        values={{\n                            year: firstExperience.startDate.year()\n                        }}\n                    />\n                );\n            } else {\n                builder.push(\n                    <FormattedMessage id=\"Experience.front.title.stillEmployed\" defaultMessage=\"Still employed\" />\n                );\n            }\n        } else if (!['endDate', 'startDate'].some((key) => !moment.isMoment(firstExperience?.[key]))) {\n            const { startDate } = firstExperience;\n            const { endDate } = firstExperience;\n            const startYear = startDate.year();\n            const endYear = endDate.year();\n            const isSameYear = startYear === endYear;\n            builder.push(\n                <FormattedMessage\n                    id=\"Experience.front.title.fromTo\"\n                    defaultMessage=\"From {start} to {end}\"\n                    values={{\n                        start: isSameYear ? startDate.format('MMMM') : startYear,\n                        end: isSameYear ? `${endDate.format('MMMM')} ${endYear}` : endYear\n                    }}\n                />\n            );\n        }\n        return builder.map((value, index) => <Fragment key={`builder_part_${index}`}>{value}</Fragment>);\n    }, [data.work]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront>\n                <CenterContentContainer classes={{ container: classes.container }}>\n                    <Content {...{ hasWork, title, handleAddButtonClick, classes }} />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {hasWork && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"Experiences.front.action\" defaultMessage=\"See all experiences\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ hasWork, title, handleAddButtonClick, classes }) => {\n    const [isTypographyTruncated, setIsTypographyTruncated] = useState(true);\n    const typographyReference = useRef();\n\n    useEffect(() => {\n        const element = typographyReference.current;\n        setIsTypographyTruncated(false);\n        if (element?.offsetHeight > element?.scrollHeight - 1) {\n            setIsTypographyTruncated(false);\n        }\n    }, []);\n    if (hasWork) {\n        return (\n            <div className={classes.textsContainer}>\n                <ProfileCardFrontTypography\n                    ref={typographyReference}\n                    classes={{\n                        container: cn(classes.typography, isTypographyTruncated && classes.truncatedTypography)\n                    }}\n                >\n                    {title}\n                </ProfileCardFrontTypography>\n            </div>\n        );\n    }\n    return (\n        <div className={classes.noWork}>\n            <Typography variant=\"h3\" component=\"h3\" classes={{ container: classes.noWorkTypography }}>\n                <FormattedMessage\n                    id=\"Experiences.front.noWork\"\n                    defaultMessage=\"Vous n'avez pas encore ajouté d'expériences !\"\n                />\n            </Typography>\n            <NoDataButton\n                handleAddButtonClick={handleAddButtonClick}\n                classes={{\n                    container: classes.addButton\n                }}\n            >\n                <FormattedMessage id=\"Experiences.noWork.buttonLabel\" defaultMessage=\"Ajouter une expérience\" />\n            </NoDataButton>\n        </div>\n    );\n};\n\nexport const ExperiencesFront = memo(ExperiencesFrontComponent);\n"]},"metadata":{},"sourceType":"module"}
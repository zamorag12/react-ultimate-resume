{"ast":null,"code":"import { filterProps, createError } from '../utils';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_ref, getPluralRules, value) {\n  var locale = _ref.locale,\n      onError = _ref.onError;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!Intl.PluralRules) {\n    onError(createError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\"));\n  }\n\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(createError('Error formatting plural.', e));\n  }\n\n  return 'other';\n}","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/node_modules/react-intl/lib/formatters/plural.js"],"names":["filterProps","createError","PLURAL_FORMAT_OPTIONS","formatPlural","getPluralRules","value","locale","onError","options","Intl","PluralRules","filteredOptions","select","e"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,IAAMC,qBAAqB,GAAG,CAC1B,eAD0B,EAE1B,MAF0B,CAA9B;AAIA,OAAO,SAASC,YAAT,OAA2CC,cAA3C,EAA2DC,KAA3D,EAAgF;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACnF,MAAI,CAACC,IAAI,CAACC,WAAV,EAAuB;AACnBH,IAAAA,OAAO,CAACN,WAAW,qHAAZ,CAAP;AAGH;;AACD,MAAMU,eAAe,GAAGX,WAAW,CAACQ,OAAD,EAAUN,qBAAV,CAAnC;;AACA,MAAI;AACA,WAAOE,cAAc,CAACE,MAAD,EAASK,eAAT,CAAd,CAAwCC,MAAxC,CAA+CP,KAA/C,CAAP;AACH,GAFD,CAGA,OAAOQ,CAAP,EAAU;AACNN,IAAAA,OAAO,CAACN,WAAW,CAAC,0BAAD,EAA6BY,CAA7B,CAAZ,CAAP;AACH;;AACD,SAAO,OAAP;AACH","sourcesContent":["import { filterProps, createError } from '../utils';\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural({ locale, onError }, getPluralRules, value, options = {}) {\n    if (!Intl.PluralRules) {\n        onError(createError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`));\n    }\n    const filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useState}from'react';import{FormattedMessage}from'react-intl';import{createUseStyles}from'react-jss';import{useDebounce}from'use-debounce';import{Dialog,DialogActions,DialogContent}from'@material-ui/core';import{Button,TextField,Tooltip,Typography}from'@welovedevs/ui';import{DialogTitle}from'../dialog/dialog_title/dialog_title';import{LoadingSpinner}from'../loading_spinner/loading_spinner';import{useGiphyResults}from'../../hooks/giphy/use_giphy_results';import{styles}from'./search_gifs_dialog_styles';import{GifAuthorCredits}from'../gifs/gif_author_credits/gif_author_credits';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var SearchGifsDialogComponent=function SearchGifsDialogComponent(_ref){var open=_ref.open,onClose=_ref.onClose,onSelect=_ref.onSelect;var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useDebounce=useDebounce(query,500),_useDebounce2=_slicedToArray(_useDebounce,1),debouncedQuery=_useDebounce2[0];var handleInputChange=useCallback(function(event){return setQuery(event.target.value);},[]);return/*#__PURE__*/_jsxs(Dialog,{classes:{paper:classes.paper},open:open,onClose:onClose,children:[/*#__PURE__*/_jsxs(DialogTitle,{classes:{root:classes.title},children:[/*#__PURE__*/_jsx(FormattedMessage,{id:\"Gifs.searchdialog.title\",defaultMessage:\"Search gifs\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body3\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Gifs.searchdialog.poweredByGiphy\",defaultMessage:\"Powered by Giphy\"})})]}),/*#__PURE__*/_jsxs(DialogContent,{classes:{root:classes.content},children:[/*#__PURE__*/_jsx(TextField,{classes:{container:classes.textField},fullWidth:true,onChange:handleInputChange,value:query,variant:\"flat\",placeholder:\"Burrito, development, etc...\"}),/*#__PURE__*/_jsx(Results,{query:query,debouncedQuery:debouncedQuery,onSelect:onSelect,classes:classes})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:onClose,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.close\",defaultMessage:\"Close\"})})})]});};var Results=function Results(_ref2){var query=_ref2.query,debouncedQuery=_ref2.debouncedQuery,onSelect=_ref2.onSelect,classes=_ref2.classes;var _useGiphyResults=useGiphyResults(debouncedQuery,0,3*3),gifs=_useGiphyResults.gifs,loadingResults=_useGiphyResults.loading;var loading=useMemo(function(){return loadingResults||query&&query!==debouncedQuery;},[query,debouncedQuery,loadingResults]);var handleClick=useCallback(function(result){return function(){if(typeof onSelect!=='function'){return;}onSelect(_objectSpread(_objectSpread({},result),{},{query:query}));};},[onSelect,query]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.results,children:[loading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),!loading&&gifs&&debouncedQuery&&gifs.map(function(payload){return/*#__PURE__*/_jsx(Tooltip,{title:\"Select this gif\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:classes.imageContainer,onClick:handleClick(payload),children:[/*#__PURE__*/_jsx(\"img\",{className:classes.image,src:payload.url,alt:payload.title}),payload.user&&/*#__PURE__*/_jsx(GifAuthorCredits,{user:payload.user})]},\"result_\".concat(payload.id))},\"giphy_item_\".concat(payload.id));})]});};export var SearchGifsDialog=SearchGifsDialogComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/search_gif_dialog/search_gifs_dialog.tsx"],"names":["React","useCallback","useMemo","useState","FormattedMessage","createUseStyles","useDebounce","Dialog","DialogActions","DialogContent","Button","TextField","Tooltip","Typography","DialogTitle","LoadingSpinner","useGiphyResults","styles","GifAuthorCredits","useStyles","SearchGifsDialogComponent","open","onClose","onSelect","classes","query","setQuery","debouncedQuery","handleInputChange","event","target","value","paper","root","title","content","container","textField","Results","gifs","loadingResults","loading","handleClick","result","results","map","payload","imageContainer","image","url","user","id","SearchGifsDialog"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,QAAtC,KAAsD,OAAtD,CAEA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,OAASC,WAAT,KAA4B,cAA5B,CAEA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,aAAhC,KAAkE,mBAAlE,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,OAA5B,CAAqCC,UAArC,KAAuD,gBAAvD,CAEA,OAASC,WAAT,KAA4B,qCAA5B,CACA,OAASC,cAAT,KAA+B,oCAA/B,CAEA,OAASC,eAAT,KAAgC,qCAAhC,CACA,OAASC,MAAT,KAAuB,6BAAvB,CACA,OAASC,gBAAT,KAAiC,+CAAjC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGd,eAAe,CAACY,MAAD,CAAjC,CAWA,GAAMG,CAAAA,yBAEL,CAAG,QAFEA,CAAAA,yBAEF,MAAiC,IAA9BC,CAAAA,IAA8B,MAA9BA,IAA8B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CACjC,GAAMC,CAAAA,OAAY,CAAGL,SAAS,EAA9B,CADiC,cAEPhB,QAAQ,CAAC,EAAD,CAFD,wCAE1BsB,KAF0B,eAEnBC,QAFmB,gCAGRpB,WAAW,CAACmB,KAAD,CAAQ,GAAR,CAHH,8CAG1BE,cAH0B,kBAKjC,GAAMC,CAAAA,iBAAiB,CAAG3B,WAAW,CAAC,SAAC4B,KAAD,QAAWH,CAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,EAAD,CAA0C,EAA1C,CAArC,CAEA,mBACI,MAAC,MAAD,EACI,OAAO,CAAE,CACLC,KAAK,CAAER,OAAO,CAACQ,KADV,CADb,CAII,IAAI,CAAEX,IAJV,CAKI,OAAO,CAAEC,OALb,wBAOI,MAAC,WAAD,EAAa,OAAO,CAAE,CAAEW,IAAI,CAAET,OAAO,CAACU,KAAhB,CAAtB,wBACI,KAAC,gBAAD,EAAkB,EAAE,CAAC,yBAArB,CAA+C,cAAc,CAAC,aAA9D,EADJ,cAEI,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,uBACI,KAAC,gBAAD,EAAkB,EAAE,CAAC,kCAArB,CAAwD,cAAc,CAAC,kBAAvE,EADJ,EAFJ,GAPJ,cAaI,MAAC,aAAD,EACI,OAAO,CAAE,CACLD,IAAI,CAAET,OAAO,CAACW,OADT,CADb,wBAKI,KAAC,SAAD,EACI,OAAO,CAAE,CAAEC,SAAS,CAAEZ,OAAO,CAACa,SAArB,CADb,CAEI,SAAS,KAFb,CAGI,QAAQ,CAAET,iBAHd,CAII,KAAK,CAAEH,KAJX,CAKI,OAAO,CAAC,MALZ,CAMI,WAAW,CAAC,8BANhB,EALJ,cAaI,KAAC,OAAD,EAAS,KAAK,CAAEA,KAAhB,CAAuB,cAAc,CAAEE,cAAvC,CAAuD,QAAQ,CAAEJ,QAAjE,CAA2E,OAAO,CAAEC,OAApF,EAbJ,GAbJ,cA4BI,KAAC,aAAD,wBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,OAAO,CAAEF,OAA9B,uBACI,KAAC,gBAAD,EAAkB,EAAE,CAAC,iBAArB,CAAuC,cAAc,CAAC,OAAtD,EADJ,EADJ,EA5BJ,GADJ,CAoCH,CA7CD,CA+CA,GAAMgB,CAAAA,OAKJ,CAAG,QALCA,CAAAA,OAKD,OAAkD,IAA/Cb,CAAAA,KAA+C,OAA/CA,KAA+C,CAAxCE,cAAwC,OAAxCA,cAAwC,CAAxBJ,QAAwB,OAAxBA,QAAwB,CAAdC,OAAc,OAAdA,OAAc,sBACTR,eAAe,CAACW,cAAD,CAAiB,CAAjB,CAAoB,EAAI,CAAxB,CADN,CAC3CY,IAD2C,kBAC3CA,IAD2C,CAC5BC,cAD4B,kBACrCC,OADqC,CAGnD,GAAMA,CAAAA,OAAO,CAAGvC,OAAO,CAAC,iBAAMsC,CAAAA,cAAc,EAAKf,KAAK,EAAIA,KAAK,GAAKE,cAA5C,EAAD,CAA8D,CACjFF,KADiF,CAEjFE,cAFiF,CAGjFa,cAHiF,CAA9D,CAAvB,CAMA,GAAME,CAAAA,WAAW,CAAGzC,WAAW,CAC3B,SAAC0C,MAAD,QAA+B,WAAM,CACjC,GAAI,MAAOpB,CAAAA,QAAP,GAAoB,UAAxB,CAAoC,CAChC,OACH,CACDA,QAAQ,gCAAMoB,MAAN,MAAclB,KAAK,CAALA,KAAd,GAAR,CACH,CALD,EAD2B,CAO3B,CAACF,QAAD,CAAWE,KAAX,CAP2B,CAA/B,CAUA,mBACI,aAAK,SAAS,CAAED,OAAO,CAACoB,OAAxB,WACKH,OAAO,eAAI,KAAC,cAAD,IADhB,CAEK,CAACA,OAAD,EACGF,IADH,EAEGZ,cAFH,EAGGY,IAAI,CAACM,GAAL,CAAS,SAACC,OAAD,qBACL,KAAC,OAAD,EAA0C,KAAK,CAAC,iBAAhD,uBACI,gBAEI,IAAI,CAAC,QAFT,CAGI,SAAS,CAAEtB,OAAO,CAACuB,cAHvB,CAII,OAAO,CAAEL,WAAW,CAACI,OAAD,CAJxB,wBAMI,YAAK,SAAS,CAAEtB,OAAO,CAACwB,KAAxB,CAA+B,GAAG,CAAEF,OAAO,CAACG,GAA5C,CAAiD,GAAG,CAAEH,OAAO,CAACZ,KAA9D,EANJ,CAOKY,OAAO,CAACI,IAAR,eAAgB,KAAC,gBAAD,EAAkB,IAAI,CAAEJ,OAAO,CAACI,IAAhC,EAPrB,oBACmBJ,OAAO,CAACK,EAD3B,EADJ,uBAA4BL,OAAO,CAACK,EAApC,EADK,EAAT,CALR,GADJ,CAqBH,CA7CD,CA+CA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGhC,yBAAzB","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { useDebounce } from 'use-debounce';\n\nimport { Dialog, DialogActions, DialogContent, DialogProps } from '@material-ui/core';\nimport { Button, TextField, Tooltip, Typography } from '@welovedevs/ui';\n\nimport { DialogTitle } from '../dialog/dialog_title/dialog_title';\nimport { LoadingSpinner } from '../loading_spinner/loading_spinner';\n\nimport { useGiphyResults } from '../../hooks/giphy/use_giphy_results';\nimport { styles } from './search_gifs_dialog_styles';\nimport { GifAuthorCredits } from '../gifs/gif_author_credits/gif_author_credits';\n\nconst useStyles = createUseStyles(styles);\n\ntype GiphySearchResult = {\n    id: string;\n    url: string;\n    title: string;\n    user?: {\n        name: string;\n        profileUrl: string;\n    };\n};\nconst SearchGifsDialogComponent: React.FC<\n    { onSelect: (payload: GiphySearchResult & { query: string }) => any } & DialogProps\n> = ({ open, onClose, onSelect }) => {\n    const classes: any = useStyles();\n    const [query, setQuery] = useState('');\n    const [debouncedQuery] = useDebounce(query, 500);\n\n    const handleInputChange = useCallback((event) => setQuery(event.target.value), []);\n\n    return (\n        <Dialog\n            classes={{\n                paper: classes.paper\n            }}\n            open={open}\n            onClose={onClose}\n        >\n            <DialogTitle classes={{ root: classes.title }}>\n                <FormattedMessage id=\"Gifs.searchdialog.title\" defaultMessage=\"Search gifs\" />\n                <Typography variant=\"body3\">\n                    <FormattedMessage id=\"Gifs.searchdialog.poweredByGiphy\" defaultMessage=\"Powered by Giphy\" />\n                </Typography>\n            </DialogTitle>\n            <DialogContent\n                classes={{\n                    root: classes.content\n                }}\n            >\n                <TextField\n                    classes={{ container: classes.textField }}\n                    fullWidth\n                    onChange={handleInputChange}\n                    value={query}\n                    variant=\"flat\"\n                    placeholder=\"Burrito, development, etc...\"\n                />\n                <Results query={query} debouncedQuery={debouncedQuery} onSelect={onSelect} classes={classes} />\n            </DialogContent>\n            <DialogActions>\n                <Button size=\"small\" onClick={onClose as any}>\n                    <FormattedMessage id=\"Main.lang.close\" defaultMessage=\"Close\" />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst Results: React.FC<{\n    query: string;\n    debouncedQuery: string;\n    onSelect: (payload: GiphySearchResult & { query: string }) => any;\n    classes: any;\n}> = ({ query, debouncedQuery, onSelect, classes }) => {\n    const { gifs, loading: loadingResults } = useGiphyResults(debouncedQuery, 0, 3 * 3);\n\n    const loading = useMemo(() => loadingResults || (query && query !== debouncedQuery), [\n        query,\n        debouncedQuery,\n        loadingResults\n    ]);\n\n    const handleClick = useCallback(\n        (result: GiphySearchResult) => () => {\n            if (typeof onSelect !== 'function') {\n                return;\n            }\n            onSelect({ ...result, query });\n        },\n        [onSelect, query]\n    );\n\n    return (\n        <div className={classes.results}>\n            {loading && <LoadingSpinner />}\n            {!loading &&\n                gifs &&\n                debouncedQuery &&\n                gifs.map((payload) => (\n                    <Tooltip key={`giphy_item_${payload.id}`} title=\"Select this gif\">\n                        <button\n                            key={`result_${payload.id}`}\n                            type=\"button\"\n                            className={classes.imageContainer}\n                            onClick={handleClick(payload)}\n                        >\n                            <img className={classes.image} src={payload.url} alt={payload.title} />\n                            {payload.user && <GifAuthorCredits user={payload.user} />}\n                        </button>\n                    </Tooltip>\n                ))}\n        </div>\n    );\n};\n\nexport const SearchGifsDialog = SearchGifsDialogComponent;\n"]},"metadata":{},"sourceType":"module"}
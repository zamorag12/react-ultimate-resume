{"ast":null,"code":"import _objectSpread from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useMemo}from'react';import{ProfileCard}from'../../../commons/profile_card/profile_card';import{GifsFront}from'./gifs_front/gifs_front';import{GifsBack}from'./gifs_back/gifs_back';import{GifsEditDialog}from'./gifs_edit_dialog/gifs_edit_dialog';import{interestsValidator,validateInterestsComplete}from'./data/validator';import{mapInterestsFromJsonResume,mapInterestsToJsonResume}from'./data/mapping';import{DeveloperProfileContext}from'../../../../utils/context/contexts';import{SIDES}from'../../../commons/profile_card/profile_card_side/side';import{useMode}from'../../../hooks/use_mode';import{jsx as _jsx}from\"react/jsx-runtime\";var GifsCardComponent=function GifsCardComponent(_ref){var variant=_ref.variant,side=_ref.side;var _useMode=useMode(),_useMode2=_slicedToArray(_useMode,1),mode=_useMode2[0];var _useContext=useContext(DeveloperProfileContext),data=_useContext.data,isEditing=_useContext.isEditing,onEdit=_useContext.onEdit;var mappedData=useMemo(function(){return mapInterestsFromJsonResume(data);},[data]);var onDialogEdited=useCallback(function(editedData){onEdit(mapInterestsToJsonResume(editedData));},[onEdit]);var isComplete=useMemo(function(){return validateInterestsComplete(mappedData);},[mappedData]);var currentSide=useMemo(function(){if(!isComplete&&!isEditing){return SIDES.FRONT;}return side;},[side,isComplete,isEditing]);if(!isComplete&&mode!=='edit'){return null;}return/*#__PURE__*/_jsx(ProfileCard,{kind:\"gifs\",isEditingProfile:isEditing,isComplete:isComplete,data:mappedData,sides:{front:function front(props){return/*#__PURE__*/_jsx(GifsFront,_objectSpread({},props));},back:function back(props){return/*#__PURE__*/_jsx(GifsBack,_objectSpread({},props));}},editDialog:{component:GifsEditDialog,validationSchema:interestsValidator,onEdit:onDialogEdited},variant:variant,side:currentSide});};export var GifsCard=GifsCardComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/cards/cards_types/gifs/gifs_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","GifsFront","GifsBack","GifsEditDialog","interestsValidator","validateInterestsComplete","mapInterestsFromJsonResume","mapInterestsToJsonResume","DeveloperProfileContext","SIDES","useMode","GifsCardComponent","variant","side","mode","data","isEditing","onEdit","mappedData","onDialogEdited","editedData","isComplete","currentSide","FRONT","front","props","back","component","validationSchema","GifsCard"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,OAAzC,KAAwD,OAAxD,CAEA,OAASC,WAAT,KAA4B,4CAA5B,CACA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,cAAT,KAA+B,qCAA/B,CAEA,OAASC,kBAAT,CAA6BC,yBAA7B,KAA8D,kBAA9D,CAEA,OAASC,0BAAT,CAAqCC,wBAArC,KAAqE,gBAArE,CACA,OAASC,uBAAT,KAAwC,oCAAxC,CACA,OAASC,KAAT,KAAsB,sDAAtB,CACA,OAASC,OAAT,KAAwB,yBAAxB,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAuB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,cAC9BH,OAAO,EADuB,sCACtCI,IADsC,8BAEThB,UAAU,CAACU,uBAAD,CAFD,CAErCO,IAFqC,aAErCA,IAFqC,CAE/BC,SAF+B,aAE/BA,SAF+B,CAEpBC,MAFoB,aAEpBA,MAFoB,CAG7C,GAAMC,CAAAA,UAAU,CAAGnB,OAAO,CAAC,iBAAMO,CAAAA,0BAA0B,CAACS,IAAD,CAAhC,EAAD,CAAyC,CAACA,IAAD,CAAzC,CAA1B,CAEA,GAAMI,CAAAA,cAAc,CAAGtB,WAAW,CAC9B,SAACuB,UAAD,CAAgB,CACZH,MAAM,CAACV,wBAAwB,CAACa,UAAD,CAAzB,CAAN,CACH,CAH6B,CAI9B,CAACH,MAAD,CAJ8B,CAAlC,CAOA,GAAMI,CAAAA,UAAU,CAAGtB,OAAO,CAAC,iBAAMM,CAAAA,yBAAyB,CAACa,UAAD,CAA/B,EAAD,CAA8C,CAACA,UAAD,CAA9C,CAA1B,CAEA,GAAMI,CAAAA,WAAW,CAAGvB,OAAO,CAAC,UAAM,CAC9B,GAAI,CAACsB,UAAD,EAAe,CAACL,SAApB,CAA+B,CAC3B,MAAOP,CAAAA,KAAK,CAACc,KAAb,CACH,CACD,MAAOV,CAAAA,IAAP,CACH,CAL0B,CAKxB,CAACA,IAAD,CAAOQ,UAAP,CAAmBL,SAAnB,CALwB,CAA3B,CAOA,GAAI,CAACK,UAAD,EAAeP,IAAI,GAAK,MAA5B,CAAoC,CAChC,MAAO,KAAP,CACH,CACD,mBACI,KAAC,WAAD,EACI,IAAI,CAAC,MADT,CAEI,gBAAgB,CAAEE,SAFtB,CAGI,UAAU,CAAEK,UAHhB,CAII,IAAI,CAAEH,UAJV,CAKI,KAAK,CAAE,CACHM,KAAK,CAAE,eAACC,KAAD,qBAAW,KAAC,SAAD,kBAAeA,KAAf,EAAX,EADJ,CAEHC,IAAI,CAAE,cAACD,KAAD,qBAAW,KAAC,QAAD,kBAAcA,KAAd,EAAX,EAFH,CALX,CASI,UAAU,CAAE,CACRE,SAAS,CAAExB,cADH,CAERyB,gBAAgB,CAAExB,kBAFV,CAGRa,MAAM,CAAEE,cAHA,CAThB,CAcI,OAAO,CAAEP,OAdb,CAeI,IAAI,CAAEU,WAfV,EADJ,CAmBH,CA3CD,CA6CA,MAAO,IAAMO,CAAAA,QAAQ,CAAGlB,iBAAjB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { GifsFront } from './gifs_front/gifs_front';\nimport { GifsBack } from './gifs_back/gifs_back';\nimport { GifsEditDialog } from './gifs_edit_dialog/gifs_edit_dialog';\n\nimport { interestsValidator, validateInterestsComplete } from './data/validator';\n\nimport { mapInterestsFromJsonResume, mapInterestsToJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst GifsCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing, onEdit } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapInterestsFromJsonResume(data), [data]);\n\n    const onDialogEdited = useCallback(\n        (editedData) => {\n            onEdit(mapInterestsToJsonResume(editedData));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateInterestsComplete(mappedData), [mappedData]);\n\n    const currentSide = useMemo(() => {\n        if (!isComplete && !isEditing) {\n            return SIDES.FRONT;\n        }\n        return side;\n    }, [side, isComplete, isEditing]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n    return (\n        <ProfileCard\n            kind=\"gifs\"\n            isEditingProfile={isEditing}\n            isComplete={isComplete}\n            data={mappedData}\n            sides={{\n                front: (props) => <GifsFront {...props} />,\n                back: (props) => <GifsBack {...props} />\n            }}\n            editDialog={{\n                component: GifsEditDialog,\n                validationSchema: interestsValidator,\n                onEdit: onDialogEdited\n            }}\n            variant={variant}\n            side={currentSide}\n        />\n    );\n};\n\nexport const GifsCard = GifsCardComponent;\n"]},"metadata":{},"sourceType":"module"}
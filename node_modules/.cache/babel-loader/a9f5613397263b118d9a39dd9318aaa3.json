{"ast":null,"code":"import _defineProperty from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{createScreenWidthMediaQuery,getColorsFromCardVariant,getHexFromPaletteColor}from'../../../../utils/styles/styles_utils';export var styles=function styles(theme){var screenSizes=theme.screenSizes,spacing=theme.miscellaneous.spacing;return{container:function container(_ref){var variant=_ref.variant,overrideColor=_ref.overrideColor;return _defineProperty({color:getHexFromPaletteColor(theme,overrideColor||getColorsFromCardVariant(theme,variant).color),fontWeight:700,fontSize:64,lineHeight:1.1,margin:spacing*3},createScreenWidthMediaQuery('max-width',screenSizes.small),{margin:spacing*2});}};};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/profile_card/profile_card_front_typography/profile_card_front_typography_styles.js"],"names":["createScreenWidthMediaQuery","getColorsFromCardVariant","getHexFromPaletteColor","styles","theme","screenSizes","spacing","miscellaneous","container","variant","overrideColor","color","fontWeight","fontSize","lineHeight","margin","small"],"mappings":"2KAAA,OACIA,2BADJ,CAEIC,wBAFJ,CAGIC,sBAHJ,KAIO,uCAJP,CAMA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,IAEzBC,CAAAA,WAFyB,CAIzBD,KAJyB,CAEzBC,WAFyB,CAGRC,OAHQ,CAIzBF,KAJyB,CAGzBG,aAHyB,CAGRD,OAHQ,CAK7B,MAAO,CACHE,SAAS,CAAE,4BAAGC,CAAAA,OAAH,MAAGA,OAAH,CAAYC,aAAZ,MAAYA,aAAZ,yBACPC,KAAK,CAAET,sBAAsB,CAACE,KAAD,CAAQM,aAAa,EAAIT,wBAAwB,CAACG,KAAD,CAAQK,OAAR,CAAxB,CAAyCE,KAAlE,CADtB,CAEPC,UAAU,CAAE,GAFL,CAGPC,QAAQ,CAAE,EAHH,CAIPC,UAAU,CAAE,GAJL,CAKPC,MAAM,CAAET,OAAO,CAAG,CALX,EAMNN,2BAA2B,CAAC,WAAD,CAAcK,WAAW,CAACW,KAA1B,CANrB,CAMwD,CAC3DD,MAAM,CAAET,OAAO,CAAG,CADyC,CANxD,GADR,CAAP,CAYH,CAjBM","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    getColorsFromCardVariant,\n    getHexFromPaletteColor\n} from '../../../../utils/styles/styles_utils';\n\nexport const styles = (theme) => {\n    const {\n        screenSizes,\n        miscellaneous: { spacing }\n    } = theme;\n    return {\n        container: ({ variant, overrideColor }) => ({\n            color: getHexFromPaletteColor(theme, overrideColor || getColorsFromCardVariant(theme, variant).color),\n            fontWeight: 700,\n            fontSize: 64,\n            lineHeight: 1.1,\n            margin: spacing * 3,\n            [createScreenWidthMediaQuery('max-width', screenSizes.small)]: {\n                margin: spacing * 2\n            }\n        })\n    };\n};\n"]},"metadata":{},"sourceType":"module"}
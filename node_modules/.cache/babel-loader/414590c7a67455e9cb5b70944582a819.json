{"ast":null,"code":"import _slicedToArray from\"/home/gzamora/Documents/test/react-ultimate-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useIntl}from'react-intl';import{Button}from'@welovedevs/ui';import{useMediaQuery}from'@material-ui/core';import{createUseStyles}from'react-jss';import{Twemoji}from'react-emoji-render';import{useCallbackOpen}from'../../../hooks/use_callback_open';import{CustomizeDialog}from'../customize_dialog/customize_dialog';import{translations}from'./customize_button_translations';import{styles}from'./customize_button_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);export var CustomizeButton=function CustomizeButton(_ref){var customizationOptions=_ref.customizationOptions;var _useIntl=useIntl(),formatMessage=_useIntl.formatMessage;var _useCallbackOpen=useCallbackOpen(),_useCallbackOpen2=_slicedToArray(_useCallbackOpen,3),dialogOpen=_useCallbackOpen2[0],open=_useCallbackOpen2[1],close=_useCallbackOpen2[2];var classes=useStyles();var isMobile=useMediaQuery('(max-width:500px)',{defaultMatches:true});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CustomizeDialog,{open:dialogOpen,onClose:close,customizationOptions:customizationOptions}),/*#__PURE__*/_jsxs(Button,{variant:\"outlined\",color:\"light\",onClick:open,children:[/*#__PURE__*/_jsx(Twemoji,{svg:true,text:\"\\uD83C\\uDFA8\",className:classes.icon}),!isMobile&&formatMessage(translations.customize)]})]});};","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/banner/user_actions_row/customize_button/customize_button.jsx"],"names":["React","useIntl","Button","useMediaQuery","createUseStyles","Twemoji","useCallbackOpen","CustomizeDialog","translations","styles","useStyles","CustomizeButton","customizationOptions","formatMessage","dialogOpen","open","close","classes","isMobile","defaultMatches","icon","customize"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,YAAxB,CAEA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OAASC,eAAT,KAAgC,WAAhC,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,OAASC,eAAT,KAAgC,kCAAhC,CACA,OAASC,eAAT,KAAgC,sCAAhC,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,MAAT,KAAuB,2BAAvB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGN,eAAe,CAACK,MAAD,CAAjC,CACA,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAA8B,IAA3BC,CAAAA,oBAA2B,MAA3BA,oBAA2B,cAC/BX,OAAO,EADwB,CACjDY,aADiD,UACjDA,aADiD,sBAEvBP,eAAe,EAFQ,sDAElDQ,UAFkD,sBAEtCC,IAFsC,sBAEhCC,KAFgC,sBAGzD,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CACA,GAAMQ,CAAAA,QAAQ,CAAGf,aAAa,CAAC,mBAAD,CAAsB,CAAEgB,cAAc,CAAE,IAAlB,CAAtB,CAA9B,CAEA,mBACI,wCACI,KAAC,eAAD,EAAiB,IAAI,CAAEL,UAAvB,CAAmC,OAAO,CAAEE,KAA5C,CAAmD,oBAAoB,CAAEJ,oBAAzE,EADJ,cAEI,MAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAC,OAAjC,CAAyC,OAAO,CAAEG,IAAlD,wBACI,KAAC,OAAD,EAAS,GAAG,KAAZ,CAAa,IAAI,CAAC,cAAlB,CAAuB,SAAS,CAAEE,OAAO,CAACG,IAA1C,EADJ,CAEK,CAACF,QAAD,EAAaL,aAAa,CAACL,YAAY,CAACa,SAAd,CAF/B,GAFJ,GADJ,CASH,CAfM","sourcesContent":["import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@welovedevs/ui';\nimport { useMediaQuery } from '@material-ui/core';\nimport { createUseStyles } from 'react-jss';\nimport { Twemoji } from 'react-emoji-render';\nimport { useCallbackOpen } from '../../../hooks/use_callback_open';\nimport { CustomizeDialog } from '../customize_dialog/customize_dialog';\nimport { translations } from './customize_button_translations';\nimport { styles } from './customize_button_styles';\n\nconst useStyles = createUseStyles(styles);\nexport const CustomizeButton = ({ customizationOptions }) => {\n    const { formatMessage } = useIntl();\n    const [dialogOpen, open, close] = useCallbackOpen();\n    const classes = useStyles();\n    const isMobile = useMediaQuery('(max-width:500px)', { defaultMatches: true });\n\n    return (\n        <>\n            <CustomizeDialog open={dialogOpen} onClose={close} customizationOptions={customizationOptions} />\n            <Button variant=\"outlined\" color=\"light\" onClick={open}>\n                <Twemoji svg text=\"ðŸŽ¨\" className={classes.icon} />\n                {!isMobile && formatMessage(translations.customize)}\n            </Button>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
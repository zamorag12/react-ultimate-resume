{"ast":null,"code":"import React,{useCallback}from'react';import cn from'classnames';import{FormattedMessage}from'react-intl';import{createUseStyles,useTheme}from'react-jss';import{Formik,useFormikContext}from'formik';import useMediaQuery from'@material-ui/core/useMediaQuery';import{Button,Tooltip}from'@welovedevs/ui';import{Dialog,DialogActions,DialogContent}from'@material-ui/core';import{DialogTitle}from'../dialog/dialog_title/dialog_title';import{styles}from'./edit_dialog_styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=createUseStyles(styles);var EditDialogComponent=function EditDialogComponent(_ref){var open=_ref.open,onClose=_ref.onClose,fullScreen=_ref.fullScreen,data=_ref.data,onEdit=_ref.onEdit,children=_ref.children,_ref$title=_ref.title,title=_ref$title===void 0?'✏️':_ref$title,validationSchema=_ref.validationSchema,isEditing=_ref.isEditing,_ref$classes=_ref.classes,receivedClasses=_ref$classes===void 0?{}:_ref$classes;var classes=useStyles();var theme=useTheme();var isMobile=useMediaQuery(\"(max-width: \".concat(theme.screenSizes.small,\"px)\"));return/*#__PURE__*/_jsx(Dialog,{fullScreen:fullScreen||isMobile,classes:{paper:cn(classes.paper,receivedClasses.paper,fullScreen&&classes.fullScreen)},open:open,onClose:onClose,children:/*#__PURE__*/_jsx(Formik,{validateOnChange:false,initialValues:data,onSubmit:function onSubmit(newValues){return onEdit(newValues);},validationSchema:validationSchema,children:/*#__PURE__*/_jsx(TitleContent,{title:title,fullScreen:fullScreen,isMobile:isMobile,onClose:onClose,classes:classes,receivedClasses:receivedClasses,isEditing:isEditing,children:children})})});};var TitleContent=function TitleContent(_ref2){var title=_ref2.title,fullScreen=_ref2.fullScreen,isMobile=_ref2.isMobile,onClose=_ref2.onClose,children=_ref2.children,classes=_ref2.classes,receivedClasses=_ref2.receivedClasses,isEditing=_ref2.isEditing;var _useFormikContext=useFormikContext(),handleSubmit=_useFormikContext.handleSubmit,setFieldValue=_useFormikContext.setFieldValue,values=_useFormikContext.values;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.titleContainer,children:[/*#__PURE__*/_jsx(DialogTitle,{children:title}),fullScreen&&!isMobile&&/*#__PURE__*/_jsx(Actions,{fullScreen:true,onClose:onClose,handleSubmit:handleSubmit,classes:classes,receivedClasses:receivedClasses,isEditing:isEditing})]}),/*#__PURE__*/_jsx(Content,{onClose:onClose,handleSubmit:handleSubmit,setFieldValue:setFieldValue,values:values,fullScreen:fullScreen,isMobile:isMobile,classes:classes,receivedClasses:receivedClasses,isEditing:isEditing,children:children})]});};var Content=function Content(_ref3){var children=_ref3.children,onClose=_ref3.onClose,handleSubmit=_ref3.handleSubmit,setFieldValue=_ref3.setFieldValue,values=_ref3.values,fullScreen=_ref3.fullScreen,isMobile=_ref3.isMobile,classes=_ref3.classes,receivedClasses=_ref3.receivedClasses,isEditing=_ref3.isEditing;var handleValueChange=useCallback(function(name){return function(value){console.debug(\"[Edit Dialog] Setting field \".concat(name,\" to value.\"),{value:value});return setFieldValue(name,value);};},[setFieldValue]);var toggleValue=useCallback(function(name){return function(){return setFieldValue(name,!values[name]);};},[setFieldValue,values]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogContent,{classes:{root:cn(classes.content,receivedClasses.content)},children:children({handleValueChange:handleValueChange,toggleValue:toggleValue,fullScreen:fullScreen,isMobile:isMobile})}),(!fullScreen||isMobile)&&/*#__PURE__*/_jsx(Actions,{onClose:onClose,handleSubmit:handleSubmit,classes:classes,receivedClasses:receivedClasses,isEditing:isEditing})]});};var Actions=function Actions(_ref4){var onClose=_ref4.onClose,handleSubmit=_ref4.handleSubmit,fullScreen=_ref4.fullScreen,classes=_ref4.classes,receivedClasses=_ref4.receivedClasses,isEditing=_ref4.isEditing;return/*#__PURE__*/_jsxs(DialogActions,{classes:{root:cn(classes.actions,receivedClasses.actions)},children:[/*#__PURE__*/_jsx(Tooltip,{title:/*#__PURE__*/_jsx(FormattedMessage,{id:\"EditDialog.close.tooltip\",defaultMessage:\"Any modification won't be saved!\"}),children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:onClose,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.close\",defaultMessage:\"Close\"})})}),isEditing&&/*#__PURE__*/_jsx(Button,{variant:fullScreen?'contained':'text',type:\"submit\",size:\"small\",color:\"primary\",onClick:handleSubmit,children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"Main.lang.save\",defaultMessage:\"Save\"})})]});};export var EditDialog=EditDialogComponent;","map":{"version":3,"sources":["/home/gzamora/Documents/test/react-ultimate-resume/src/package/components/commons/edit_dialog/edit_dialog.jsx"],"names":["React","useCallback","cn","FormattedMessage","createUseStyles","useTheme","Formik","useFormikContext","useMediaQuery","Button","Tooltip","Dialog","DialogActions","DialogContent","DialogTitle","styles","useStyles","EditDialogComponent","open","onClose","fullScreen","data","onEdit","children","title","validationSchema","isEditing","classes","receivedClasses","theme","isMobile","screenSizes","small","paper","newValues","TitleContent","handleSubmit","setFieldValue","values","titleContainer","Content","handleValueChange","name","value","console","debug","toggleValue","root","content","Actions","actions","EditDialog"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\n\nimport cn from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Formik, useFormikContext } from 'formik';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Button, Tooltip } from '@welovedevs/ui';\n\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core';\n\nimport { DialogTitle } from '../dialog/dialog_title/dialog_title';\n\nimport { styles } from './edit_dialog_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst EditDialogComponent = ({\n    open,\n    onClose,\n    fullScreen,\n    data,\n    onEdit,\n    children,\n    title = '✏️',\n    validationSchema,\n    isEditing,\n    classes: receivedClasses = {}\n}) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n\n    return (\n        <Dialog\n            fullScreen={fullScreen || isMobile}\n            classes={{\n                paper: cn(classes.paper, receivedClasses.paper, fullScreen && classes.fullScreen)\n            }}\n            open={open}\n            onClose={onClose}\n        >\n            <Formik\n                validateOnChange={false}\n                initialValues={data}\n                onSubmit={(newValues) => onEdit(newValues)}\n                validationSchema={validationSchema}\n            >\n                <TitleContent\n                    title={title}\n                    fullScreen={fullScreen}\n                    isMobile={isMobile}\n                    onClose={onClose}\n                    classes={classes}\n                    receivedClasses={receivedClasses}\n                    isEditing={isEditing}\n                >\n                    {children}\n                </TitleContent>\n            </Formik>\n        </Dialog>\n    );\n};\n\nconst TitleContent = ({ title, fullScreen, isMobile, onClose, children, classes, receivedClasses, isEditing }) => {\n    const { handleSubmit, setFieldValue, values } = useFormikContext();\n    return (\n        <>\n            <div className={classes.titleContainer}>\n                <DialogTitle>{title}</DialogTitle>\n                {fullScreen && !isMobile && (\n                    <Actions\n                        fullScreen\n                        onClose={onClose}\n                        handleSubmit={handleSubmit}\n                        classes={classes}\n                        receivedClasses={receivedClasses}\n                        isEditing={isEditing}\n                    />\n                )}\n            </div>\n            <Content\n                onClose={onClose}\n                handleSubmit={handleSubmit}\n                setFieldValue={setFieldValue}\n                values={values}\n                fullScreen={fullScreen}\n                isMobile={isMobile}\n                classes={classes}\n                receivedClasses={receivedClasses}\n                isEditing={isEditing}\n            >\n                {children}\n            </Content>\n        </>\n    );\n};\n\nconst Content = ({\n    children,\n    onClose,\n    handleSubmit,\n    setFieldValue,\n    values,\n    fullScreen,\n    isMobile,\n    classes,\n    receivedClasses,\n    isEditing\n}) => {\n    const handleValueChange = useCallback(\n        (name) => (value) => {\n            console.debug(`[Edit Dialog] Setting field ${name} to value.`, { value });\n            return setFieldValue(name, value);\n        },\n        [setFieldValue]\n    );\n    const toggleValue = useCallback((name) => () => setFieldValue(name, !values[name]), [setFieldValue, values]);\n\n    return (\n        <>\n            <DialogContent\n                classes={{\n                    root: cn(classes.content, receivedClasses.content)\n                }}\n            >\n                {children({ handleValueChange, toggleValue, fullScreen, isMobile })}\n            </DialogContent>\n            {(!fullScreen || isMobile) && (\n                <Actions\n                    onClose={onClose}\n                    handleSubmit={handleSubmit}\n                    classes={classes}\n                    receivedClasses={receivedClasses}\n                    isEditing={isEditing}\n                />\n            )}\n        </>\n    );\n};\n\nconst Actions = ({ onClose, handleSubmit, fullScreen, classes, receivedClasses, isEditing }) => (\n    <DialogActions\n        classes={{\n            root: cn(classes.actions, receivedClasses.actions)\n        }}\n    >\n        <Tooltip\n            title={<FormattedMessage id=\"EditDialog.close.tooltip\" defaultMessage=\"Any modification won't be saved!\" />}\n        >\n            <Button size=\"small\" onClick={onClose}>\n                <FormattedMessage id=\"Main.lang.close\" defaultMessage=\"Close\" />\n            </Button>\n        </Tooltip>\n        {isEditing && (\n            <Button\n                variant={fullScreen ? 'contained' : 'text'}\n                type=\"submit\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={handleSubmit}\n            >\n                <FormattedMessage id=\"Main.lang.save\" defaultMessage=\"Save\" />\n            </Button>\n        )}\n    </DialogActions>\n);\n\nexport const EditDialog = EditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.styles = void 0;
var styles_utils_1 = require("../styles/utils/styles_utils");
var center = styles_utils_1.flexUtils.center;
var styles_1 = require("@material-ui/core/styles");
exports.styles = styles_1.createStyles({
    container: __assign({ height: 'fit-content', width: 'fit-content', maxWidth: '100%', borderRadius: 5, margin: "10px 7.5px", padding: "12px 22px", color: '#fff', cursor: 'pointer', position: 'relative', overflow: 'hidden', border: 'none', backgroundColor: 'unset' }, center),
    withColor: {},
    applyToChildrenSameColorAsMyself: {
        '&$withColor': {
            color: 'currentColor',
        },
        '&:not($withColor)': {
            color: '#4e4e4e',
        },
        '& > $typography, & > $brightLayer': {
            color: 'currentColor',
        },
    },
    lightenBrightLayerAndTypography: {
        '& > $brightLayer, & > $typography': {
            color: '#fff',
        },
    },
    contained: {
        backgroundColor: 'currentColor',
        '&$withColor ': {
            extend: 'lightenBrightLayerAndTypography',
        },
    },
    raised: {
        backgroundColor: 'currentColor',
        '&$withColor ': {
            extend: 'lightenBrightLayerAndTypography',
        },
    },
    text: {
        extend: 'applyToChildrenSameColorAsMyself',
    },
    outlined: {
        extend: 'text',
        border: "1px solid currentColor",
    },
    disabled: {
        cursor: 'not-allowed',
    },
    size_small: {
        padding: "10px 14px",
        '& > $typography': {
            fontSize: 12,
        },
    },
    brightLayer: {
        height: '100%',
        width: '100%',
        position: 'absolute',
        top: 0,
        left: 0,
        backgroundColor: 'currentColor',
        zIndex: 1,
    },
    typography: {
        display: 'flex',
        alignItems: 'center',
    },
});

"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var framer_motion_1 = require("framer-motion");
var typography_1 = require("../typography/typography");
var styles_2 = require("../styles");
var button_styles_1 = require("./button_styles");
var merge_1 = __importDefault(require("lodash/merge"));
var useStyles = styles_1.makeStyles(button_styles_1.styles);
var ButtonComponent = function (_a) {
    var _b = _a.component, Component = _b === void 0 ? framer_motion_1.motion.button : _b, className = _a.className, containerRef = _a.containerRef, disabled = _a.disabled, size = _a.size, _c = _a.color, color = _c === void 0 ? 'default' : _c, containerProps = _a.containerProps, 
    // @deprecated please use classes.typography
    typographyClassName = _a.typographyClassName, variant = _a.variant, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, onFocus = _a.onFocus, onBlur = _a.onBlur, onClick = _a.onClick, children = _a.children, _d = _a.customClasses, oldCustomClasses = _d === void 0 ? {} : _d, _e = _a.classes, receivedClasses = _e === void 0 ? {} : _e, propsStyle = _a.style, other = __rest(_a, ["component", "className", "containerRef", "disabled", "size", "color", "containerProps", "typographyClassName", "variant", "onMouseEnter", "onMouseLeave", "onFocus", "onBlur", "onClick", "children", "customClasses", "classes", "style"]);
    var theme = styles_1.useTheme();
    var mergedClasses = react_1.useMemo(function () { return merge_1.default({}, oldCustomClasses, receivedClasses); }, [
        JSON.stringify(oldCustomClasses),
        JSON.stringify(receivedClasses),
    ]);
    var classes = useStyles({ classes: mergedClasses });
    var hexColor = react_1.useMemo(function () { return styles_2.getHexFromTheme(theme, color); }, [theme, color]);
    var withColor = react_1.useMemo(function () { return disabled || (color && color !== 'default' && hexColor); }, [disabled, hexColor]);
    var colorMotion = { color: styles_2.getComponentColor(true, hexColor, disabled) };
    var handleClick = react_1.useCallback(function () {
        var paramaters = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            paramaters[_i] = arguments[_i];
        }
        if (disabled) {
            return;
        }
        if (typeof onClick === 'function') {
            onClick.apply(void 0, paramaters);
        }
    }, [onClick, disabled]);
    var classesSizes = size && "size_" + size;
    return (react_1.default.createElement(Component, __assign({ ref: containerRef, className: classnames_1.default(className, classes.container, disabled && classes.disabled, withColor && classes.withColor, variant && classes[variant], 
        // @ts-ignore
        classesSizes && classes[classesSizes], oldCustomClasses.container) }, containerProps, { style: __assign(__assign(__assign({}, propsStyle), (withColor && colorMotion)), (containerProps && containerProps.style)), onClick: handleClick }, other),
        react_1.default.createElement(framer_motion_1.motion.div, { className: classes.brightLayer, initial: { opacity: 0 }, whileHover: { opacity: variant !== 'contained' ? 0.1 : 0.2 } }),
        react_1.default.createElement(typography_1.Typography, { className: classnames_1.default(classes.typography, oldCustomClasses.typography), variant: "button" }, children)));
};
var RaisedButton = function (props) {
    var theme = styles_1.useTheme();
    var disabled = props.disabled, color = props.color;
    var motionProps = {
        boxShadow: "0 " + (color ? 5 : 10) + "px " + (color ? 15 : 20) + "px 0 " + styles_2.getComponentColor(Boolean(color), styles_2.getHexFromTheme(theme, color, 200), disabled),
    };
    return react_1.default.createElement(ButtonComponent, __assign({}, props, (!disabled && { animate: motionProps })));
};
var Button = function (props, containerRef) {
    var _a = props.variant, variant = _a === void 0 ? 'text' : _a, other = __rest(props, ["variant"]);
    if (variant === 'raised') {
        return react_1.default.createElement(RaisedButton, __assign({}, { variant: variant, containerRef: containerRef }, other));
    }
    return react_1.default.createElement(ButtonComponent, __assign({}, { variant: variant, containerRef: containerRef }, other));
};
exports.Button = Button;

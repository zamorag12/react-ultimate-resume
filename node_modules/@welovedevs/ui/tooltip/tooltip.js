"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var get_1 = __importDefault(require("lodash/get"));
var popper_card_1 = require("../popper_card/popper_card");
var use_opener_state_1 = require("../hooks/use_opener_state");
var tooltip_styles_1 = require("./tooltip_styles");
var merge_1 = __importDefault(require("lodash/merge"));
var useStyles = styles_1.makeStyles(tooltip_styles_1.styles);
var fusionFunctions = function () {
    var functions = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        functions[_i] = arguments[_i];
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        functions.forEach(function (fn) {
            if (typeof fn === 'function') {
                fn.apply(void 0, args);
            }
        });
    };
};
var TooltipComponent = function (_a) {
    var title = _a.title, placement = _a.placement, children = _a.children, _b = _a.customClasses, oldCustomClasses = _b === void 0 ? {} : _b, _c = _a.classes, receivedClasses = _c === void 0 ? {} : _c;
    var mergedClasses = react_1.useMemo(function () { return merge_1.default({}, oldCustomClasses, receivedClasses); }, [
        JSON.stringify(oldCustomClasses),
        JSON.stringify(receivedClasses),
    ]);
    var classes = useStyles({ classes: mergedClasses });
    var anchorReference = react_1.useRef();
    var _d = use_opener_state_1.useOpenerState(), open = _d[0], eventsHandlerElementProps = _d[1];
    var childProps = react_1.useMemo(function () {
        if (!eventsHandlerElementProps) {
            return {};
        }
        // @ts-ignore/
        var props = children.props;
        return __assign({ ref: anchorReference }, Object.entries(eventsHandlerElementProps).reduce(function (acc, _a) {
            var eventKey = _a[0], eventFn = _a[1];
            var newAcc = __assign({}, acc);
            var inPropsFunction = props[eventKey];
            if (inPropsFunction) {
                newAcc[eventKey] = fusionFunctions(inPropsFunction, eventFn);
            }
            else {
                newAcc[eventKey] = eventFn;
            }
            return newAcc;
        }, props || {}));
    }, [children, eventsHandlerElementProps, anchorReference]);
    var childChildren = react_1.useMemo(function () {
        var propsChildren = get_1.default(children, 'props.children');
        return (react_1.default.createElement(react_1.default.Fragment, null,
            propsChildren,
            react_1.default.createElement(TooltipPopper, __assign({ anchorElement: anchorReference.current }, {
                title: title,
                open: open,
                placement: placement,
                classes: classes,
            }))));
    }, [open, anchorReference, title, placement, classes]);
    // @ts-ignore
    return react_1.cloneElement(children, childProps, childChildren);
};
var TooltipPopper = function (_a) {
    var title = _a.title, open = _a.open, anchorElement = _a.anchorElement, _b = _a.placement, placement = _b === void 0 ? 'top' : _b, classes = _a.classes;
    return (react_1.default.createElement(popper_card_1.PopperCard, __assign({ dismissArrow: true }, { open: open, anchorElement: anchorElement }, { classes: {
            popper: classnames_1.default(classes.popper),
            container: classnames_1.default(classes.container),
        }, popperProps: {
            placement: placement,
            modifiers: {
                preventOverflow: {
                    boundariesElement: 'viewport',
                },
                arrow: {
                    enabled: false,
                },
            },
        } }), title));
};
exports.Tooltip = TooltipComponent;

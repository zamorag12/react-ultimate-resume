"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListItem = void 0;
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var framer_motion_1 = require("framer-motion");
var typography_1 = require("../typography/typography");
var list_item_styles_1 = require("./list_item_styles");
var useStyles = styles_1.makeStyles(list_item_styles_1.styles);
var ListItem = function (_a) {
    var _b = _a.component, Component = _b === void 0 ? framer_motion_1.motion.li : _b, className = _a.className, typographyClassName = _a.typographyClassName, button = _a.button, style = _a.style, children = _a.children, additionalClasses = _a.classes, other = __rest(_a, ["component", "className", "typographyClassName", "button", "style", "children", "classes"]);
    var classes = useStyles({ classes: additionalClasses });
    return (react_1.default.createElement(Component, __assign({ className: classnames_1.default(classes.container, button && classes.button, className) }, style, { initial: { backgroundColor: 'rgba(0, 0, 0, 0)' }, whileHover: { backgroundColor: 'rgba(0, 0, 0, .075)' } }, (button && {
        role: 'button',
    }), other),
        react_1.default.createElement(typography_1.Typography, { className: classnames_1.default(classes.typography, typographyClassName), color: "dark" }, children)));
};
exports.ListItem = ListItem;

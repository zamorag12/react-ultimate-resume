"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Typography = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var styles_utils_1 = require("../styles/utils/styles_utils");
var typography_styles_1 = require("./typography_styles");
var merge_1 = __importDefault(require("lodash/merge"));
var useStyles = styles_1.makeStyles(typography_styles_1.styles);
var TypographyComponent = function (_a) {
    var containerRef = _a.containerRef, className = _a.className, color = _a.color, _b = _a.component, Component = _b === void 0 ? 'span' : _b, _c = _a.variant, variant = _c === void 0 ? 'body1' : _c, receivedStyle = _a.style, _d = _a.customClasses, oldCustomClasses = _d === void 0 ? {} : _d, _e = _a.classes, receivedClasses = _e === void 0 ? {} : _e, other = __rest(_a, ["containerRef", "className", "color", "component", "variant", "style", "customClasses", "classes"]);
    var mergedClasses = react_1.useMemo(function () { return merge_1.default({}, oldCustomClasses, receivedClasses); }, [
        JSON.stringify(oldCustomClasses),
        JSON.stringify(receivedClasses),
    ]);
    var classes = useStyles({ classes: mergedClasses });
    var theme = styles_1.useTheme();
    var style = react_1.useMemo(function () {
        if (color) {
            var hex = styles_utils_1.getComponentColor(true, styles_utils_1.getHexFromTheme(theme, color), false);
            if (['wld1', 'wld2', 'wld3', 'wld4', 'wld5', 'wld6'].some(function (key) { return variant === key; })) {
                if (color === 'secondary') {
                    return {
                        backgroundColor: hex,
                        color: '#fff',
                    };
                }
                if (color === 'tertiary') {
                    return {
                        color: styles_utils_1.getComponentColor(true, styles_utils_1.getHexFromTheme(theme, 'primary'), false),
                        backgroundColor: hex,
                    };
                }
                return {
                    color: styles_utils_1.getComponentColor(true, styles_utils_1.getHexFromTheme(theme, 'primary'), false),
                };
            }
            return {
                color: hex,
            };
        }
        return null;
    }, [variant, theme, color]);
    return (react_1.default.createElement(Component, __assign({ className: classnames_1.default(classes.container, classes[variant], className), style: __assign(__assign({}, style), receivedStyle) }, other, { ref: containerRef })));
};
exports.Typography = TypographyComponent;

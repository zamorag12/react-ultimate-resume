"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var framer_motion_1 = require("framer-motion");
var get_1 = __importDefault(require("lodash/get"));
var react_measure_1 = __importDefault(require("react-measure"));
var styles_2 = require("../styles");
var switch_styles_1 = require("./switch_styles");
var merge_1 = __importDefault(require("lodash/merge"));
var useStyles = styles_1.makeStyles(switch_styles_1.styles);
var Switch = function (_a) {
    var containerRef = _a.containerRef, _b = _a.checked, checked = _b === void 0 ? false : _b, disabled = _a.disabled, color = _a.color, className = _a.className, inputClassName = _a.inputClassName, containerProps = _a.containerProps, onChange = _a.onChange, size = _a.size, _c = _a.customClasses, oldCustomClasses = _c === void 0 ? {} : _c, _d = _a.classes, receivedClasses = _d === void 0 ? {} : _d, other = __rest(_a, ["containerRef", "checked", "disabled", "color", "className", "inputClassName", "containerProps", "onChange", "size", "customClasses", "classes"]);
    var theme = styles_1.useTheme();
    var mergedClasses = react_1.useMemo(function () { return merge_1.default({}, oldCustomClasses, receivedClasses); }, [
        JSON.stringify(oldCustomClasses),
        JSON.stringify(receivedClasses),
    ]);
    var classes = useStyles({ classes: mergedClasses });
    var hexColor = react_1.useMemo(function () { return styles_2.getHexFromTheme(theme, color); }, [theme, color]);
    var containerStyleProps = {
        color: styles_2.getComponentColor(true, hexColor, disabled, styles_2.getHexFromTheme(theme, 'dark', 50)),
    };
    var _e = react_1.useState(null), thumbWidth = _e[0], setThumbWidth = _e[1];
    var handleChange = react_1.useCallback(function () {
        var parameters = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            parameters[_i] = arguments[_i];
        }
        if (disabled) {
            return;
        }
        if (typeof onChange === 'function') {
            onChange.apply(void 0, parameters);
        }
    }, [disabled, onChange]);
    var handleThumbResize = react_1.useCallback(function (_a) {
        var width = _a.bounds.width;
        if (width !== thumbWidth) {
            setThumbWidth(width);
        }
    }, [thumbWidth]);
    var sizeClasses = size && "size_" + size;
    return (react_1.default.createElement(framer_motion_1.motion.div, __assign({ ref: containerRef, className: classnames_1.default(className, classes.container, disabled && classes.disabled, sizeClasses && classes[sizeClasses]), style: __assign({}, get_1.default(containerProps, 'style')), animate: __assign({}, containerStyleProps) }, containerProps, { initial: "initial", whileHover: "hover" }),
        react_1.default.createElement(framer_motion_1.motion.div, { className: classes.thumbContainer, animate: {
                x: "calc(" + (checked ? 0 : -100) + "% + " + thumbWidth + "px)",
                width: "calc(100% - " + thumbWidth + "px)",
            }, transition: { type: 'tween' } },
            react_1.default.createElement(react_measure_1.default, { bounds: true, onResize: handleThumbResize }, function (_a) {
                var measureRef = _a.measureRef;
                return (react_1.default.createElement("span", { ref: measureRef },
                    react_1.default.createElement("div", { className: classes.thumb })));
            })),
        react_1.default.createElement(framer_motion_1.motion.div, { className: classes.brightLayer, variants: { initial: { opacity: 0 }, hover: { opacity: 0.3 } } }),
        react_1.default.createElement("input", __assign({ className: classnames_1.default(classes.input, inputClassName), type: "checkbox", onChange: handleChange }, { checked: checked }, other))));
};
exports.Switch = Switch;

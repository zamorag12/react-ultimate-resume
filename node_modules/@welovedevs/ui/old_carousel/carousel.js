"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Carousel = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var react_slick_1 = __importDefault(require("react-slick"));
var react_emoji_render_1 = require("react-emoji-render");
var framer_motion_1 = require("framer-motion");
var core_1 = require("@material-ui/core");
var button_1 = require("../button/button");
var typography_1 = require("../typography/typography");
var carousel_styles_1 = require("./carousel_styles");
require("./override_nuka.scss");
var swipe_component_1 = require("../assets/icons/swipe_component");
var arrow_component_1 = require("../assets/icons/arrow_component");
var useStyles = styles_1.makeStyles(carousel_styles_1.styles);
var NavigateButton = function (_a) {
    var className = _a.className, classes = _a.classes, reverse = _a.reverse, onClick = _a.onClick, buttonClassName = _a.buttonProps.className, currentSlide = _a.currentSlide, slideCount = _a.slideCount, arrowRole = _a.arrowRole;
    if (arrowRole === 'prev' && currentSlide === 0) {
        return null;
    }
    if (arrowRole === 'next' && currentSlide === slideCount - 1) {
        return null;
    }
    return (react_1.default.createElement(framer_motion_1.motion.button, { onClick: onClick, className: classnames_1.default(className, buttonClassName, classes.navigateButton, reverse && classes.reverseButton), type: "button", initial: { scale: 1 }, whileHover: { scale: 0.9 } },
        react_1.default.createElement(arrow_component_1.ArrowIcon, null)));
};
var CarouselStep = function (_a) {
    var fullScreen = _a.fullScreen, freelyStructuredSteps = _a.freelyStructuredSteps, step = _a.step, onAction = _a.onAction, onDismiss = _a.onDismiss, classes = _a.classes;
    return (react_1.default.createElement("div", { className: classnames_1.default(classes.carouselStep, fullScreen && classes.carouselStepFullScreen) },
        react_1.default.createElement(StepContent, __assign({}, {
            fullScreen: fullScreen,
            freelyStructuredSteps: freelyStructuredSteps,
            step: step,
            onAction: onAction,
            onDismiss: onDismiss,
            classes: classes,
        }))));
};
var StepContent = function (_a) {
    var freelyStructuredSteps = _a.freelyStructuredSteps, fullScreen = _a.fullScreen, step = _a.step, onAction = _a.onAction, onDismiss = _a.onDismiss, classes = _a.classes;
    var isMobile = core_1.useMediaQuery('(max-width: 500px)');
    if (freelyStructuredSteps) {
        return step({ onAction: onAction, isMobile: isMobile, fullScreen: fullScreen });
    }
    return react_1.default.createElement(StructuredStep, __assign({}, { onAction: onAction, step: step, isMobile: isMobile, onDismiss: onDismiss, classes: classes }));
};
var StructuredStep = function (_a) {
    var onAction = _a.onAction, step = _a.step, isMobile = _a.isMobile, onDismiss = _a.onDismiss, classes = _a.classes;
    var _b = useIntl(), formatMessage = _b.formatMessage, formatHTMLMessage = _b.formatHTMLMessage;
    var imgHandle = step.imgHandle, videoLink = step.videoLink, subtitle = step.subtitle, title = step.title, dismissButtonText = step.dismissButtonText, buttonText = step.buttonText, dismissable = step.dismissable, onClickPayload = step.onClickPayload;
    var helpClicked = react_1.useCallback(function () {
        talkus('sendMessage', formatMessage(translations.talkusNeedHelp));
    }, [formatMessage]);
    var handleAction = react_1.useCallback(function () {
        onAction(onClickPayload);
    }, [onAction, onClickPayload]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { className: classes.heading },
            react_1.default.createElement(FilestackImage, { className: classes.backgroundBlur, handle: "PghPn9c7QeuQeZXiyrOM", additionalTasks: "resize=width:600,height:340,fit:clip", quality: 90 }),
            videoLink && (react_1.default.createElement(ReactPlayer, { className: classes.video, playing: true, loop: true, url: videoLink, autoPlay: true, width: "100%", height: "100%" })),
            imgHandle && (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(FilestackImage, { className: classes.frontImage, handle: imgHandle, additionalTasks: "resize=width:600,height:340,fit:clip", quality: 90 })))),
        react_1.default.createElement("div", { className: classes.body },
            react_1.default.createElement("div", { className: classes.bodyWrapper },
                title && (react_1.default.createElement(typography_1.Typography, { className: classes.title, variant: "h3", component: function (_a) {
                        var children = _a.children, other = __rest(_a, ["children"]);
                        return (react_1.default.createElement("span", __assign({ dangerouslySetInnerHTML: {
                                __html: typeof title === 'string' ? title : formatHTMLMessage(title),
                            } }, other)));
                    } })),
                subtitle && (react_1.default.createElement(typography_1.Typography, { className: classes.title, component: function (_a) {
                        var children = _a.children, other = __rest(_a, ["children"]);
                        return (react_1.default.createElement("span", __assign({ dangerouslySetInnerHTML: {
                                __html: typeof subtitle === 'string' ? subtitle : formatHTMLMessage(subtitle),
                            } }, other)));
                    } })),
                react_1.default.createElement("div", { className: classes.buttons },
                    dismissable && (react_1.default.createElement(button_1.Button, { onClick: onDismiss, variant: "contained", style: { color: 'white' } },
                        react_1.default.createElement(react_emoji_render_1.Twemoji, { svg: true, text: formatMessage(dismissButtonText || translations.noThanks) }))),
                    onClickPayload && (react_1.default.createElement(button_1.Button, { variant: "contained", size: isMobile && 'small', color: "primary", onClick: handleAction },
                        react_1.default.createElement(react_emoji_render_1.Twemoji, { svg: true, text: formatMessage(buttonText || translations.ok) })))))),
        isMobile && react_1.default.createElement(swipe_component_1.SwipeIcon, { className: classes.swipeIcon }),
        react_1.default.createElement(typography_1.Typography, { className: classes.iNeedHelp, onClick: helpClicked, component: function (_a) {
                var children = _a.children, other = __rest(_a, ["children"]);
                return react_1.default.createElement(react_emoji_render_1.Twemoji, __assign({ svg: true, text: children }, other));
            } }, formatMessage(translations.needHelp))));
};
var CarouselComponent = function (_a) {
    var open = _a.open, onCarouselEnd = _a.onCarouselEnd, onClick = _a.onClick, onDismiss = _a.onDismiss, onClose = _a.onClose, steps = _a.steps, fullScreen = _a.fullScreen, children = _a.children, _b = _a.customClasses, customClasses = _b === void 0 ? {} : _b;
    var classes = useStyles(carousel_styles_1.styles);
    var carouselRef = react_1.useRef();
    var handleAction = react_1.useCallback(function (_a) {
        var action = _a.action;
        if (action === CAROUSEL_ACTIONS.STEP_END) {
            onCarouselEnd();
        }
        else if (action === CAROUSEL_ACTIONS.NEXT) {
            carouselRef.current.slickNext();
        }
        else if (action === CAROUSEL_ACTIONS.PREV) {
            carouselRef.current.slickPrev();
        }
    }, [carouselRef.current, onCarouselEnd]);
    react_1.useEffect(function () {
        if (carouselRef.current) {
            carouselRef.current.slickGoTo(0);
        }
    }, [steps]);
    return (react_1.default.createElement(core_1.Dialog, __assign({ classes: { paper: classnames_1.default(classes.dialogPaper, customClasses.dialogPaper) } }, { open: open, onClose: onClose, fullScreen: fullScreen }),
        react_1.default.createElement(react_slick_1.default, { ref: carouselRef, dots: true, infinite: false, prevArrow: react_1.default.createElement(NavigateButton, __assign({}, { classes: classes }, { arrowRole: "prev", buttonProps: { className: classes.previousButton } })), nextArrow: react_1.default.createElement(NavigateButton, __assign({}, { classes: classes }, { arrowRole: "next", buttonProps: { className: classes.nextButton }, reverse: true })) }, steps.map(function (step, stepIndex) { return (react_1.default.createElement(CarouselStep, __assign({ key: "carousel_step_" + stepIndex, onAction: handleAction }, {
            fullScreen: fullScreen,
            classes: classes,
            onDismiss: onDismiss,
            step: step,
            onClick: onClick,
        }))); })),
        children));
};
exports.Carousel = CarouselComponent;

"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextField = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var styles_1 = require("@material-ui/core/styles");
var text_field_styles_1 = require("./text_field_styles");
var merge_1 = __importDefault(require("lodash/merge"));
var core_1 = require("@material-ui/core");
var VisibilityOff_1 = __importDefault(require("@material-ui/icons/VisibilityOff"));
var Visibility_1 = __importDefault(require("@material-ui/icons/Visibility"));
var useStyles = styles_1.makeStyles(text_field_styles_1.styles);
var DEFAULT_STYLE_PROPS = {
    boxShadow: '0 7.5px 15px 0 #e4e4e4',
};
var TextFieldComponent = function (_a) {
    var _b = _a.containerElement, ContainerElement = _b === void 0 ? 'div' : _b, containerProps = _a.containerProps, className = _a.className, inputClassName = _a.inputClassName, fullWidth = _a.fullWidth, inputRef = _a.inputRef, containerRef = _a.containerRef, _c = _a.beforeChildren, beforeChildren = _c === void 0 ? null : _c, multiline = _a.multiline, rows = _a.rows, children = _a.children, _d = _a.variant, variant = _d === void 0 ? 'raised' : _d, _e = _a.type, type = _e === void 0 ? 'text' : _e, disabled = _a.disabled, _f = _a.customClasses, oldCustomClasses = _f === void 0 ? {} : _f, _g = _a.classes, receivedClasses = _g === void 0 ? {} : _g, other = __rest(_a, ["containerElement", "containerProps", "className", "inputClassName", "fullWidth", "inputRef", "containerRef", "beforeChildren", "multiline", "rows", "children", "variant", "type", "disabled", "customClasses", "classes"]);
    var mergedClasses = react_1.useMemo(function () { return merge_1.default({}, oldCustomClasses, receivedClasses); }, [
        JSON.stringify(oldCustomClasses),
        JSON.stringify(receivedClasses),
    ]);
    var classes = useStyles({ classes: mergedClasses });
    var InputComponent = multiline ? 'textarea' : 'input';
    var isPassword = type === 'password';
    var _h = react_1.useState(false), showHidePassword = _h[0], changeShowHidePassword = _h[1];
    var togglePasswordVisiblity = function () {
        changeShowHidePassword(!showHidePassword);
    };
    return (react_1.default.createElement(ContainerElement, __assign({ ref: containerRef, className: classnames_1.default(className, classes.container, fullWidth && classes.fullWidth, multiline && classes.multilineContainer, classes[variant], 
        // @ts-ignore
        disabled && classes[variant + "Disabled"]) }, (containerProps &&
        containerProps.style && {
        style: containerProps.style,
    }), containerProps),
        beforeChildren,
        react_1.default.createElement(InputComponent, __assign({ ref: inputRef, className: classnames_1.default(inputClassName, classes.input, multiline && classes.multiline), type: showHidePassword ? 'text' : type }, { rows: rows, disabled: disabled }, other)),
        isPassword && (react_1.default.createElement(core_1.IconButton, { title: "Show/Hide password", className: classes.icon, onClick: togglePasswordVisiblity }, showHidePassword ? react_1.default.createElement(VisibilityOff_1.default, null) : react_1.default.createElement(Visibility_1.default, null))),
        children));
};
var RaisedTextField = function (_a) {
    var onFocus = _a.onFocus, onBlur = _a.onBlur, containerProps = _a.containerProps, other = __rest(_a, ["onFocus", "onBlur", "containerProps"]);
    var _b = react_1.useState(DEFAULT_STYLE_PROPS), styleProps = _b[0], setStyleProps = _b[1];
    var handleFocus = react_1.useCallback(function () {
        var parameters = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            parameters[_i] = arguments[_i];
        }
        if (typeof onFocus === 'function') {
            onFocus.apply(void 0, parameters);
        }
        setStyleProps({ boxShadow: '0 10px 20px 0 #dadada' });
    }, [onFocus]);
    var handleBlur = react_1.useCallback(function () {
        var parameters = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            parameters[_i] = arguments[_i];
        }
        if (typeof onBlur === 'function') {
            onBlur.apply(void 0, parameters);
        }
        setStyleProps(DEFAULT_STYLE_PROPS);
    }, [onBlur]);
    return (react_1.default.createElement(TextFieldComponent, __assign({ containerElement: 'div', containerProps: __assign(__assign({}, containerProps), { style: __assign(__assign({}, (containerProps && containerProps.style)), styleProps) }), onFocus: handleFocus, onBlur: handleBlur }, other)));
};
var WithVariantTextField = function (_a) {
    var _b = _a.variant, variant = _b === void 0 ? 'raised' : _b, other = __rest(_a, ["variant"]);
    if (variant === 'raised') {
        return react_1.default.createElement(RaisedTextField, __assign({}, { variant: variant }, other));
    }
    return react_1.default.createElement(TextFieldComponent, __assign({}, { variant: variant }, other));
};
exports.TextField = WithVariantTextField;
